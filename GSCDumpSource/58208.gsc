// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

battle_tracks_getnewtogglestate()
{
    var_0 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "veh_a10fd", 1 );
    var_0.destroycallback = ::battle_stations;
    var_0._id_12F50 = "tur_gun_fd_mp";
    battle_tracks_hidetogglewidget();
    battle_tracks_gettrackindex();
    battle_tracks_isbattletracksowner();
    battle_tracks_getsfxalias();
    battle_tracks_getplayerdataenum();
    battle_tracks_gettogglestate();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "veh_a10fd", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "veh_a10fd", "init" ) ]]();

    battle_tracks_monitorstandingonvehicles();
    level.binoculars_onstateinvalidenter = getdvarint( "scr_br_dauntless_start_in_the_air", 0 );
    level.binoculars_checkexpirationtimer = getdvarint( "scr_br_dauntless_drop_bomb_ammo", 1 );
    level.binoculars_cansee = getdvarint( "scr_br_dauntless_auto_refill_drop_bomb_time", 15 );
    level.binoculars_onstateexitfunc = getdvarint( "scr_br_dauntless_speed_no_damage", 75 );
    level.binoculars_onstateenterfunc = getdvarint( "scr_br_dauntless_speed_little_damage", 115 );
    level.binoculars_giveassistpoints = getdvarint( "scr_br_dauntless_drop_bomb_cooldown_ms", 6000 );
    level.binoculars_checkpendingtimer = getdvarfloat( "scr_br_dauntless_drop_bomb_vehicle_dmg", 0.85 );
    level.binoculars_clearpendingtimer = getdvarfloat( "scr_br_dauntless_gunner_time_between_bullets", 0.1 );
    level.binoculars_cleanupheadiconondisconnect = getdvarint( "scr_br_dauntless_enable_sonar", 1 );
    level.binoculars_iswithinprojectiondistance_compute = getdvarint( "scr_br_dauntless_sonar_scan_angle", 30 );
    level.binoculars_ongive = getdvarint( "scr_br_dauntless_sonar_scan_range", 8000 );
    level.binoculars_isads = getdvarfloat( "scr_br_dauntless_sonar_scan_accuracy", 0.9 );
    level.binoculars_getpendingtime = getdvarfloat( "scr_br_dauntless_pitch_collision_value", 20 );
    level.binoculars_hascoldblooded = getdvarfloat( "scr_br_dauntless_roll_collision_value", 20 );
    level.binoculars_getmaxrange = getdvarint( "scr_br_dauntless_contrails_min_speed", 70 );
    level.kiosksearchradiusmin = getdvarfloat( "scr_fd_dmg_factor_fuselage", 1.0 );
    level.kothtotaltime = getdvarfloat( "scr_fd_dmg_factor_tail_stabilizer", 1.0 );
    level.knock_player_forward = getdvarfloat( "scr_fd_dmg_factor_main_rotor", 1.2 );
    level.kothlaststarttime = getdvarfloat( "scr_fd_dmg_factor_tail_rotor", 1.0 );
    level.kiosksetupfiresaleforplayer = getdvarfloat( "scr_fd_dmg_factor_landing_gear", 0.5 );
    level.kiosksearchradiusmax = getdvarfloat( "scr_fd_dmg_factor_driverless_collision", 10.0 );
    level.ks_circledelaytime = getdvarfloat( "scr_fd_impulse_dmg_threshold_high", 0.9 );
    level.ks_circlecount = getdvarfloat( "scr_fd_impulse_dmg_threshold_mid", 0.9 );
    level.ks_circleclosetime = getdvarfloat( "scr_fd_impulse_dmg_threshold_low", 0.1 );
    level.ks_airdropcratearmor = getdvarfloat( "scr_fd_impulse_dmg_factor_low", 0.1 );
    level.ks_airdroppercircle = getdvarfloat( "scr_fd_impulse_dmg_factor_mid_low", 0.2 );
    level.ks_airdropcrateusetime = getdvarfloat( "scr_fd_impulse_dmg_factor_mid_high", 0.75 );
    level.ks_circlemovedist = getdvarfloat( "scr_fd_dmg_pitch_roll_threshold", 55.0 );
    level.ks_circleminimapradius = getdvarfloat( "scr_fd_dmg_pitch_roll_factor", 10.0 );
    level.ks_circlemoving = getdvarfloat( "scr_fd_wood_surf_dmg_scalar", 0.6 );
    battle_tracks_hasemptybattletracks();
}

battle_tracks_hasemptybattletracks()
{
    thread _id_1247F();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "veh_a10fd", "initLate" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "veh_a10fd", "initLate" ) ]]();

    level._effect["aircraft_bomb_explode"] = loadfx( "vfx/iw8_br/island/veh/vfx_br3_bomber_exp.vfx" );
    battle_tracks_toggleonstate();
}

battle_tracks_hidetogglewidget()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforvehicle( "veh_a10fd", 1 );
    var_0.enterstartcallback = ::base_assault_intro_vo;
    var_0.enterendcallback = ::barrel_think;
    var_0.exitstartcallback = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_exitstartcallback;
    var_0.exitendcallback = ::basic_combat;
    var_0.reentercallback = ::battle_tracks_settogglestate;
    var_0.restrictions = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getdriverrestrictions();
    var_0.exitextents["front"] = 175;
    var_0.exitextents["back"] = 180;
    var_0.exitextents["left"] = 68;
    var_0.exitextents["right"] = 68;
    var_0.exitextents["top"] = 138;
    var_0.exitextents["bottom"] = 0;
    var_0.allowairexit = 1;
    var_1 = "back_left";
    var_0.exitoffsets[var_1] = ( -130, 70, -45 );
    var_0.exitdirections[var_1] = "left";
    var_1 = "back_right";
    var_0.exitoffsets[var_1] = ( -130, -70, -45 );
    var_0.exitdirections[var_1] = "right";
    var_1 = "back";
    var_0.exitoffsets[var_1] = ( -255, 0, -45 );
    var_0.exitdirections[var_1] = "back";
    var_2 = [ "pilot", "gunner" ];
    var_3 = "pilot";
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforseat( "veh_a10fd", var_3, 1 );
    var_4.seatswitcharray = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_generateseatswitcharray( var_3, var_2 );
    var_4.exitids = [ "back_left", "back_right", "back" ];
    var_4.restrictions = scripts\cp_mp\vehicles\vehicle_occupancy::_id_13247();
    var_4._id_12F49 = getcompleteweaponname( "tur_gun_fd_mp" );
    var_4.animtag = "tag_seat_0";
    var_4.underbridge_reinforce_enemy_monitor = "ping_vehicle_pilot";
    var_3 = "gunner";
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforseat( "veh_a10fd", var_3, 1 );
    var_4.seatswitcharray = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_generateseatswitcharray( var_3, var_2 );
    var_4.exitids = [ "back_left", "back_right", "back" ];
    var_4.restrictions = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getpassivepassengerrestrictions();
    var_4.animtag = "tag_seat_2";
    var_4.underbridge_reinforce_enemy_monitor = "ping_vehicle_gunner";
}

battle_tracks_gettrackindex()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_getleveldataforvehicle( "veh_a10fd", 1 );
    scripts\cp_mp\vehicles\vehicle_interact::_id_1320F( "veh_a10fd", "single", [ "pilot", "gunner" ] );
}

battle_tracks_isbattletracksowner()
{
    var_0 = scripts\cp_mp\utility\vehicle_omnvar_utility::_id_132E1( "veh_a10fd", 1 );
    var_0.id = 19;
    var_0.seatids["pilot"] = 0;
    var_0.seatids["gunner"] = 1;
    var_0._id_12041[0] = 0;
    var_0._id_12041[1] = 1;
    var_0._id_12042["pilot"]["little_bird_mp"] = 0;
    var_0._id_12042["pilot"]["tur_gun_fd_mp"] = 1;
    var_0._id_12042["gunner"]["little_bird_mp"] = 0;
    var_0._id_12042["gunner"]["tur_gun_fd_mp"] = 1;
}

battle_tracks_getsfxalias()
{
    level.binoculars_getfov = getdvarfloat( "scr_br_dauntless_health_override", 3950 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131DF( "veh_a10fd", level.binoculars_getfov, undefined, undefined, undefined, 8 );
    var_0 = scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_getleveldataforvehicle( "veh_a10fd" );
    var_0.class = "heavy";
    var_1 = scripts\cp_mp\vehicles\vehicle_damage::_id_131C2( "veh_a10fd", "heavy" );
    var_1.unfreeze_controls_after_spawn = ::battle_tracks_playerinsidezone;
    var_1.uniquelootitemid = ::battle_tracks_playerselectrandomtracks;
    scripts\cp_mp\vehicles\vehicle_damage::_id_131B3( "veh_a10fd" );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131EB( "veh_a10fd", 17 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131E8( "veh_a10fd", ::battle_tracks_setmusicstate );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131E4( "veh_a10fd", ::barkov_execution_path );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131E6( "veh_a10fd", "pilot", getdvarfloat( "armor_truck_damage_scale", 0.7 ) );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131E5( "veh_a10fd", "pilot", getdvarfloat( "armor_truck_damage_clamp", 15 ) );
    scripts\cp_mp\vehicles\vehicle_damage::_id_131EE( "little_bird_mp", 5 );
}

battle_tracks_getplayerdataenum()
{
    var_0 = _applydvarstosettings::_id_13185( "veh_a10fd", 1 );
    var_0.bridge_one_death_func = 2;
    var_0.givebmodevloadouts = 0.75;
    var_0.getcombatrecordsupermisc = 350;
    var_0.getcoremapdropzones = 525;
    var_0.getcodecomputerdisplaycode = 875;
    var_0.getcrossbowammotype = 5;
    var_0.getcrossbowimpactfunc = 20;
    var_0.getcrateusetime = 40;
    var_0.getdomplateradius = 0;
    var_0.getdropbagdelay = 0;
    var_0.getdomneutralizeomnvarvalue = 0;
}

battle_tracks_gettogglestate()
{
    level._effect["aircraft_explode"] = loadfx( "vfx/iw8_br/island/veh/vfx_br3_dauntless_death_exp.vfx" );
}

battle_tracks_getbattletracksid()
{
    var_0 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "veh_a10fd" );
    return var_0._id_12F50;
}

barelem( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, 0, 0 );

    var_0.modelname = "veh_s4_mil_air_dalpha_wz";
    var_0.targetname = "veh_a10fd";

    if ( !isdefined( var_0.vehicletype ) )
        var_0.vehicletype = "a10_warthog_fd";

    var_2 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnvehicle( var_0, var_1 );

    if ( !isdefined( var_2 ) )
        return undefined;

    var_3 = battle_tracks_getbattletracksid();
    var_4 = battle_tracks_createexternallisteningzone();
    var_5 = barkov_crawl_scene_nostab( var_2, var_3, "veh_s4_mil_air_dalpha_wz_turret_attach", var_4.tag, var_4.tagoffset );
    scripts\cp_mp\vehicles\vehicle::_id_13276( var_2, var_5, getcompleteweaponname( var_3 ) );
    scripts\cp_mp\vehicles\vehicle::_id_131AE( var_2, "veh_a10fd", var_0 );
    var_2.objweapon = getcompleteweaponname( "little_bird_mp" );
    var_2._id_12F50 = var_3;
    var_2.start_reach_pipe_room = 3;
    var_2.init_out_of_bounds_triggers = level.binoculars_checkexpirationtimer;
    var_2.player_on_helipad = 0;
    var_2 thread battle_tracks_tryinittogglestate();
    _applysalesdiscount::_id_131A1( var_2 );
    scripts\cp_mp\vehicles\vehicle::_id_131AF( var_2, var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "veh_a10fd", "create" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "veh_a10fd", "create" ) ]]( var_2 );

    var_2 thread fob_think();
    return var_2;
}

fob_think()
{
    self endon( "death" );
    self vehphys_enablecollisioncallback( 1 );

    if ( getdvarint( "scr_br_fd_invincible", 0 ) )
        return;

    for (;;)
    {
        self waittill( "collision", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );

        if ( isdefined( var_7 ) && isdefined( var_7.helperdronetype ) && var_7.helperdronetype == "radar_drone_recon" )
            continue;

        if ( !istrue( self.player_on_helipad ) )
            continue;

        var_9 = abs( angleclamp180( self.angles[0] ) );

        if ( var_9 < level.binoculars_getpendingtime && abs( self.angles[2] ) < level.binoculars_hascoldblooded && var_7.origin[2] < self.origin[2] )
            continue;

        var_10 = 1.0;

        switch ( var_8 )
        {
            case 0:
                var_10 = level.kiosksearchradiusmin;
                break;
            case 1:
                var_10 = level.kothtotaltime;
                break;
            case 2:
                var_10 = level.knock_player_forward;
                break;
            case 3:
                var_10 = level.kothlaststarttime;
                break;
            case 4:
                var_10 = level.kiosksetupfiresaleforplayer;
                break;
        }

        var_11 = var_6 * var_10;
        var_12 = self.angles[0];

        if ( var_12 > 180 )
            var_12 = var_12 - 360;

        if ( abs( var_12 > level.ks_circlemovedist ) )
            var_11 = var_11 * level.ks_circleminimapradius;

        var_13 = self.angles[2];

        if ( var_13 > 180 )
            var_13 = var_13 - 360;

        if ( abs( var_13 > level.ks_circlemovedist ) )
            var_11 = var_11 * level.ks_circleminimapradius;

        var_14 = 0;

        if ( var_11 > level.ks_circledelaytime )
            var_14 = self.maxhealth;
        else if ( var_11 > level.ks_circlecount )
        {
            var_15 = level.ks_circledelaytime - level.ks_circlecount;
            var_16 = ( var_11 - level.ks_circlecount ) / var_15;
            var_17 = self.maxhealth * level.ks_airdroppercircle;
            var_18 = self.maxhealth * level.ks_airdropcrateusetime;
            var_14 = scripts\engine\math::lerp( var_17, var_18, var_16 );
        }
        else if ( var_11 > level.ks_circleclosetime )
            var_14 = self.maxhealth * level.ks_airdropcratearmor;

        var_19 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getdriver( self );

        if ( !isdefined( var_19 ) )
            var_14 = var_14 * level.kiosksearchradiusmax;
        else if ( self vehicle_getspeed() < level.binoculars_onstateexitfunc )
            var_14 = 0;
        else if ( self vehicle_getspeed() < level.binoculars_onstateenterfunc )
            var_14 = 100;

        if ( var_14 > 0 )
        {
            if ( isdefined( var_19 ) && var_3 == 11534336 )
                var_14 = var_14 * level.ks_circlemoving;

            scripts\cp_mp\vehicles\vehicle_damage::_id_131B9( 1 );
            self dodamage( var_14, var_4, undefined, undefined, "MOD_CRUSH" );
            scripts\cp_mp\vehicles\vehicle_damage::_id_131B9( 0 );
        }

        wait 0.5;
    }
}

battle_tracks_createexternallisteningzone()
{
    var_0 = spawnstruct();

    if ( getdvarint( "aircraft_turret_tag_animate", 0 ) == 1 )
    {
        iprintlnbold( "=== tag_body_animate ===" );
        var_0.tag = "tag_body_animate";
        var_0.tagoffset = ( 58.87, 0, 60.052 );
    }
    else
    {
        var_0.tag = "tag_turret";
        var_0.tagoffset = ( 0, 0, 0 );
    }

    return var_0;
}

barkov_crawl_scene_nostab( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawnturret( "misc_turret", var_0 gettagorigin( var_3 ), var_1, 0 );
    var_5 linkto( var_0, var_3, var_4, ( 0, 0, 0 ) );
    var_5 setmodel( var_2 );
    var_5 setmode( "sentry_offline" );
    var_5 setsentryowner( undefined );
    var_5 makeunusable();
    var_5 setdefaultdroppitch( 0 );
    var_5 setturretmodechangewait( 1 );
    var_5.angles = var_0.angles;
    var_5.vehicle = var_0;
    var_5.maxhealth = 999999;
    var_5.health = var_5.maxhealth;
    return var_5;
}

battle_stations( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
    {
        var_0 = spawnstruct();
        var_0.inflictor = self;
        var_0.objweapon = "little_bird_mp";
        var_0.meansofdeath = "MOD_EXPLOSIVE";
    }

    if ( !istrue( level.suppressvehicleexplosion ) )
    {
        self notify( "predeath" );
        wait 0.2;
    }

    scripts\cp_mp\vehicles\vehicle_damage::_id_131D7( var_0 );

    if ( !istrue( level.suppressvehicleexplosion ) )
        waitframe();

    self setscriptablepartstate( "fx", "base" );
    scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_killoccupants( self, var_0 );
    scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_clearvisuals( undefined, undefined, 1 );
    thread barkov_shooting_path_nostab();

    if ( !istrue( level.suppressvehicleexplosion ) )
    {
        var_2 = self gettagorigin( "tag_origin" );
        var_3 = scripts\engine\utility::ter_op( isdefined( var_0.attacker ) && isent( var_0.attacker ), var_0.attacker, self );
        self radiusdamage( var_2, 256, 200, 80, var_3, "MOD_EXPLOSIVE", "little_bird_mp" );
        playfx( scripts\engine\utility::getfx( "aircraft_explode" ), var_2, anglestoforward( self.angles ), anglestoup( self.angles ) );
        playsoundatpos( var_2, "car_explode" );
        earthquake( 0.4, 800, var_2, 0.7 );
        playrumbleonposition( "grenade_rumble", var_2 );
        physicsexplosionsphere( var_2, 500, 200, 1 );
    }
}

battle_tracks_tryinittogglestate()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0.player_on_right_side_of_subway_car = 0;

    for (;;)
    {
        var_1 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 0 );
        var_2 = [ var_0 ];
        var_3 = scripts\engine\trace::ray_trace( var_0.origin, var_0.origin - ( 0, 0, 250 ), var_2, var_1, 0 );

        if ( isdefined( var_3 ) )
        {
            if ( var_3["hittype"] == "hittype_none" )
                var_0.player_on_helipad = 1;
        }

        if ( self vehicle_getspeed() < 35 )
        {
            var_0.player_on_helipad = 0;
            var_0.player_on_right_side_of_subway_car = 0;
        }

        if ( self vehicle_getspeed() > 35 && var_0.player_on_right_side_of_subway_car == 0 )
        {
            var_0 playsoundonmovingent( "s4_dalpha_takeoff_rev" );
            var_0.player_on_right_side_of_subway_car = 1;
        }

        wait 1.5;
    }
}

barkov_shooting_path_nostab()
{
    scripts\cp_mp\vehicles\vehicle::_id_131F7( self );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "veh_a10fd", "delete" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "veh_a10fd", "delete" ) ]]( self );

    waitframe();
    scripts\cp_mp\vehicles\vehicle::_id_131F8( self );
}

battle_tracks_setmusicstate( var_0 )
{
    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_1321E( self, "armor" ) )
        var_0.damage = var_0.damage * battle_tracks_clearbattletracks();

    if ( isdefined( var_0.damage ) && var_0.damage > 0 )
        self notify( "damage_taken", var_0 );

    return 1;
}

battle_tracks_clearbattletracks()
{
    return 0.8333;
}

barkov_execution_path( var_0 )
{
    thread battle_stations( var_0 );
    return 1;
}

battle_tracks_playerinsidezone( var_0, var_1 )
{
    scripts\cp_mp\vehicles\vehicle_damage::_id_131D8( var_0, var_1 );
}

battle_tracks_playerselectrandomtracks( var_0, var_1 )
{
    scripts\cp_mp\vehicles\vehicle_damage::_id_131DC( var_0, var_1 );
}

_id_1247F()
{
    level.battle_tracks_standingonsamevehiclewithsametracksowner = spawnstruct();
    level.battle_tracks_standingonsamevehiclewithsametracksowner.powers = [];
    apcrespawntime( level.battle_tracks_standingonsamevehiclewithsametracksowner, "dropbomb", "+smoke", ::battle_tracks_stopbattletrackstoalloccupants );
    apcrespawntime( level.battle_tracks_standingonsamevehiclewithsametracksowner, "pilotgunner", "+attack", ::battle_tracks_updatebattletracks );
    apcrespawntime( level.battle_tracks_standingonsamevehiclewithsametracksowner, "lookback", "+melee_zoom", ::battle_tracks_updateexternallisteningzone );
    apcrespawntime( level.battle_tracks_standingonsamevehiclewithsametracksowner, "airplaneping", "+breath_sprint", ::battle_tracks_updatetogglestate );
}

_id_1329F( var_0 )
{
    if ( isbot( self ) )
        return;

    foreach ( var_6, var_2 in var_0.powers )
    {
        foreach ( var_4 in var_2.calloutmarkerping_squadleaderbeaconkillforplayer )
            self notifyonplayercommand( var_6, var_4 );
    }
}

_id_1329E( var_0 )
{
    if ( isbot( self ) )
        return;

    foreach ( var_6, var_2 in var_0.powers )
    {
        foreach ( var_4 in var_2.calloutmarkerping_squadleaderbeaconkillforplayer )
            self notifyonplayercommandremove( var_6, var_4 );
    }
}

apcrespawntime( var_0, var_1, var_2, var_3 )
{
    if ( isstring( var_2 ) )
        var_2 = [ var_2 ];

    var_0.powers[var_1] = spawnstruct();
    var_0.powers[var_1].calloutmarkerping_squadleaderbeaconkillforplayer = var_2;
    var_0.powers[var_1].func = var_3;
}

battle_tracks_updateexternallisteningzone( var_0, var_1 )
{
    var_2 = self;

    if ( !isdefined( var_2.binoculars_endadslogic ) )
        var_2.binoculars_endadslogic = 0;

    if ( istrue( var_2.binoculars_endadslogic ) )
    {
        var_2 cameraunlink();
        var_2.vehicle setentityowner( var_2 );
        var_2 controlslinkto( var_2.vehicle );
        var_2.binoculars_endadslogic = 0;
    }
    else
    {
        var_2 controlsunlink();
        var_2.vehicle setentityowner( undefined );
        var_2 cameralinkto( var_2.vehicle, "tag_camera_front" );
        var_2.binoculars_endadslogic = 1;
    }
}

battle_tracks_updatetogglestate( var_0, var_1 )
{
    var_2 = self;
    level endon( "game_ended" );
    var_2 endon( "disconnect" );
    var_2 setperk( "specialty_radarblip", 1 );
    var_2._id_125C0 = 1;
    var_2.radarmode = "normal_radar";
    var_2.hasradar = 1;
    waitframe();
    var_2._id_125C0 = undefined;
    var_2.hasradar = 0;
    var_2 unsetperk( "specialty_radarblip", 1 );
}

battle_tracks_updatebattletracks( var_0, var_1 )
{
    var_2 = self;

    if ( !isdefined( var_2.vehicle ) )
        return;

    var_2.vehicle.turret.turreton = 1;
    var_2.vehicle.turret setmode( "manual" );
    var_2 thread battle_tracks_updatebattletracksfromplayerdata();
}

battle_tracks_updatebattletracksfromplayerdata()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "exiting_pilot_seat_aircraft" );
    var_0.vehicle endon( "death" );
    var_1 = var_0.vehicle.turret;
    var_2 = 6;

    for (;;)
    {
        var_1 shootturret( "tag_flash", var_2 );
        wait( level.binoculars_clearpendingtimer );

        if ( !var_0 attackbuttonpressed() )
            return;
    }
}

battle_tracks_stopbattletrackstoalloccupants( var_0, var_1 )
{
    var_2 = self;

    if ( !isdefined( var_2.vehicle.init_out_of_bounds_triggers ) )
        var_2.vehicle.init_out_of_bounds_triggers = 1;

    if ( var_2.vehicle.init_out_of_bounds_triggers < 1 )
    {
        if ( isdefined( level._id_1253A ) )
            [[ level._id_1253A ]]( "MP_WZ_ISLAND/DROP_BOMB_NO_AMMO" );

        var_2 playlocalsound( "br_pickup_deny" );
        return;
    }

    var_3 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 0 );
    var_4 = [];
    var_5 = scripts\engine\trace::ray_trace( var_2.vehicle.origin, var_2.vehicle.origin - ( 0, 0, 475 ), var_4, var_3, 0 );

    if ( isdefined( var_5 ) )
    {
        if ( var_5["hittype"] != "hittype_none" )
        {
            if ( isdefined( level._id_1253A ) )
                [[ level._id_1253A ]]( "MP_WZ_ISLAND/DROP_BOMB_GROUND_TOO_CLOSE" );

            var_2 playlocalsound( "br_pickup_deny" );
            return;
        }
    }

    if ( istrue( var_2.vehicle.respawnheightoverride ) )
        return;
    else
        var_2.vehicle.respawnheightoverride = 1;

    var_2 thread battle_tracks_togglestateis();
}

battle_tracks_togglestateis()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_1 = var_0.vehicle;
    var_0 battletracksidstandingonvehicle( var_1.init_out_of_bounds_triggers - 1 );
    var_0 thread battle_tracks_trystopdrivertogglethink( var_1 );

    if ( isdefined( level.binoculars_init ) )
    {
        foreach ( var_3 in level.players )
        {
            if ( var_0 == var_3 )
                continue;

            var_4 = distance2dsquared( var_3.origin, var_1.origin );

            if ( var_4 < 2250000 )
            {
                if ( var_0.team == var_3.team )
                {
                    var_3 thread [[ level.binoculars_init ]]( "br_fd_bomb_alert_ally" );
                    continue;
                }

                var_3 thread [[ level.binoculars_init ]]( "br_fd_bomb_alert_enemy" );
            }
        }
    }

    wait 0.5;

    if ( !isdefined( var_1 ) )
        return;

    var_1.init_out_of_bounds_triggers = var_1.init_out_of_bounds_triggers - 1;
    var_1.setup_heli_starts_deep = gettime();
    var_1.respawnheightoverride = 0;
    var_0 thread battle_tracks_stopbattletracksforplayer();
}

battle_tracks_stopbattletracksforplayer()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "fd_bomb_refill" );
    wait( level.binoculars_cansee );
    var_0 battle_tracks_stopbattletrackswhenstandingonvehicle();
}

battle_tracks_trystopdrivertogglethink( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "disconnect" );

    if ( !isdefined( var_0 ) )
        return;

    var_2 = "veh8_mil_air_alfa10_db";
    var_3 = easepower( var_2, var_0.origin - ( 0, 0, 100 ), var_0.angles );
    var_3 setscriptablepartstate( "db", "db" );
    var_3.owner = var_1;
    var_1 playsoundtoplayer( "s4_dalpha_bomb_release", var_1 );
    var_4 = 0;

    while ( !var_4 )
    {
        var_5 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 0 );
        var_6 = [];
        var_7 = scripts\engine\trace::ray_trace( var_3.origin, var_3.origin - ( 0, 0, 35 ), var_6, var_5, 0 );

        if ( isdefined( var_7 ) )
        {
            if ( var_7["hittype"] == "hittype_none" )
                var_3.origin = var_3.origin - ( 0, 0, 35 );
            else
            {
                var_3 battle_tracks_togglethink();
                var_4 = 1;
            }
        }

        wait 0.05;
    }
}

battle_tracks_togglethink()
{
    var_0 = self;

    if ( !isdefined( var_0.owner ) )
    {
        var_0 freescriptable();
        return;
    }

    var_1 = var_0.origin;
    playsoundatpos( var_1, "car_explode" );
    earthquake( 0.4, 800, var_1, 0.7 );
    playrumbleonposition( "grenade_rumble", var_1 );
    physicsexplosionsphere( var_1, 500, 200, 1 );
    var_2 = spawnfx( scripts\engine\utility::getfx( "aircraft_bomb_explode" ), var_1, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );
    var_2 forcenetfieldhighlod( 1 );
    triggerfx( var_2 );
    var_3 = [];

    if ( isdefined( level.obj_riverbed ) )
        var_3 = [[ level.obj_riverbed ]]( var_1, 700 );

    foreach ( var_5 in var_3 )
    {
        if ( var_5.team != var_0.owner.team )
            var_5 dodamage( 700, var_1, var_0.owner, var_0.owner, "MOD_EXPLOSIVE", "little_bird_mp" );
    }

    var_3 = [];

    if ( isdefined( level.obj_riverbed ) )
        var_3 = [[ level.obj_riverbed ]]( var_1, 1250 );

    foreach ( var_5 in var_3 )
    {
        var_5 earthquakeforplayer( 0.35, 2.0, var_1, 1250 );
        var_5 thread scripts\cp_mp\utility\shellshock_utility::_shellshock( "flash_grenade_mp", "top", 2.5, 1 );

        if ( var_5.team != var_0.owner.team )
            var_5 dodamage( 90, var_1, var_0.owner, var_0.owner, "MOD_EXPLOSIVE", "little_bird_mp" );
    }

    foreach ( var_10 in level.br_pickups.crates )
    {
        var_11 = distance( var_1, var_10.origin );

        if ( var_11 < 1250 )
            var_10 thread scripts\cp_mp\killstreaks\airdrop::destroycrate();
    }

    foreach ( var_14 in level.br_armory_kiosk.scriptables )
    {
        var_15 = distance( var_1, var_14.origin );

        if ( var_15 < 1250 )
        {
            if ( isdefined( var_14.visible ) )
            {
                if ( isdefined( level.helidisapateextractvfx ) )
                    [[ level.helidisapateextractvfx ]]( var_14 );
            }
        }
    }

    var_17 = canceljoins( undefined, undefined, var_1, 1250 );

    if ( isdefined( var_17 ) )
    {
        foreach ( var_19 in var_17 )
        {
            if ( !isdefined( var_19.createflagstart ) || var_19 == var_0 || var_19.type == "brloot_escape_radio" || var_19.type == "br_cargotrain" || var_19.type == "br_cargotrain_engine" )
                continue;

            if ( isdefined( level.spawn_para_and_heli_logic ) )
                [[ level.spawn_para_and_heli_logic ]]( var_19 );
        }
    }

    if ( isdefined( level.vehicle ) && isdefined( level.vehicle.instances ) )
    {
        foreach ( var_22 in level.vehicle.instances )
        {
            foreach ( var_24 in var_22 )
            {
                var_25 = distance( var_1, var_24.origin );

                if ( var_25 > 1250 )
                    continue;

                var_26 = int( var_24.maxhealth * level.binoculars_checkpendingtimer );
                var_24 dodamage( var_26, var_1, var_0.owner, var_0.owner, "MOD_EXPLOSIVE", "little_bird_mp" );
            }
        }
    }

    var_0 freescriptable();
}

battle_tracks_toggleonstate()
{
    level.battle_tracks_toggleoffstate = getentarray( "veh_a10fd_reload_drop_bomb", "targetname" );

    foreach ( var_1 in level.battle_tracks_toggleoffstate )
        level thread battle_tracks_stoptogglethink( var_1 );
}

battle_tracks_stoptogglethink( var_0 )
{
    level endon( "game_ended" );

    for (;;)
    {
        var_0 waittill( "trigger", var_1 );

        if ( isbot( var_1 ) || !isalive( var_1 ) )
            continue;

        if ( !isdefined( var_1.vehicle ) || !isdefined( var_1.vehicle.model ) || !isdefined( var_1.vehicle.init_out_of_bounds_triggers ) || var_1.vehicle.model != "veh_s4_mil_air_alfa_test_wz" || var_1.vehicle.init_out_of_bounds_triggers >= level.binoculars_checkexpirationtimer )
            continue;

        if ( isdefined( var_1.vehicle.setup_heli_starts_deep ) )
        {
            var_2 = var_1.vehicle.setup_heli_starts_deep + level.binoculars_giveassistpoints;

            if ( var_2 > gettime() )
                continue;
        }

        if ( isdefined( level.binoculars_clearexpirationtimer ) )
            var_1 thread [[ level.binoculars_clearexpirationtimer ]]( "br_fd_restock_bombs", 150 );

        if ( isdefined( level.binoculars_hidetargetmarker ) )
            var_1 thread [[ level.binoculars_hidetargetmarker ]]( "br_fd_restock_bombs" );

        var_1 battle_tracks_stopbattletrackswhenstandingonvehicle();
    }
}

battle_tracks_stopbattletrackswhenstandingonvehicle()
{
    var_0 = self;

    if ( !isdefined( var_0.vehicle ) )
        return;

    if ( var_0.vehicle.init_out_of_bounds_triggers == level.binoculars_checkexpirationtimer )
        return;

    var_0.vehicle.init_out_of_bounds_triggers = level.binoculars_checkexpirationtimer;
    var_0 battletracksidstandingonvehicle( level.binoculars_checkexpirationtimer );
    var_1 = soundexists( "plane_ch3_bomb_reload" );

    if ( var_1 )
        var_0 playsoundtoplayer( "plane_ch3_bomb_reload", var_0 );

    var_0 notify( "fd_bomb_refill" );
}

_id_1196F( var_0, var_1 )
{
    var_2 = self;
    level endon( "game_ended" );
    var_2 endon( "death_or_disconnect" );
    var_2 endon( "exiting_aircraft" );
    var_2 endon( "exiting_pilot_seat_aircraft" );

    for (;;)
    {
        var_2 waittill( var_1 );
        waittillframeend;
        var_2 thread [[ var_0.powers[var_1].func ]]( var_0, var_1 );
    }
}

_id_1196E( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "death_or_disconnect" );
    var_1 endon( "exiting_aircraft" );
    var_1 endon( "exiting_pilot_seat_aircraft" );

    if ( isbot( var_1 ) )
        return;

    foreach ( var_4, var_3 in var_0.powers )
        var_1 thread _id_1196F( var_0, var_4 );
}

base_assault_intro_vo( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( level.binoculars_onstateinvalidenter ) && level.binoculars_onstateinvalidenter > 0 )
        var_0.origin = var_0.origin + ( 0, 0, level.binoculars_onstateinvalidenter );

    if ( istrue( level.binoculars_cleanupheadiconondisconnect ) )
    {
        var_3 get_dropkit_price();
        var_3 thread _id_12386();
    }

    var_0 thread balloon_deposit_cash_vo_explanation();
    var_0 playsound( "s4_dalpha_startup_rev" );

    if ( var_1 == "pilot" )
    {
        var_3 thread _id_1329F( level.battle_tracks_standingonsamevehiclewithsametracksowner );
        var_3 thread _id_1196E( level.battle_tracks_standingonsamevehiclewithsametracksowner );
        var_3 thread battletracks();
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324B( var_3, var_4 );
        scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_giveturret( var_3, var_0._id_12F50, var_4, 1 );
    }

    if ( var_1 == "gunner" )
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324B( var_3, var_4 );
    else if ( isdefined( var_2 ) && var_2 == "gunner" )
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324B( var_3, var_4 );
}

balloon_deposit_cash_vo_explanation()
{
    var_0 = self;
    var_0 endon( "death" );
    level endon( "game_ended" );
    var_0.fulton_initrepository = 0;

    for (;;)
    {
        if ( istrue( var_0.fulton_initrepository ) )
        {
            if ( var_0 vehicle_getspeed() < level.binoculars_getmaxrange )
            {
                var_0.fulton_initrepository = 0;
                var_0 setscriptablepartstate( "fx", "base", 0 );
            }
        }
        else if ( var_0 vehicle_getspeed() > level.binoculars_getmaxrange )
        {
            var_0.fulton_initrepository = 1;
            var_0 setscriptablepartstate( "fx", "trails", 0 );
        }

        wait 5;
    }
}

barrel_think( var_0, var_1, var_2, var_3, var_4 )
{
    if ( istrue( var_4.success ) )
        thread base_angles( var_0, var_1, var_2, var_3, var_4 );
    else if ( !istrue( var_4.playerdisconnect ) && !istrue( var_4.playerdeath ) )
    {
        if ( var_1 == "pilot" )
        {
            battle_tracks_shouldstartbattletracks( var_3 );
            scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_taketurret( var_3, var_0, var_0._id_12F50, var_4, 1 );
        }
    }
}

base_angles( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = undefined;
    var_6 = undefined;

    if ( isdefined( var_2 ) && var_2 == "gunner" )
    {
        var_5 = "a10_warthog_fd";
        var_6 = 3;
    }

    if ( var_1 == "pilot" )
    {
        var_0 setotherent( var_3 );
        var_0 setentityowner( var_3 );
        var_3 controlslinkto( var_0 );

        if ( getdvarint( "scr_br_fd_uav_enabled", 1 ) )
            var_0 battle_tracks_vehicleallowlisteningoutsideoccupancy( var_3 );

        thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_disablefirefortime( var_3, 0 );
        var_7 = scripts\cp_mp\vehicles\vehicle::_id_13204( var_0, var_0._id_12F50 );
        var_7.owner = var_3;
        var_3.vehicle.turret = var_7;
        balloon_deposit_cash_nags( var_3 );
    }

    var_3 thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_animateplayer( var_0, var_1, var_2, undefined, var_5, var_6 );
    thread scripts\cp_mp\vehicles\vehicle_occupancy::_id_13265( var_4, 1 );
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatenter( var_0, var_2, var_1, var_3 );
}

basic_combat( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) )
    {
        if ( isdefined( var_1 ) && var_1 == "pilot" )
            var_3 notify( "exiting_pilot_seat_aircraft" );

        var_3 thread _id_1329E( level.battle_tracks_standingonsamevehiclewithsametracksowner );
        var_3 battle_tracks_standingonvehicletimeout();
        var_3 notify( "exiting_aircraft" );
    }
    else if ( var_2 != "pilot" )
    {
        var_3 thread _id_1329E( level.battle_tracks_standingonsamevehiclewithsametracksowner );
        var_3 battle_tracks_standingonvehicletimeout();
        var_3 notify( "exiting_pilot_seat_aircraft" );
    }

    if ( istrue( var_3.binoculars_endadslogic ) )
    {
        var_3 cameraunlink();
        var_3.binoculars_endadslogic = 0;
    }

    if ( istrue( var_4.success ) )
        battle_station_combat_logic( var_0, var_1, var_2, var_3, var_4 );
}

battle_station_combat_logic( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_1 == "pilot" )
    {
        var_0 setotherent( undefined );
        var_0 setentityowner( undefined );

        if ( getdvarint( "scr_br_fd_uav_enabled", 1 ) )
            var_0 thread battle_tracks_vehicleoccupancyenter();
    }

    var_5 = !isdefined( var_2 );

    if ( var_1 == "pilot" || var_5 && var_3 hasweapon( var_0._id_12F50 ) )
    {
        var_6 = scripts\cp_mp\vehicles\vehicle::_id_13204( var_0, var_0._id_12F50 );

        if ( !istrue( var_4.playerdisconnect ) )
        {
            var_3 enableturretdismount();
            var_3 controlturretoff( var_6 );

            if ( !istrue( var_4.playerdeath ) )
                scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_taketurret( var_3, var_0, var_0._id_12F50, var_4, 1 );

            thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_cleardisablefirefortime( var_3, var_4.playerdeath );
        }

        var_6.owner = undefined;
        var_6 setotherent( undefined );
        var_6 setentityowner( undefined );
        battle_tracks_shouldstartbattletracks( var_3 );
    }

    if ( !istrue( var_4.playerdisconnect ) )
    {
        var_3 controlsunlink();

        if ( istrue( var_4.playerdeath ) )
            var_3 scripts\cp_mp\vehicles\vehicle_occupancy::addquestrewardtier();

        var_3 scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_stopanimatingplayer();
        var_7 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_moveplayertoexit( var_3, var_2, var_4 );

        if ( !var_7 )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "handleSuicideFromVehicles" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "handleSuicideFromVehicles" ) ]]( var_3 );
            else
                var_3 suicide();
        }
    }

    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatexit( var_0, var_1, var_2, var_3 );
}

balloon_deposit_cash_nags( var_0 )
{
    if ( isdefined( var_0.pkg_lbl_vo ) )
        return;

    var_0.pkg_lbl_vo = 1;
    var_1 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "veh_a10fd" );

    if ( istrue( var_1._id_125AF ) )
        return;

    var_0 scripts\cp_mp\utility\damage_utility::adddamagemodifier( "ctmgGunnerMissileRedux", 0.4, 0, ::battle_tracks_getmusicstate );
}

battle_tracks_shouldstartbattletracks( var_0 )
{
    if ( !isdefined( var_0.pkg_lbl_vo ) )
        return;

    var_0.pkg_lbl_vo = undefined;
    var_1 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "veh_a10fd" );

    if ( istrue( var_1._id_125AF ) )
        return;

    var_0 scripts\cp_mp\utility\damage_utility::removedamagemodifier( "ctmgGunnerMissileRedux", 0 );
}

battle_tracks_getmusicstate( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_4 != "MOD_PROJECTILE_SPLASH" && var_4 != "MOD_GRENADE_SPLASH" )
        return 1;

    if ( !isdefined( var_5 ) )
        return 1;

    switch ( var_5.basename )
    {
        case "tur_gun_fd_mp":
        case "iw8_la_gromeoks_mp":
        case "iw8_la_juliet_mp":
        case "iw8_la_rpapa7_mp":
        case "iw8_la_kgolf_mp":
        case "iw8_la_gromeo_mp":
        case "iw8_la_mike32_mp":
        case "iw8_la_t9launcher_mp":
        case "iw8_la_t9freefire_mp":
        case "iw8_la_t9standard_mp":
        case "lighttank_tur_mp":
            return 0;
        default:
            return 1;
    }
}

battle_tracks_settogglestate( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\cp_mp\vehicles\vehicle_occupancy::_id_13265( var_4 );
    thread battle_tracks_shouldplaybattletrackswhenstandingonvehicle( var_0, var_1, var_2, var_3, var_4 );
}

battle_tracks_shouldplaybattletrackswhenstandingonvehicle( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_2 ) && var_2 == "pilot" )
    {
        var_5 = scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324B( var_3, var_4 );
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_13266( var_5 );
    }
}

_id_12EA9()
{
    return 1;
}

trophy_protectionsuccessful( var_0 )
{
    self._id_12EAE--;
    var_1 = var_0.origin;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophyDestroyTarget", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophyDestroyTarget", "init" ) ]]( var_0 );

    var_2 = trophy_getbesttag( var_1 );
    self setscriptablepartstate( "trophy_detonate", var_2 );
    var_3 = vectortoangles( self gettagorigin( var_2 ) - var_1 );
    var_4 = combineangles( var_3, ( -90, 0, 0 ) );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophyExplode", "init" ) )
        self.explosion thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophyExplode", "init" ) ]]( var_1, var_4 );

    if ( self._id_12EAE == 0 )
    {
        self notify( "upgrade_message", "trophy_no_ammo" );
        self waittill( "trophy_ammo_refill" );
    }
    else
        self notify( "upgrade_message", "trophy_ammo_used" );
}

trophy_getbesttag( var_0 )
{
    var_1 = [ "tag_trophy_1", "tag_trophy_2", "tag_trophy_3", "tag_trophy_4" ];
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_8, var_5 in var_1 )
    {
        var_6 = self gettagorigin( var_5 );
        var_7 = distancesquared( var_6, var_0 );

        if ( var_8 == 0 || var_7 < var_2 )
        {
            var_2 = var_7;
            var_3 = var_5;
        }
    }

    return var_3;
}

battle_tracks_vehicleallowlisteningoutsideoccupancy( var_0 )
{
    var_1 = self;
    var_2 = spawn( "script_model", var_1.origin );
    var_2 setmodel( "tag_origin" );
    var_2 linkto( var_1 );
    var_2 makeportableradar( var_0 );
    var_1.radar = var_2;
}

battle_tracks_vehicleoccupancyenter()
{
    level endon( "game_ended" );
    var_0 = self;

    if ( isdefined( var_0.radar ) )
        var_0.radar delete();
}

battle_tracks_monitorstandingonvehicles()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_getleveldataforvehicle( "veh_a10fd", 1 );
    var_0.maxinstancecount = 2;
    var_0.priority = 75;
    var_0.getspawnstructscallback = ::battle_tracks_createdefaultlisteningzone;
    var_0.spawncallback = scripts\cp_mp\utility\script_utility::getsharedfunc( "veh_a10fd", "spawnCallback" );
    var_0.clearancecheckradius = 185;
    var_0.clearancecheckheight = 138;
    var_0.clearancecheckminradius = 185;
}

battle_tracks_createdefaultlisteningzone()
{
    if ( isdefined( level.use_milcrate ) && level.use_milcrate.size != 0 )
        var_0 = level.use_milcrate;
    else
        var_0 = scripts\engine\utility::getstructarray( "veh_a10fd", "targetname" );

    if ( var_0.size > 0 )
    {
        var_0 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_removespawnstructswithflag( var_0, 1 );

        if ( var_0.size > 1 )
            var_0 = scripts\engine\utility::array_randomize( var_0 );
    }

    return var_0;
}

battletracks()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0 endon( "exiting_pilot_seat_aircraft" );
    var_1 = -40;
    var_2 = -135;
    var_3 = 40;
    var_4 = -135;
    var_0.battle_tracks_stopbattletracksfromstandingonvehicle = var_0 weapon_xp_iw8_ar_tango21( var_1, var_2, "right", "middle", "center", "bottom", &"MP_WZ_ISLAND/FD_DROP_BOMB_HUD", level.binoculars_checkexpirationtimer );
    var_0.battle_tracks_tryplayingbattletrackswhenstandingonvehicle = var_0 weapon_xp_iw8_ar_tango21( var_3, var_4, "left", "middle", "center", "bottom", &"MP_WZ_ISLAND/FD_IN_AIR_COUNTER" );

    while ( !isdefined( var_0.vehicle ) )
        wait 0.5;

    var_0 thread battletracksmusicstate();
}

battle_tracks_standingonvehicletimeout()
{
    var_0 = self;

    if ( isdefined( var_0.battle_tracks_stopbattletracksfromstandingonvehicle ) )
        var_0.battle_tracks_stopbattletracksfromstandingonvehicle destroy();

    if ( isdefined( var_0.battle_tracks_tryplayingbattletrackswhenstandingonvehicle ) )
        var_0.battle_tracks_tryplayingbattletrackswhenstandingonvehicle destroy();

    var_0.battle_tracks_stopbattletracksfromstandingonvehicle = undefined;
    var_0.battle_tracks_tryplayingbattletrackswhenstandingonvehicle = undefined;
}

battletracksidstandingonvehicle( var_0 )
{
    var_1 = self;

    if ( !isdefined( var_1.vehicle ) )
        return;

    if ( var_0 <= 0 )
        var_1.battle_tracks_stopbattletracksfromstandingonvehicle thread plunder_seventyfivepercent_music();

    var_1.battle_tracks_stopbattletracksfromstandingonvehicle setvalue( var_0 );
}

battletracksmusicstate()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0 endon( "exiting_pilot_seat_aircraft" );

    for (;;)
    {
        if ( !isdefined( var_0.vehicle ) )
            return;

        var_1 = 0;

        foreach ( var_3 in level.vehicle.instances["veh_a10fd"] )
        {
            if ( istrue( var_3.player_on_helipad ) )
                var_1++;
        }

        var_0.battle_tracks_tryplayingbattletrackswhenstandingonvehicle setvalue( var_1 );
        wait 3;
    }
}

weapon_xp_iw8_ar_tango21( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = get_dropoff_point_spawner( "default", 1.5 );
    var_8.x = var_0;
    var_8.y = var_1;
    var_8.alignx = var_2;
    var_8.aligny = var_3;
    var_8.horzalign = var_4;
    var_8.vertalign = var_5;
    var_8.alpha = 1;
    var_8.glowalpha = 0;
    var_8.hidewheninmenu = 1;
    var_8.archived = 0;

    if ( isdefined( var_6 ) )
        var_8.label = var_6;

    if ( isdefined( var_7 ) )
        var_8 setvalue( var_7 );

    return var_8;
}

plunder_seventyfivepercent_music()
{
    self endon( "death" );
    var_0 = ( 1, 0, 0 );

    if ( istrue( self._id_11C32 ) )
        return;

    var_1 = 0.3;
    var_2 = 1.5;
    self._id_11C32 = 1;
    var_3 = self.fontscale;
    var_4 = self.color;

    if ( isdefined( var_0 ) )
        self.color = var_0;

    self changefontscaleovertime( var_1 );
    self.fontscale = var_2;
    wait( var_1 );
    self changefontscaleovertime( var_1 );
    self.fontscale = var_3;
    wait( var_1 );
    self.color = var_4;
    self._id_11C32 = undefined;
}

get_dropoff_point_spawner( var_0, var_1 )
{
    var_2 = newclienthudelem( self );
    var_2.elemtype = "font";
    var_2.font = var_0;
    var_2.fontscale = var_1;
    var_2.basefontscale = var_1;
    var_2.x = 0;
    var_2.y = 0;
    var_2.width = 0;
    var_2.height = int( level.fontheight * var_1 );
    var_2.xoffset = 0;
    var_2.yoffset = 0;
    var_2.children = [];
    var_2.hidden = 0;
    return var_2;
}

get_dropkit_price()
{
    self.binoculars_getpendingendtime = spawnstruct();
    self.binoculars_getpendingendtime._id_12BA6 = [];
}

_id_12386()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "death" );
    wait 2;

    while ( isdefined( var_0.vehicle ) )
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2.team == var_0.team )
                continue;

            if ( isdefined( var_2.vehicle ) && isdefined( var_2.vehicle.targetname ) && var_2.vehicle.targetname == "veh_a10fd" )
                var_0 thread binoculars_istargetinbroadfov( var_2 );
        }

        [var_5, var_6] = oncapture();

        foreach ( var_2 in level.players )
        {
            if ( var_2.team == var_0.team )
                continue;

            if ( isdefined( level.binoculars_clearuidata ) )
            {
                if ( var_2 [[ level.binoculars_clearuidata ]]( "specialty_guerrilla" ) || var_2 [[ level.binoculars_clearuidata ]]( "specialty_covert_ops" ) )
                    continue;
            }

            var_8 = _id_12E75( var_2.origin, var_0.vehicle.origin, var_5, var_6 );

            if ( istrue( var_8 ) )
                var_0 thread binoculars_istargetinbroadfov( var_2 );
        }

        wait 5;
    }
}

oncapture()
{
    var_0 = self;
    var_0 notify( "get_sonar_cone_scan_vertices" );
    var_0 endon( "get_sonar_cone_scan_vertices" );
    var_1 = var_0.vehicle.origin;
    var_2 = anglestoforward( var_0.vehicle.angles );
    var_3 = vectorcross( var_2, ( 0, 0, 1 ) );
    var_4 = var_2 * level.binoculars_ongive * cos( level.binoculars_iswithinprojectiondistance_compute );
    var_5 = level.binoculars_ongive * sin( level.binoculars_iswithinprojectiondistance_compute );
    var_6 = [];
    var_7 = ( 0, 0, 0 );
    var_8 = undefined;
    var_9 = undefined;

    for ( var_10 = 0; var_10 < 2; var_10++ )
    {
        var_11 = var_10 / 2 * 360;
        var_12 = var_1 + var_4 + var_5 * ( var_3 * cos( var_11 ) );
        var_7 = var_12;

        if ( isdefined( var_9 ) )
        {
            var_8 = var_12;
            continue;
        }

        var_9 = var_12;
    }

    return [ var_8, var_9 ];
}

_id_12E75( var_0, var_1, var_2, var_3 )
{
    var_4 = safehouse_create_loot( var_0, var_1, var_2, var_3 );

    if ( var_4 )
        return 1;
    else
        return 0;
}

safehouse_create_loot( var_0, var_1, var_2, var_3 )
{
    if ( !sat_signal_lost_nag( var_0, var_1, var_2 ) )
        return 0;

    if ( !sat_signal_lost_nag( var_0, var_2, var_3 ) )
        return 0;

    if ( !sat_signal_lost_nag( var_0, var_3, var_1 ) )
        return 0;

    return 1;
}

sat_signal_lost_nag( var_0, var_1, var_2 )
{
    return ( var_2[0] - var_1[0] ) * ( var_0[1] - var_1[1] ) - ( var_0[0] - var_1[0] ) * ( var_2[1] - var_1[1] ) < 0;
}

binoculars_istargetinbroadfov( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "death_or_disconnect" );
    var_2 = "hud_icon_head_marked";
    var_3 = 8;
    var_4 = 1;
    var_5 = 500;
    var_6 = 40000;
    var_1.binoculars_getpendingendtime._id_12BA6[var_0 getentitynumber()] = var_0;
    var_7 = var_0;
    var_7.headicon = var_0 scripts\cp_mp\entityheadicons::setheadicon_singleimage( var_1, var_2, var_3, var_4, var_6, var_5, undefined, 1, 1 );
    var_1 binoculars_iswithinprojectiondistance( var_0 );
    var_1 binoculars_istargetinrange( var_0 );
}

binoculars_iswithinprojectiondistance( var_0 )
{
    var_1 = self;
    var_1 endon( "death_or_disconnect" );
    var_2 = var_0 getentitynumber();
    var_0 scripts\engine\utility::waittill_notify_or_timeout( "death_or_disconnect", 4.0 );
}

binoculars_istargetinrange( var_0 )
{
    var_1 = self;
    var_2 = var_0 getentitynumber();

    if ( isdefined( var_1.binoculars_getpendingendtime ) && isdefined( var_1.binoculars_getpendingendtime._id_12BA6 ) )
    {
        var_3 = var_1.binoculars_getpendingendtime._id_12BA6[var_2];

        if ( isdefined( var_3 ) && isdefined( var_3.headicon ) )
        {
            scripts\cp_mp\entityheadicons::setheadicon_deleteicon( var_3.headicon );
            var_1.binoculars_getpendingendtime._id_12BA6[var_2] = undefined;
        }
    }
}
