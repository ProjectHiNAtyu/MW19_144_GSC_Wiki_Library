// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = spawnstruct();
    var_0.allow_br_loot_to_br_marked = ::activate;
    var_0.getjuggmazespawnpoint = ::deactivate;
    var_0.start_race_countdown = 3;
    var_0.weight = getdvarfloat( "scr_br_pe_lootcrate_weight", 0 );
    var_0.circleeventweights = scripts\mp\gametypes\br_publicevents.gsc::getdvarcircleeventweights( "lootcrate", "30 25 20 20 20 30 25 25 25" );
    scripts\mp\gametypes\br_publicevents.gsc::_id_11DFD( 9, var_0 );
    level.conf_fx["vanish"] = loadfx( "vfx/core/impacts/small_snowhit" );
}

activate()
{
    var_0 = 0;

    if ( isdefined( level.br_pe_lastcratewasheavyweapon ) )
        var_0 = !level.br_pe_lastcratewasheavyweapon;
    else
    {
        var_1 = 0.5;
        var_0 = randomfloatrange( 0.0, 1.0 ) > 0.5;
    }

    var_2 = spawnstruct();

    if ( var_0 )
    {
        level thread scripts\mp\gametypes\br_heavy_weapon_drop.gsc::init();
        var_2.br_pe_cratetype = "heavy_weapon_crate";
        var_2.br_pe_crate_objective = "heavy_weapon_public";
        var_2.br_pe_crate_objective_map = "pe_chopper_crate";
        var_2.br_pe_crate_smoke_signal = "pe_chopper_on";
        level.br_pe_lastcratewasheavyweapon = 1;
    }
    else
    {
        level.br_pe_crate_reward_override = getdvarint( "scr_br_pe_loadoutdrop_amount", 15000 );
        level thread scripts\mp\gametypes\br_lootchopper.gsc::init();
        level thread scripts\cp_mp\killstreaks\airdrop::redlight();
        var_2.br_pe_cratetype = "battle_royale_chopper_loot";
        var_2.br_pe_crate_objective = "active";
        var_2.br_pe_crate_objective_map = "cashdrop_common_world";
        var_2.br_pe_crate_smoke_signal = "on";
        level.br_pe_lastcratewasheavyweapon = 0;
    }

    var_3 = scripts\cp_mp\killstreaks\airdrop::getleveldata( var_2.br_pe_cratetype );
    var_3.capturestring = &"MP/GENERIC_LOOT_CRATE_CAPTURE";
    var_3.minimapicon = undefined;
    scripts\mp\gametypes\br_publicevents.gsc::_id_12557( "br_pe_loot_crate_start" );
    var_4 = scripts\mp\utility\teams::getnumteamsremaining();
    var_5 = getdvarint( "scr_br_pe_loadoutdrop_numTeamsPerCrates", 3 );
    var_6 = getdvarint( "scr_br_pe_loadoutdrop_minCrates", 10 );
    var_7 = int( max( var_6, var_4 / var_5 ) );
    var_8 = [];
    var_9 = scripts\mp\gametypes\br_circle.gsc::getdangercircleorigin();
    var_10 = scripts\mp\gametypes\br_circle.gsc::getdangercircleradius();

    for ( var_11 = 0; var_11 < var_7; var_11++ )
        var_8[var_8.size] = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_9, var_10, 0.1, 0.9, 1 );

    level.br_pe_spawnedcrates = [];

    foreach ( var_13 in var_8 )
    {
        if ( isdefined( var_13 ) )
        {
            var_14 = undefined;
            var_15 = undefined;
            var_16 = var_2.br_pe_cratetype;
            var_17 = ( var_13[0], var_13[1], var_13[2] + 10000 );
            var_18 = ( 0, randomfloat( 360 ), 0 );
            var_19 = var_13;
            var_20 = scripts\cp_mp\killstreaks\airdrop::dropcrate( var_14, var_15, var_16, var_17, var_18, var_19 );

            if ( !isdefined( var_20 ) )
                continue;

            var_20 setscriptablepartstate( "trail", "active", 0 );
            var_20._id_125EB = spawn( "script_model", var_17 + ( 0, 0, 58 ) );
            var_20._id_125EB setmodel( "ks_airdrop_crate_br" );
            var_20._id_125EB linkto( var_20 );
            var_20._id_125EB setscriptablepartstate( "smoke_trail", "on" );

            if ( isdefined( var_2.br_pe_crate_objective ) )
                var_20 setscriptablepartstate( "objective", var_2.br_pe_crate_objective );

            if ( isdefined( var_2.br_pe_crate_objective_map ) )
                var_20 setscriptablepartstate( "objective_map", var_2.br_pe_crate_objective_map );

            var_21 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_20 );
            var_21._id_1312F = 5;
            level.br_pe_spawnedcrates[level.br_pe_spawnedcrates.size] = var_20;
        }
    }
}

deactivate()
{
    foreach ( var_1 in level.br_pe_spawnedcrates )
    {
        if ( !isdefined( var_1 ) )
            continue;

        playfx( level.conf_fx["vanish"], var_1.origin );

        if ( isdefined( var_1._id_125EB ) )
        {
            var_1._id_125EB setscriptablepartstate( "smoke_signal", "off", 0 );
            var_1._id_125EB delete();
        }

        var_1 scripts\cp_mp\killstreaks\airdrop::hack_airport_combat_init();
        level.br_pe_spawnedcrates = scripts\engine\utility::array_remove( level.br_pe_spawnedcrates, var_1 );
    }
}
