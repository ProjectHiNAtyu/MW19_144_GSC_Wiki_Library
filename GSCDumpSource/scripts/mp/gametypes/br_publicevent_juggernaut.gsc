// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = getdvarint( "scr_br_pe_juggernaut_drop_on_death", 0 );
    scripts\mp\gametypes\br_jugg_common.gsc::proptiebreaker( "drop_on_death", var_0, "public_event" );
    var_1 = spawnstruct();
    var_1.weight = getdvarfloat( "scr_br_pe_juggernaut_weight", 1.0 );
    var_1.allow_br_loot_to_br_marked = ::allow_br_loot_to_br_marked;
    var_1._id_13152 = ::_id_13152;
    var_1._id_133CD = ::_id_133CD;
    var_1.circleeventweights = scripts\mp\gametypes\br_publicevents.gsc::getdvarcircleeventweights( "juggernaut", "10 5 0 0 0 0 0 0 0" );
    scripts\mp\gametypes\br_publicevents.gsc::_id_11DFD( 4, var_1 );
    game["dialog"]["public_events_juggernaut_start"] = "public_events_juggernaut_start";
}

_id_13152()
{
    return level.completesmokinggunquest.name != "jugg";
}

_id_133CD()
{
    level endon( "game_ended" );
    level endon( "cancel_public_event" );
    var_0 = deposit_from_compromised_convoy_delayed_failsafe();
    wait( var_0 );
}

allow_br_loot_to_br_marked()
{
    var_0 = scripts\mp\gametypes\br_jugg_common.gsc::numdepositers();
    level.select_back_door_spawners = scripts\engine\utility::array_randomize( level.select_back_door_spawners );
    var_1 = scripts\mp\gametypes\br_jugg_common.gsc::_id_12537( var_0, 0 );
    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "public_events_juggernaut_start" );
    level scripts\mp\gametypes\br_jugg_common.gsc::_id_129B1( var_1, "public_event" );
    _id_133BA();
}

_id_133BA()
{
    for (;;)
    {
        wait 1;
        var_0 = 0;

        foreach ( var_2 in level.delete_trapfunc )
        {
            if ( var_2.cratetype == "battle_royale_juggernaut" )
            {
                var_0 = 1;
                break;
            }
        }

        if ( !var_0 )
            break;
    }
}

deposit_from_compromised_convoy_delayed_failsafe()
{
    var_0 = getdvarfloat( "scr_br_pe_juggernaut_starttime_min", 795.0 );
    var_1 = getdvarfloat( "scr_br_pe_juggernaut_starttime_max", 1110.0 );

    if ( var_1 > var_0 )
        return randomfloatrange( var_0, var_1 );
    else
        return var_0;
}
