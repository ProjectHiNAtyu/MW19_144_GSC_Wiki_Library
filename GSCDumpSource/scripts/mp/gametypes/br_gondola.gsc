// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_12AC4()
{
    level endon( "game_ended" );
    wait 1;
    level.br_isininfil = getentarray( "gondola_start", "script_noteworthy" );

    foreach ( var_1 in level.br_isininfil )
    {
        var_2 = var_1 scripts\engine\utility::get_linked_ents();

        foreach ( var_4 in var_2 )
        {
            var_4 linkto( var_1 );

            if ( isdefined( var_4.classname ) && var_4.classname == "script_brushmodel" && !isdefined( var_4.targetname ) )
            {
                var_1.collision = var_4;
                var_4.targetname = "gondola_clipbrush";
                var_4.unresolved_collision_func = ::percentageplunderdrop;
            }

            if ( isdefined( var_4.targetname ) && var_4.targetname == "wheeler" )
                var_1._id_135BC = var_4;
        }

        var_6 = scripts\engine\utility::getstruct( var_1.target, "targetname" );
        var_7 = getent( var_6.target, "targetname" );
        var_8 = getent( var_7.target, "targetname" );
        var_9 = scripts\engine\utility::getstruct( var_8.target, "targetname" );
        var_10 = getent( var_9.target, "targetname" );
        var_1._id_128E4 = var_1.origin;
        var_1.initpostmain = var_6.origin;
        var_1._id_128E6 = var_8.origin;
        var_1.initprematchc130 = var_9.origin;
        var_1._id_128E5 = var_1.angles[1];
        var_1.wait_fire_mainhouse_flashbangs_and_smokes = var_7;
        var_1.wait_for_all_players_in_airlock = var_10;

        if ( isdefined( var_1.script_parameters ) && var_1.script_parameters == "up" )
            var_1.give_periodic_jugg_pulses = vectortopitch( var_1.origin - var_1.initpostmain );
        else if ( isdefined( var_1.script_parameters ) && var_1.script_parameters == "down" )
            var_1.give_periodic_jugg_pulses = vectortopitch( var_1.initpostmain - var_1.origin );

        if ( !isdefined( var_1.script_speed ) )
            var_1.script_speed = 15;

        var_1 thread pe_chopper_zones();
        var_1 thread _id_13174();
    }
}

pe_chopper_zones()
{
    level endon( "game_ended" );
    self endon( "death" );
    waitframe();

    for (;;)
    {
        if ( self.angles[1] != self._id_128E5 )
            self.angles = ( self.angles[0], self._id_128E5, self.angles[2] );

        if ( isdefined( self.script_parameters ) )
        {
            self._id_135BC setscriptablepartstate( "sfx", "sfx_don4_gondola_" + self.script_parameters );
            self setscriptablepartstate( "sfx", "sfx_don4_gondola_arrived_" + self.script_parameters );
        }

        pelletweaponvictimids();
        self moveto( self.initpostmain, self.script_speed, 0.5, 0.5 );
        wait( self.script_speed );
        waitframe();
        self._id_135BC setscriptablepartstate( "sfx", "sfx_don4_gondola_TURN" );
        self setscriptablepartstate( "sfx", "sfx_don4_gondola_arrived_TURN" );
        self linkto( self.wait_fire_mainhouse_flashbangs_and_smokes );
        self.wait_fire_mainhouse_flashbangs_and_smokes rotateyaw( 180, 4 );
        wait 4;
        waitframe();
        self unlink();
        waitframe();
        pelletdmgpassed();

        if ( isdefined( self.script_parameters ) )
        {
            self._id_135BC setscriptablepartstate( "sfx", "sfx_don4_gondola_" + self.script_parameters );
            self setscriptablepartstate( "sfx", "sfx_don4_gondola_arrived_" + self.script_parameters );
        }

        pelletweaponvictimids();
        self moveto( self.initprematchc130, self.script_speed, 0.5, 0.5 );
        wait( self.script_speed );
        waitframe();
        self._id_135BC setscriptablepartstate( "sfx", "sfx_don4_gondola_TURN" );
        self setscriptablepartstate( "sfx", "sfx_don4_gondola_arrived_TURN" );
        self linkto( self.wait_for_all_players_in_airlock );
        self.wait_for_all_players_in_airlock rotateyaw( 180, 4 );
        wait 4;
        waitframe();
        self unlink();
        waitframe();
        pelletdmgpassed();
    }
}

pelletdmgpassed()
{
    if ( isdefined( self.script_parameters ) )
    {
        if ( self.script_parameters == "up" )
            self.script_parameters = "down";
        else if ( self.script_parameters == "down" )
            self.script_parameters = "up";
    }
}

pelletweaponvictimids()
{
    var_0 = self;

    if ( !isdefined( var_0.give_periodic_jugg_pulses ) )
        return;

    if ( !isdefined( var_0._id_135BC ) )
        return;

    var_0._id_135BC.angles = ( 0, var_0._id_135BC.angles[1], var_0._id_135BC.angles[2] );
    var_0._id_135BC unlink();

    if ( isdefined( var_0.script_parameters ) && var_0.script_parameters == "up" )
        var_0._id_135BC addpitch( var_0.give_periodic_jugg_pulses );
    else if ( isdefined( var_0.script_parameters ) && var_0.script_parameters == "down" )
        var_0._id_135BC addpitch( -1 * var_0.give_periodic_jugg_pulses );

    var_0._id_135BC linkto( var_0 );
}

percentageplunderdrop( var_0, var_1 )
{
    var_2 = self;
    var_2.i_see_player_drone_watcher = 1;
    var_2.previouscarepackagekillstreaks = level.br_isininfil;

    if ( isdefined( level.supportbox_updateheadiconallplayers ) && [[ level.supportbox_updateheadiconallplayers ]]( var_0, var_2 ) )
        return;

    var_3 = undefined;
    var_4 = var_2 getlinkedparent();
    var_5 = var_4.origin;
    var_6 = var_5 + ( 0, 0, 5 );
    var_7 = playerphysicstrace( var_5, var_6 );

    if ( var_7 == var_6 && canspawn( var_5 ) )
        var_3 = var_5;

    if ( isdefined( var_3 ) )
        var_0 setorigin( var_3 );
    else
    {
        var_8 = 1000;

        if ( isdefined( var_2.unresolved_collision_damage ) )
            var_8 = var_2.unresolved_collision_damage;

        var_0 dodamage( var_8, var_2.origin, var_2.owner, var_2, "MOD_CRUSH" );
    }
}

repair_grill_fixing_short_sfx( var_0 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.targetname ) && var_0.targetname == "gondola_clipbrush" )
        return 1;

    return 0;
}

_id_13174()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "touch", var_0 );

        if ( isdefined( var_0 ) && var_0 isattachmentvariantlocked() )
            var_0 dodamage( var_0.health, self.origin, var_0, var_0, "MOD_CRUSH" );
    }
}

isattachmentvariantlocked()
{
    return isalive( self ) && ( scripts\common\vehicle::isvehicle() || isdefined( self.classname ) && self.classname == "script_vehicle" );
}
