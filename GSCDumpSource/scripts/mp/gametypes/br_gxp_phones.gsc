// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !getdvarint( "scr_br_gxp_phones", 1 ) )
        return;

    scripts\engine\scriptable::_id_1219E( "gxp_telephone", ::bot_dd_think );
    level thread relic_amped_monitor();
}

relic_amped_monitor()
{
    waittillframeend;
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level.play_death_sound_with_global_cooldown = [];
    level.play_authentication_error_window = [];
    level.play_bcs = [];
    level.play_chopper_kill_vo = [];
    level.play_counter_beep_sfx_on_bomb_vests = [];
    level.completesmokinggunquest.play_contract_announcer_maybe = getdvarint( "scr_br_gxp_phone_max_total_spawns", 74 );
    level.completesmokinggunquest.play_collected_key_vo = getdvarint( "scr_br_gxp_phone_max_spawns_per_location", 3 );
    level.completesmokinggunquest.gxpphonegenericmaxspawns = getdvarint( "scr_br_gxp_phone_max_generic_location_spawns", 23 );
    level.completesmokinggunquest.gxpphonecontrolroommaxspawns = getdvarint( "scr_br_gxp_phone_max_control_room_spawns", 12 );
    level.completesmokinggunquest.play_breach_anim = getdvarint( "scr_br_gxp_phone_generic_vo_chance", 45 );
    level.completesmokinggunquest.play_cinderblock_broken_fx = getdvarint( "scr_br_gxp_phone_location_vo_chance", 45 );
    level.completesmokinggunquest.play_death_audio = getdvarint( "scr_br_gxp_phone_operator_vo_chance", 10 );
    level.completesmokinggunquest.play_disguise_vo = level.completesmokinggunquest.play_breach_anim + level.completesmokinggunquest.play_cinderblock_broken_fx + level.completesmokinggunquest.play_death_audio;
    level.completesmokinggunquest.gxpphonestartdelaymin = getdvarint( "scr_br_gxp_phone_start_delay_min", 20 );
    level.completesmokinggunquest.gxpphonestartdelaymax = getdvarint( "scr_br_gxp_phone_start_delay_max", 21 );
    level.completesmokinggunquest.gxpphonenextdelaymin = getdvarint( "scr_br_gxp_phone_next_delay_min", 5 );
    level.completesmokinggunquest.gxpphonenextdelaymax = getdvarint( "scr_br_gxp_phone_next_delay_max", 15 );
    level.completesmokinggunquest.gxpphoneringphonesmin = getdvarint( "scr_br_gxp_phone_ring_phones_min", 10 );
    level.completesmokinggunquest.gxpphoneringphonesmax = getdvarint( "scr_br_gxp_phone_ring_phones_max", 15 );

    switch ( level.mapname )
    {
        case "mp_br_mechanics":
            reinforcement_type();
            relativevelocity();
            break;
        case "mp_don4_pm":
        case "mp_don4":
            release_ascendstruct_ondeath();
            break;
    }

    relic_amped_monitor_beeps();
    level thread relic_disable_health_regen();
}

reinforcement_type()
{

}

release_ascendstruct_ondeath()
{
    anim_weapon( "airport", ( -22374.9, 19917.6, -160 ), ( 0, 115, 0 ) );
    anim_weapon( "airport", ( -17061.8, 19968.1, -355.661 ), ( 0, 17, 0 ) );
    anim_weapon( "array", ( 26960.8, 20389.6, 1379.32 ), ( 0, 30, 0 ) );
    anim_weapon( "boneyard", ( -25173.4, -12244.5, 107.339 ), ( 0, 0, 0 ) );
    anim_weapon( "boneyard", ( -28156.3, -17991.5, -171.661 ), ( 0, 295, 0 ) );
    anim_weapon( "boneyard", ( -27298, -2456.58, -243.15 ), ( 0, 345, 0 ) );
    anim_weapon( "downtown", ( 24937.1, -14516.3, -155.991 ), ( 0, 340, 0 ) );
    anim_weapon( "downtown", ( 19984.7, -23085.9, -144 ), ( 0, 0, 0 ) );
    anim_weapon( "downtown", ( 15022.6, -6416.76, -410 ), ( 0, 15, 0 ) );
    anim_weapon( "factory", ( -4509.41, 6606.26, -155.491 ), ( 0, 160, 0 ) );
    anim_weapon( "farmland", ( 46111.3, -9402.01, 325.089 ), ( 0, 30, 0 ) );
    anim_weapon( "farmland", ( 55401, -15242.8, -371.951 ), ( 0, 55, 0 ) );
    anim_weapon( "farmland", ( 46442.1, -22670.5, -263.051 ), ( 0, 130, 0 ) );
    anim_weapon( "hospital", ( 7421.45, -8370.11, -36.0004 ), ( 0, 187, 0 ) );
    anim_weapon( "hospital", ( 8052.45, -9700.34, -239.901 ), ( 0, 0, 0 ) );
    anim_weapon( "hospital", ( 10335.8, -11269.7, -240.401 ), ( 0, 240, 0 ) );
    anim_weapon( "lumber", ( 54360.5, 4446.3, 211.214 ), ( 0, 0, 0 ) );
    anim_weapon( "lumber", ( 49128.9, 2579.8, 123.339 ), ( 0, 167, 0 ) );
    anim_weapon( "lumber", ( 50568.3, 91.5719, 171.214 ), ( 0, 340, 0 ) );
    anim_weapon( "military_base", ( 5521.67, 51545.2, 1092.36 ), ( 0, 0, 0 ) );
    anim_weapon( "military_base", ( 3255.25, 47791.2, 1321.08 ), ( 0, 10, 0 ) );
    anim_weapon( "military_base", ( 982.65, 45684.8, 1488 ), ( 0, 335, 0 ) );
    anim_weapon( "mine", ( 33229.7, 40102.1, 880.339 ), ( 0, 160, 0 ) );
    anim_weapon( "mine", ( 30807, 40093.7, 880.339 ), ( 0, 0, 0 ) );
    anim_weapon( "mine", ( 27322.3, 35157.4, 896.339 ), ( 0, 100, 0 ) );
    anim_weapon( "port", ( 29918.5, -27964.8, -518.681 ), ( 0, 260, 0 ) );
    anim_weapon( "port", ( 37287.1, -26747.4, -473.991 ), ( 0, 75, 0 ) );
    anim_weapon( "port", ( 37872.6, -15071.6, -514 ), ( 0, 330, 0 ) );
    anim_weapon( "stadium", ( 26464.4, 411.112, -75.4279 ), ( 0, 150, 0 ) );
    anim_weapon( "storage", ( -25574.9, 7085.18, -260 ), ( 0, 170, 0 ) );
    anim_weapon( "summit", ( -23818.5, 52700.6, 2698 ), ( 0, 0, 0 ) );
    anim_weapon( "summit", ( -26594.8, 51998.5, 2892 ), ( 0, 0, 0 ) );
    anim_weapon( "summit", ( -29124.4, 48592.4, 2559.34 ), ( 0, 40, 0 ) );
    anim_weapon( "superstore", ( -14476.3, 7570.5, -349.96 ), ( 0, 80, 0 ) );
    anim_weapon( "superstore", ( -11087.9, 7419.82, -347.428 ), ( 0, 7, 0 ) );
    anim_weapon( "train", ( -10431.4, -12430.3, 60.5927 ), ( 0, 40, 0 ) );
    anim_weapon( "train", ( -14157.8, -11729, -91.4333 ), ( 0, 180, 0 ) );
    anim_weapon( "tv_station", ( 15380.1, 17751.4, 187.84 ), ( 0, 10, 0 ) );
    anim_weapon( "tv_station", ( 11801.4, 18815.1, 208.002 ), ( 0, 215, 0 ) );
    anim_weapon( "control_room", ( -36658.9, -12385.2, -62 ), ( 0, 65, 0 ) );
    anim_weapon( "control_room", ( -15256.3, -41109.1, 604 ), ( 0, 0, 0 ) );
    anim_weapon( "control_room", ( -1217.01, -24365.2, -59.0882 ), ( 0, 25, 0 ) );
    anim_weapon( "control_room", ( -26463.4, 9405.66, -259.907 ), ( 0, 30, 0 ) );
    anim_weapon( "control_room", ( -22885.2, 35034.7, 256 ), ( 0, 180, 0 ) );
    anim_weapon( "control_room", ( 2152.61, 29778.3, 216.912 ), ( 0, 195, 0 ) );
    anim_weapon( "control_room", ( -7197.45, 57362.9, 1053 ), ( 0, 180, 0 ) );
    anim_weapon( "control_room", ( 29759.8, 36364, 694.412 ), ( 0, 0, 0 ) );
    anim_weapon( "control_room", ( 44514.4, 13862.6, -310.657 ), ( 0, 0, 0 ) );
    anim_weapon( "control_room", ( 52722.6, 1686.83, 25.4118 ), ( 0, 0, 0 ) );
    anim_weapon( "control_room", ( 52526.3, -17890.5, -484.907 ), ( 0, 170, 0 ) );
    anim_weapon( "control_room", ( -8668.4, 5080.99, -289.588 ), ( 0, 255, 0 ) );
    anim_weapon( "generic", ( 52251.4, -41466.1, 1768 ), ( 0, 200, 0 ) );
    anim_weapon( "generic", ( 24048.2, -28547.4, -351.5 ), ( 0, 100, 0 ) );
    anim_weapon( "generic", ( 9708.17, -23992.4, -186.428 ), ( 0, 190, 0 ) );
    anim_weapon( "generic", ( 1974.23, -24919.1, -213.011 ), ( 0, 275, 0 ) );
    anim_weapon( "generic", ( -3849.26, -21679.3, -192.661 ), ( 0, 290, 0 ) );
    anim_weapon( "generic", ( -12042.1, -28767.7, 48 ), ( 0, 285, 0 ) );
    anim_weapon( "generic", ( -16742.9, -21605.8, -212.757 ), ( 0, 300, 0 ) );
    anim_weapon( "generic", ( -24362.7, -28695.5, -58 ), ( 0, 255, 0 ) );
    anim_weapon( "generic", ( -4972.35, -3137.29, -241.978 ), ( 0, 10, 0 ) );
    anim_weapon( "generic", ( -11587.7, -4366.5, -125.278 ), ( 0, 295, 0 ) );
    anim_weapon( "generic", ( -19873.9, -2683.02, -271.998 ), ( 0, 200, 0 ) );
    anim_weapon( "generic", ( -35384, -7120.79, -172.661 ), ( 0, 25, 0 ) );
    anim_weapon( "generic", ( 14780.5, 5898.52, -259.067 ), ( 0, 180, 0 ) );
    anim_weapon( "generic", ( 22434.6, 10911.9, -409.951 ), ( 0, 180, 0 ) );
    anim_weapon( "generic", ( 46502.1, 19969.1, -308.278 ), ( 0, 200, 0 ) );
    anim_weapon( "generic", ( 39186.1, 15674.1, -271.978 ), ( 0, 45, 0 ) );
    anim_weapon( "generic", ( 10702.4, 12800.7, -282 ), ( 0, 90, 0 ) );
    anim_weapon( "generic", ( 5179.14, 24678.2, 62.3032 ), ( 0, 250, 0 ) );
    anim_weapon( "generic", ( -1369.85, 30080.8, -38 ), ( 0, 70, 0 ) );
    anim_weapon( "generic", ( -24187.7, 35781.3, 375 ), ( 0, 65, 0 ) );
    anim_weapon( "generic", ( -13242.5, 45519.5, 1836 ), ( 0, 100, 0 ) );
    anim_weapon( "generic", ( -14262, 58661.4, 2200.05 ), ( 0, 50, 0 ) );
    anim_weapon( "generic", ( 14551.2, 36655.2, 1493.32 ), ( 0, 100, 0 ) );
}

relativevelocity()
{
    animatedprop_startanim( "dx_bra_gfac_red_phone_ghost_general" );
    animscripted_single_relative( "test", "dx_bra_gfac_red_phone_airport" );
    animscripted_single_relative( "test2", "dx_bra_gfac_red_phone_array" );
    announcedomplatespawns( "t9adler_western", "dx_bra_gfac_red_phone_adler" );
}

relic_amped_monitor_beeps()
{
    animatedprop_startanim( "dx_bra_gfac_red_phone_ghost_general" );
    animscripted_single_relative( "airport", "dx_bra_gfac_red_phone_airport" );
    animscripted_single_relative( "array", "dx_bra_gfac_red_phone_array" );
    animscripted_single_relative( "boneyard", "dx_bra_gfac_red_phone_boneyard" );
    animscripted_single_relative( "control_room", "dx_bra_gfac_red_phone_control_room" );
    animscripted_single_relative( "downtown", "dx_bra_gfac_red_phone_downtown" );
    animscripted_single_relative( "factory", "dx_bra_gfac_red_phone_factory" );
    animscripted_single_relative( "farmland", "dx_bra_gfac_red_phone_farmland" );
    animscripted_single_relative( "hospital", "dx_bra_gfac_red_phone_hospital" );
    animscripted_single_relative( "lumber", "dx_bra_gfac_red_phone_lumber" );
    animscripted_single_relative( "military_base", "dx_bra_gfac_red_phone_military_base" );
    animscripted_single_relative( "mine", "dx_bra_gfac_red_phone_mine" );
    animscripted_single_relative( "port", "dx_bra_gfac_red_phone_port" );
    animscripted_single_relative( "stadium", "dx_bra_gfac_red_phone_stadium" );
    animscripted_single_relative( "storage", "dx_bra_gfac_red_phone_storage" );
    animscripted_single_relative( "summit", "dx_bra_gfac_red_phone_summit" );
    animscripted_single_relative( "superstore", "dx_bra_gfac_red_phone_superstore" );
    animscripted_single_relative( "train", "dx_bra_gfac_red_phone_train" );
    animscripted_single_relative( "tv_station", "dx_bra_gfac_red_phone_tv_station" );
    announcedomplatespawns( "t9adler_western", "dx_bra_gfac_red_phone_adler" );
    announcedomplatespawns( "alex_western", "dx_bra_gfac_red_phone_alex" );
    announcedomplatespawns( "alice_western", "dx_bra_gfac_red_phone_alice" );
    announcedomplatespawns( "t9spetsnaz_eastern", "dx_bra_gfac_red_phone_antonov" );
    announcedomplatespawns( "azur_eastern", "dx_bra_gfac_red_phone_azur" );
    announcedomplatespawns( "t9navyseal_western", "dx_bra_gfac_red_phone_baker" );
    announcedomplatespawns( "bale_eastern", "dx_bra_gfac_red_phone_bale" );
    announcedomplatespawns( "t9west_western", "dx_bra_gfac_red_phone_beck" );
    announcedomplatespawns( "t9west_western", "dx_bra_gfac_red_phone_bomber" );
    announcedomplatespawns( "t9bulldozer_western", "dx_bra_gfac_red_phone_bulldozer" );
    announcedomplatespawns( "charly_western", "dx_bra_gfac_red_phone_charly" );
    announcedomplatespawns( "t9esports_western", "dx_bra_gfac_red_phone_competitor" );
    announcedomplatespawns( "dday_western", "dx_bra_gfac_red_phone_day" );
    announcedomplatespawns( "domino_western", "dx_bra_gfac_red_phone_domino" );
    announcedomplatespawns( "farah_western", "dx_bra_gfac_red_phone_farah" );
    announcedomplatespawns( "t9cub_eastern", "dx_bra_gfac_red_phone_garcia" );
    announcedomplatespawns( "kyle_western", "dx_bra_gfac_red_phone_gaz" );
    announcedomplatespawns( "ghost_western", "dx_bra_gfac_red_phone_ghost" );
    announcedomplatespawns( "t9ghostface_western", "dx_bra_gfac_red_phone_ghostface" );
    announcedomplatespawns( "golem_western", "dx_bra_gfac_red_phone_golem" );
    announcedomplatespawns( "griggs_western", "dx_bra_gfac_red_phone_griggs" );
    announcedomplatespawns( "grinch_eastern", "dx_bra_gfac_red_phone_grinch" );
    announcedomplatespawns( "t9hudson_western", "dx_bra_gfac_red_phone_hudson" );
    announcedomplatespawns( "t9st1_western", "dx_bra_gfac_red_phone_hunter" );
    announcedomplatespawns( "iskra_eastern", "dx_bra_gfac_red_phone_iskra" );
    announcedomplatespawns( "t9kingsley_western", "dx_bra_gfac_red_phone_kingsley" );
    announcedomplatespawns( "t9kitsune_western", "dx_bra_gfac_red_phone_kitsune" );
    announcedomplatespawns( "t9sas_western", "dx_bra_gfac_red_phone_knight" );
    announcedomplatespawns( "kreuger_eastern", "dx_bra_gfac_red_phone_krueger" );
    announcedomplatespawns( "lerch_eastern", "dx_bra_gfac_red_phone_lerch" );
    announcedomplatespawns( "metalghost_eastern", "dx_bra_gfac_red_phone_mace" );
    announcedomplatespawns( "zedra_western", "dx_bra_gfac_red_phone_mara" );
    announcedomplatespawns( "t9mason_western", "dx_bra_gfac_red_phone_mason" );
    announcedomplatespawns( "t9maxis_western", "dx_bra_gfac_red_phone_maxis" );
    announcedomplatespawns( "t9mcclane_western", "dx_bra_gfac_red_phone_mcclane" );
    announcedomplatespawns( "minotavr_eastern", "dx_bra_gfac_red_phone_minotaur" );
    announcedomplatespawns( "morte_western", "dx_bra_gfac_red_phone_morte" );
    announcedomplatespawns( "t9serpent_western", "dx_bra_gfac_red_phone_naga" );
    announcedomplatespawns( "nikolai_eastern", "dx_bra_gfac_red_phone_nikolai" );
    announcedomplatespawns( "spetsnaz_eastern", "dx_bra_gfac_red_phone_nikto" );
    announcedomplatespawns( "otter_western", "dx_bra_gfac_red_phone_otter" );
    announcedomplatespawns( "t9mi6_western", "dx_bra_gfac_red_phone_park" );
    announcedomplatespawns( "t9kgb_eastern", "dx_bra_gfac_red_phone_portnova" );
    announcedomplatespawns( "t9st5_western", "dx_bra_gfac_red_phone_powers" );
    announcedomplatespawns( "price_western", "dx_bra_gfac_red_phone_price" );
    announcedomplatespawns( "raines_western", "dx_bra_gfac_red_phone_raines" );
    announcedomplatespawns( "t9rambo_western", "dx_bra_gfac_red_phone_rambo" );
    announcedomplatespawns( "t9smuggler_western", "dx_bra_gfac_red_phone_rivas" );
    announcedomplatespawns( "rodion_eastern", "dx_bra_gfac_red_phone_rodion" );
    announcedomplatespawns( "ronin_western", "dx_bra_gfac_red_phone_ronin" );
    announcedomplatespawns( "roze_eastern", "dx_bra_gfac_red_phone_roze" );
    announcedomplatespawns( "t9quicksand_western", "dx_bra_gfac_red_phone_salah" );
    announcedomplatespawns( "default_eastern", "dx_bra_gfac_red_phone_sim" );
    announcedomplatespawns( "default_western", "dx_bra_gfac_red_phone_sim" );
    announcedomplatespawns( "t9cia_western", "dx_bra_gfac_red_phone_sims" );
    announcedomplatespawns( "soap_western", "dx_bra_gfac_red_phone_soap" );
    announcedomplatespawns( "t9st4_western", "dx_bra_gfac_red_phone_song" );
    announcedomplatespawns( "sparks_western", "dx_bra_gfac_red_phone_sparks" );
    announcedomplatespawns( "t9stitch_eastern", "dx_bra_gfac_red_phone_stitch" );
    announcedomplatespawns( "t9st3_western", "dx_bra_gfac_red_phone_stone" );
    announcedomplatespawns( "t9surge_western", "dx_bra_gfac_red_phone_stryker" );
    announcedomplatespawns( "syd_eastern", "dx_bra_gfac_red_phone_syd" );
    announcedomplatespawns( "crowfoot_western", "dx_bra_gfac_red_phone_talon" );
    announcedomplatespawns( "murphy_western", "dx_bra_gfac_red_phone_thorne" );
    announcedomplatespawns( "t9st2_western", "dx_bra_gfac_red_phone_vargas" );
    announcedomplatespawns( "velikan_eastern", "dx_bra_gfac_red_phone_velikan" );
    announcedomplatespawns( "t9weaver_western", "dx_bra_gfac_red_phone_weaver" );
    announcedomplatespawns( "t9deltaforce_western", "dx_bra_gfac_red_phone_wolf" );
    announcedomplatespawns( "t9woods_western", "dx_bra_gfac_red_phone_woods" );
    announcedomplatespawns( "t9wraith_western", "dx_bra_gfac_red_phone_wraith" );
    announcedomplatespawns( "wyatt_western", "dx_bra_gfac_red_phone_wyatt" );
    announcedomplatespawns( "yegor_eastern", "dx_bra_gfac_red_phone_yegor" );
    announcedomplatespawns( "zane_eastern", "dx_bra_gfac_red_phone_zane" );
    announcedomplatespawns( "t9zeyna_western", "dx_bra_gfac_red_phone_zeyna" );
}

relic_disable_health_regen()
{
    var_0 = level.completesmokinggunquest.play_collected_key_vo;
    var_1 = level.completesmokinggunquest.gxpphonegenericmaxspawns;
    var_2 = level.completesmokinggunquest.gxpphonecontrolroommaxspawns;

    if ( var_0 <= 0 && var_1 <= 0 && var_2 <= 0 )
        return;

    if ( !isdefined( level.play_authentication_error_window ) )
        return;

    var_3 = level.completesmokinggunquest.play_contract_announcer_maybe;

    if ( var_3 <= 0 )
        return;

    var_4 = getarraykeys( level.play_authentication_error_window );
    var_4 = scripts\engine\utility::array_randomize( var_4 );
    var_5 = [];
    var_6 = 0;

    for ( var_7 = 0; var_6 < var_3 && var_7 < var_4.size; var_7++ )
    {
        var_8 = var_4[var_7 % var_4.size];

        if ( var_8 == "generic" )
            var_9 = int( min( level.play_authentication_error_window[var_8].size, var_1 ) );
        else if ( var_8 == "control_room" )
            var_9 = int( min( level.play_authentication_error_window[var_8].size, var_2 ) );
        else
            var_9 = int( min( level.play_authentication_error_window[var_8].size, var_0 ) );

        if ( var_9 <= 0 )
            continue;

        var_10 = randomintrange( 0, var_9 + 1 );
        var_11 = int( min( var_3 - var_6, var_9 ) );
        var_5[var_8] = var_11;
        var_6 = var_6 + var_11;
    }

    for ( var_7 = 0; var_6 < var_3 && var_7 < var_4.size; var_7++ )
    {
        var_8 = var_4[var_7 % var_4.size];

        if ( var_5[var_8] < level.play_authentication_error_window[var_8].size )
        {
            var_11 = int( min( var_3 - var_6, level.play_authentication_error_window[var_8].size - var_5[var_8] ) );
            var_5[var_8] = var_5[var_8] + var_11;
            var_6 = var_6 + var_11;
        }
    }

    foreach ( var_17, var_13 in var_5 )
    {
        var_14 = level.play_authentication_error_window[var_17];

        if ( !isarray( var_14 ) )
            continue;

        var_15 = scripts\engine\utility::array_randomize( var_14 );

        if ( var_17 == "generic" )
            var_16 = var_1;
        else if ( var_17 == "control_room" )
            var_16 = var_2;
        else
            var_16 = var_0;

        for ( var_7 = 0; var_7 < var_15.size && var_7 < var_16; var_7++ )
            _id_127FC( var_15[var_7].origin, var_15[var_7].angles, var_17 );
    }

    level.play_authentication_error_window = [];
    level thread _id_130A2();
}

animatedprop_startanim( var_0 )
{
    level.play_bcs[level.play_bcs.size] = var_0;
}

animscripted_single_relative( var_0, var_1 )
{
    if ( !isarray( level.play_chopper_kill_vo[var_0] ) )
        level.play_chopper_kill_vo[var_0] = [];

    var_2 = level.play_chopper_kill_vo[var_0].size;
    level.play_chopper_kill_vo[var_0][var_2] = var_1;
}

announcedomplatespawns( var_0, var_1 )
{
    if ( !isarray( level.play_counter_beep_sfx_on_bomb_vests[var_0] ) )
        level.play_counter_beep_sfx_on_bomb_vests[var_0] = [];

    var_2 = level.play_counter_beep_sfx_on_bomb_vests[var_0].size;
    level.play_counter_beep_sfx_on_bomb_vests[var_0][var_2] = var_1;
}

anim_weapon( var_0, var_1, var_2 )
{
    if ( !isdefined( level.play_authentication_error_window[var_0] ) )
        level.play_authentication_error_window[var_0] = [];

    var_3 = level.play_authentication_error_window[var_0].size;

    if ( !isdefined( var_2 ) )
        var_2 = ( 0, 0, 0 );

    var_4 = spawnstruct();
    var_4.origin = var_1;
    var_4.angles = var_2;
    level.play_authentication_error_window[var_0][var_3] = var_4;
}

_id_127FC( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1 ) )
        var_1 = ( 0, 0, 0 );

    var_3 = ( 0, 0, 48 );
    var_4 = scripts\engine\trace::ray_trace( var_0 + var_3, var_0 - var_3 );
    var_5 = easepower( "gxp_telephone", var_4["position"], var_1 );
    var_5.location = var_2;
    level.play_death_sound_with_global_cooldown[level.play_death_sound_with_global_cooldown.size] = var_5;
}

disablephonesforplayer( var_0 )
{
    foreach ( var_2 in level.play_death_sound_with_global_cooldown )
        var_2 disablescriptableplayeruse( var_0 );
}

enablephonesforplayer( var_0 )
{
    foreach ( var_2 in level.play_death_sound_with_global_cooldown )
        var_2 enablescriptableplayeruse( var_0 );
}

run_openexfil_spawn( var_0 )
{
    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.dangercircleent ) )
        return 0;

    var_1 = scripts\mp\gametypes\br_circle.gsc::getdangercircleorigin();
    var_2 = scripts\mp\gametypes\br_circle.gsc::getdangercircleradius();
    var_3 = var_2 * var_2;

    if ( distance2dsquared( var_0, var_1 ) > var_3 )
        return 1;
    else
        return 0;
}

_id_130A2()
{
    if ( level.play_death_sound_with_global_cooldown.size <= 0 )
        return;

    var_0 = scripts\engine\utility::array_randomize( level.play_death_sound_with_global_cooldown );
    wait( randomfloatrange( level.completesmokinggunquest.gxpphonestartdelaymin, level.completesmokinggunquest.gxpphonestartdelaymax ) );

    for (;;)
    {
        var_1 = 1;

        if ( level.completesmokinggunquest.gxpphoneringphonesmin == level.completesmokinggunquest.gxpphoneringphonesmax )
            var_2 = level.completesmokinggunquest.gxpphoneringphonesmin;
        else
            var_2 = randomintrange( level.completesmokinggunquest.gxpphoneringphonesmin, level.completesmokinggunquest.gxpphoneringphonesmax );

        var_2 = min( var_2, var_0.size );
        var_3 = 0;

        foreach ( var_5 in var_0 )
        {
            var_3++;

            if ( !run_openexfil_spawn( var_5.origin ) )
            {
                var_1 = 0;
                thread _id_11FEC( var_5 );
            }

            if ( var_3 >= var_2 )
            {
                wait( randomfloatrange( level.completesmokinggunquest.gxpphonenextdelaymin, level.completesmokinggunquest.gxpphonenextdelaymax ) );
                var_3 = 0;
            }
        }

        if ( var_1 )
            break;

        waitframe();
    }
}

disablephoneforghosts( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_2 scripts\mp\gametypes\br_public.gsc::zombie() )
            var_0 disablescriptableplayeruse( var_2 );
    }
}

_id_11FEC( var_0 )
{
    var_0 setscriptablepartstate( "gxp_telephone", "ring" );
    disablephoneforghosts( var_0 );
    _id_11FE8( var_0 );
}

_id_11FE8( var_0 )
{
    var_0 endon( "answer" );
    wait 30;
    var_0 setscriptablepartstate( "gxp_telephone", "off" );
}

bot_dd_think( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\mp\gametypes\br_gametype_gxp_challenges.gsc::on_answered_phone( var_3 );
    thread _startragdollwithvehiclefeature( var_0, var_1, var_2, var_3 );
}

_startragdollwithvehiclefeature( var_0, var_1, var_2, var_3, var_4 )
{
    var_0 notify( "answer" );
    var_0 setscriptablepartstate( "gxp_telephone", "answer" );
    var_5 = "dx_brm_rugn_military_good_10";
    wait 2;
    var_6 = _id_11A95( var_0.location, var_3 );
    wait( 1 + var_6 );
    var_0 setscriptablepartstate( "gxp_telephone", "hangup" );
}

_id_11A95( var_0, var_1 )
{
    var_2 = 0;
    var_3 = undefined;
    var_4 = randomintrange( 0, level.completesmokinggunquest.play_disguise_vo );

    if ( var_4 < level.completesmokinggunquest.play_death_audio )
    {
        var_5 = var_1 scripts\mp\teams::lookupcurrentoperator( var_1.team );
        var_6 = level.play_counter_beep_sfx_on_bomb_vests[var_5];

        if ( isarray( var_6 ) && var_6.size > 0 )
            var_3 = var_6[randomintrange( 0, var_6.size )];
    }
    else if ( var_4 < level.completesmokinggunquest.play_death_audio + level.completesmokinggunquest.play_cinderblock_broken_fx || level.play_bcs.size <= 0 )
    {
        var_7 = level.play_chopper_kill_vo[var_0];

        if ( isarray( var_7 ) && var_7.size > 0 )
            var_3 = var_7[randomintrange( 0, var_7.size )];
    }

    if ( !isdefined( var_3 ) )
    {
        if ( level.play_bcs.size > 0 )
            var_3 = level.play_bcs[randomintrange( 0, level.play_bcs.size )];
    }

    if ( isdefined( var_3 ) )
    {
        var_1 playsoundtoplayer( var_3, var_1 );
        var_2 = lookupsoundlength( var_3 ) / 1000;
    }

    return var_2;
}
