// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level thread corner0to2dist();
    level thread copyplayerplundereventdata();
    level thread corner3to0dist();
    level thread copy_wave_settings_from_module();
    level thread copycirclearraystartingat();
}

copyplayerplundereventdata()
{
    if ( getdvarint( "scr_brking_debug", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "allowLateJoiners" );

    setdvar( "scr_br_moving_circle_enabled", 1 );
    setdvar( "scr_br_allowLoadout", 1 );
    setomnvar( "ui_gulag_state", 1 );
    setomnvar( "ui_hide_redeploy_timer", 1 );
    level.little_bird_mg_cp_onentervehicle = getdvarint( "scr_kingslayer_forceDisableLS", 0 ) == 1;
    level.parachute_set_spawn_values = getdvarint( "scr_dmz_giveLoadoutEveryTime", 1 );
    level.relic_steelballs_dash = getdvarint( "scr_bmo_instantBleedOutSquadWipe", 1 );
    level.set_relic_thirdperson = getdvarint( "scr_kingslayer_killsBeforePlacement", 1 );
    level.set_relic_trex = getdvarint( "scr_kingslayer_kingsWorthExtraBeforePlacement", 0 );
    level.set_shouldrespawn = getdvarint( "scr_kingslayer_pointsToWin", 50 );
    level.set_respawn_loc_delayed = getdvarint( "scr_kingslayer_pointBonusForTeam", 1 ) == 1;
    level.set_respawn_points = getdvarint( "scr_kingslayer_pointKingsGetNoBonus", 1 ) == 1;
    level.set_scriptable_states = getdvarint( "scr_kingslayer_pointsPerKing", 5 );
    setdvar( "scr_risk_win_cost", level.set_shouldrespawn );
    level.playertakeextractionplunder = getdvarint( "scr_bmo_hideLeaderHashUntilPercent", 0 );
    level.hoopty_truck_initomnvars = getdvarint( "scr_dmz_loot_leader_update_on_pickup", 0 ) == 1;
    level._id_1254C = getdvarint( "scr_bmo_progressSplashesAndMusic", 1 );
    level._id_121F3 = getdvarint( "scr_bmo_secondsBeforePlacementUpdates", 60 );
    level.helipad_getheli = getdvarint( "scr_bmo_disable_perc_announcements", 0 );
    level.spawn_pickup_weapon = getdvarint( "scr_dmz_loot_leader_mark_count", 3 );
    level.start_hack = getdvarint( "scr_dmz_loot_leader_mark_count", 3 );
    level.spawn_race_dogtags = getdvarint( "scr_bmo_loot_leader_mark_size", 1000 );
    level.spawn_router_model = getdvarint( "scr_dmz_loot_leader_one_per_team", 1 ) == 1;
    level.spawn_real_letter = getdvarint( "scr_bmo_loot_leader_mark_size_dynamic", 0 );
    level.spawn_reinforcement_group = getdvarint( "scr_bmo_loot_leader_mark_info_strong_size", 2000 );
    level.spawn_remote_tank_thermite = getdvarint( "scr_bmo_loot_leader_mark_info_strong_value", 5000 );
    level.spawn_removefromarrays = getdvarint( "scr_bmo_loot_leader_mark_info_weak_size", 5000 );
    level.spawn_riders_and_play_intro_idle_anim = getdvarint( "scr_bmo_loot_leader_mark_info_weak_value", 1000 );
    level.spawn_real_number = getdvarint( "scr_bmo_loot_leader_mark_top_teams", 3 );
    level.spawn_player_vehicle = getdvarint( "scr_kingslayer_lootLeaderUpdateMarkerTime", 0 );
    level._id_11ADA = getdvarfloat( "scr_bmo_music_first", 0.3 );
    level._id_11ADC = getdvarfloat( "scr_bmo_music_second", 0.5 );
    level._id_11ADD = getdvarfloat( "scr_bmo_music_third", 0.75 );
    level._id_11ADB = getdvarfloat( "scr_bmo_music_fourth", 0.9 );
    level.getextractionposition = getdvarfloat( "scr_kingslayer_dangerNotifyCooldown", 20 );
    level.getextractionsites = [];
    level._id_130F9 = getdvarint( "scr_dmz_useAutoRespawn", 1 );
    level.brplacementchallengeallowed = getdvarint( "scr_dmz_autoRespawnWaitTime", 1 );
    level._id_12CCD = getdvarint( "scr_dmz_tokenRespawnWaitTime", level.brplacementchallengeallowed );
    level.project_to_line = getdvarint( "scr_dmz_respawn_penalty", 0 );
    level.project_to_line_seg = getdvarfloat( "scr_dmz_respawn_penalty_max", 15 );
    level._id_11F58 = getdvarint( "scr_bmo_respawnHeightOverride", 5000 );
    level._id_11F64 = getdvarint( "scr_dmz_respawn_time_disable", 0 );
    level.validtousesticker = getdvarfloat( "scr_bmo_parachuteDeployDelay", 0.5 );
    level.set_relic_steelballs_perks = getdvarint( "scr_kingslayer_hideKingsOnSpawn", 1 ) == 1;
    level.set_slow_healthregen = getdvarint( "scr_kingslayer_spawnProtection", 1 ) == 1;
    level.set_solution = getdvarfloat( "scr_kingslayer_spawnProtectionModifier", 0.5 );
    level.set_showing_bomb_wire_pair_to_player = getdvarfloat( "scr_kingslayer_spawnLauncherDamage", 0.5 );
    level._id_125C1 = getdvarint( "scr_bmo_skipWeaponDropOnDeath", 1 );
    level._id_125A9 = getdvarint( "scr_bmo_skipEquipmentDropOnDeath", 1 );
    level.little_bird_initdamage = getdvarint( "scr_bmo_forceArmorDropOnDeath", 2 );
    level.set_relic_oneclip = getdvarint( "scr_kingslayer_circleMoveDistance", 18000 );
    level.set_relic_nobulletdamage = getdvarint( "scr_kingslayer_airdropPerCircle", 1 );
    level.set_relic_no_ammo_mun = getdvarint( "scr_kingslayer_airdropCrateUseTime", 3 );
    level.set_relic_mythic = getdvarint( "scr_kingslayer_airdropCrateArmor", 3 );
    level.set_relic_noluck = getdvarint( "scr_kingslayer_circleCount", 20 );
    level.set_relic_squadlink = getdvarfloat( "scr_kingslayer_circleRadius", 10100 );
    level.set_relic_noks = getdvarfloat( "scr_kingslayer_circleCloseTime", 50 );
    level.set_relic_noregen = getdvarfloat( "scr_kingslayer_circleDelayTime", 50 );
    level.set_relic_nuketimer = getdvarint( "scr_kingslayer_circleMiniMapRadius", 4750 );
    level.set_relic_rocket_kill_ammo = getdvarint( "scr_kingslayer_movingCircle", 1 ) == 1;
    level.set_relic_punchbullets = getdvarint( "scr_kingslayer_circleMovesAwayFromLeader", 1 );
    level.set_relic_shieldsonly = getdvarint( "scr_kingslayer_circleOutOfBoundsPadding", 1 );
    level.supportbox_playusesound = ::_id_119D4;
    level.introcinematic = getdvarint( "scr_bmo_endMatchCameraTransitions", 1 );
    level._id_12CDF = [];
    level.spawn_rpgs_for_players = [];
    level.detonatefxair = 0;
    level.detonatesound = 0;
    level.detonatingplayer = 0;

    if ( getdvarint( "scr_kingslayer_disableKiosks", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "kiosk" );

    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "gulag" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "dropbag" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "oneLife" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "plunderSites" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "missions" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "randomizeCircleCenter" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "planeSnapToOOB" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "tabletReplace" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "planeUseCircleRadius" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "circleEarlyStart" );

    if ( getdvarint( "scr_kingslayer_disableLoot", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "loot" );

    if ( getdvarint( "scr_kingslayer_disableArmor", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "armor" );

    level.onstartgametype = ::onstartgametype;
    level.support_update_hint_logic = ::support_box_use_logic;
    level.ononeleftevent = ::ononeleftevent;
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerShouldRespawn", ::_id_119C0 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "spawnHandled", ::_id_127E1 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onPlayerConnect", ::cp_dntsk_raid_sound_load );
    scripts\mp\utility\game::registerroundswitchdvar( scripts\mp\utility\game::getgametype(), 0, 0, 9 );
    scripts\mp\utility\game::registertimelimitdvar( scripts\mp\utility\game::getgametype(), 600 );
    scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), 75 );
    scripts\mp\utility\game::registerroundlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
    scripts\mp\utility\game::registerwinlimitdvar( scripts\mp\utility\game::getgametype(), 1 );
    scripts\mp\utility\game::registernumlivesdvar( scripts\mp\utility\game::getgametype(), 0 );
    scripts\mp\utility\game::registerhalftimedvar( scripts\mp\utility\game::getgametype(), 0 );
    level.circleposattime = ::bomb_label;
    level.set_relic_team_proximity = [];
    level._id_1254A = 1;
}

_id_127E1( var_0 )
{
    return istrue( var_0.br_infilstarted ) && scripts\mp\flags::gameflag( "prematch_done" );
}

_id_119C0( var_0 )
{
    return 1;
}

corner0to2dist()
{
    var_0 = spawnstruct();
    var_0.weights = [];
    level.set_relic_amped = var_0;
    convoy_left_gulag_monitor( "toma_strike", getdvarint( "scr_kingslayer_kingkill_toma", 50 ) );
    convoy_left_gulag_monitor( "precision_airstrike", getdvarint( "scr_kingslayer_kingkill_precision", 10 ) );
    convoy_left_gulag_monitor( "directional_uav", getdvarint( "scr_kingslayer_kingkill_auav", 40 ) );
}

corner3to0dist()
{
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "createC130PathStruct", ::convoy_turret );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "addToC130Infil", ::convoy_pos );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerWelcomeSplashes", ::cp_friendlyfire_enabled );
    waittillframeend;
    scripts\mp\flags::gameflaginit( "placement_updates_allowed", 0 );
    level.ontimelimit = ::cp_dwn_twn_2_sound_load;
    level.onplayerkilled = ::cp_dntsk_raid_specific_init;
    level.supply_station_direction = ::zombienumhitsatv;
    level.modifyplayerdamage = ::covertransitionrate;
    level.assists_disabled = undefined;
    scripts\cp_mp\utility\script_utility::registersharedfunc( "br_c130Airdrop", "c130Airdrop_onCrateUse", ::cp_arms_dealer_sound_load );
    convoy_start_5b();
    relic_mythic_do_pain();
    level.spawn_queue_think = [];
    level._id_13158 = [];
    level._id_13158[0] = "assassination";
    level._id_13158[1] = "domination";
    level._id_13158[2] = "scavenger";
    level thread iscontender();
    level thread cp_is_point_on_right();
    level thread course_triggers_expl();
    level thread countlefthand();
    thread _id_133B4();
    level thread wait_for_one_player_near_point();

    if ( getdvarfloat( "scr_dmz_loot_leader_update_interval", 15.0 ) > 0.0 )
        level thread _id_13094();

    if ( istrue( level.introcinematic ) )
        level thread register_sequence_3_objectives();

    scripts\mp\rank::use_emp_drone_func( "kill", 100 );
    scripts\mp\rank::use_emp_drone_func( "br_cacheOpen", 200 );
}

copy_wave_settings_from_module()
{
    level endon( "game_ended" );
    level waittill( "br_dialog_initialized" );
    game["dialog"]["match_start"] = "gametype_tdm";
}

convoy_start_5b()
{
    scripts\cp_mp\utility\game_utility::_id_11ED3( "delete_on_load", "targetname" );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_prison_cell_metal_mp", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_wooden_panel_mp_01", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "me_electrical_box_street_01", 1 );
}

copycirclearraystartingat()
{

}

relic_mythic_do_pain()
{
    foreach ( var_1 in level.teamnamelist )
    {
        level.teamdata[var_1]["teamTotalScore"] = 0;
        level.teamdata[var_1]["tokensTeamTotal"] = 0;
    }
}

convoy_left_gulag_monitor( var_0, var_1 )
{
    level.set_relic_amped.weights[var_0] = var_1;
}

coop_escort_try_start_driving_func( var_0 )
{
    var_1 = [];
    var_2 = 0;

    foreach ( var_5, var_4 in level.set_relic_amped.weights )
    {
        var_2 = var_2 + var_4;
        var_1[var_5] = var_2;
    }

    var_6 = randomint( var_2 );
    var_7 = undefined;

    foreach ( var_5, var_2 in var_1 )
    {
        if ( var_6 < var_2 )
        {
            var_7 = var_5;
            break;
        }
    }

    return var_7;
}

cp_friendlyfire_enabled( var_0 )
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_kingslayer_prematch_welcome" );

    if ( !istrue( level.br_infils_disabled ) )
    {
        self waittill( "br_jump" );

        while ( !self isonground() )
            waitframe();
    }
    else
        level waittill( "prematch_done" );

    scripts\mp\gametypes\br_analytics.gsc::close_trap_room_door( self );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_kingslayer_welcome" );
    scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "primary_objective", self, 0 );
}

cp_dwn_twn_2_sound_load()
{
    if ( isdefined( level.numendgame ) )
        level thread scripts\mp\gametypes\br.gsc::startendgame( 1 );

    level.numendgame = undefined;
}

onstartgametype()
{
    foreach ( var_1 in level.teamnamelist )
    {
        scripts\mp\utility\game::setobjectivetext( var_1, &"OBJECTIVES/WAR" );

        if ( level.splitscreen )
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"OBJECTIVES/WAR" );
        else
            scripts\mp\utility\game::setobjectivescoretext( var_1, &"OBJECTIVES/WAR_SCORE" );

        scripts\mp\utility\game::setobjectivehinttext( var_1, &"OBJECTIVES/WAR_HINT" );
    }
}

support_box_use_logic( var_0 )
{
    thread playerrespawn();
    return 1;
}

zombienumhitsatv( var_0, var_1 )
{
    if ( !scripts\mp\flags::gameflag( "prematch_done" ) )
        return 0;

    var_0.victim thread playerrespawn();
    return 1;
}

cover_guys_debug()
{
    self endon( "death_or_disconnect" );
    self endon( "ks_remove_spawn_protection" );
    self.set_slow_healthregen = 1;

    while ( !self isonground() )
        waitframe();

    if ( level.set_relic_steelballs_perks )
        self.set_relic_steelballs = 0;

    self.set_slow_healthregen = 0;
    self notify( "ks_remove_spawn_protection" );
}

coverreloadnotetrackhandler()
{
    self endon( "death_or_disconnect" );
    self endon( "ks_remove_spawn_protection" );
    self.set_slow_healthregen = 1;
    self waittill( "weapon_fired" );

    if ( level.set_relic_steelballs_perks )
        self.set_relic_steelballs = 0;

    self.set_slow_healthregen = 0;
    self notify( "ks_remove_spawn_protection" );
}

courtyard_intel_sequence()
{
    self endon( "death_or_disconnect" );
    self.set_relic_vampire = 1;

    while ( !self isonground() )
        waitframe();

    self.set_relic_vampire = 0;
}

covertransitionrate( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( level.set_slow_healthregen )
    {
        if ( isdefined( var_1.set_slow_healthregen ) && var_1.set_slow_healthregen == 1 )
            var_3 = var_3 * level.set_solution;

        if ( isdefined( var_2 ) && isdefined( var_2.set_relic_vampire ) && var_2.set_relic_vampire == 1 )
        {
            switch ( var_4 )
            {
                case "MOD_EXPLOSIVE":
                case "MOD_GRENADE_SPLASH":
                case "MOD_GRENADE":
                case "MOD_PROJECTILE_SPLASH":
                    var_3 = var_3 * level.set_showing_bomb_wire_pair_to_player;
                    break;
            }
        }
    }

    var_3 = scripts\mp\gametypes\br.gsc::brmodifyplayerdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
    return var_3;
}

playerrespawn()
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( istrue( level.gameended ) )
        return;

    if ( getdvarint( "scr_bmo_use_spawn_fix", 1 ) == 1 )
        self endon( "brWaitAndSpawnClientComplete" );

    var_0 = scripts\mp\utility\teams::getteamdata( self.team, "teamCount" );

    if ( !istrue( self._id_128BF ) || var_0 == 1 )
    {
        var_1 = 1.0;
        wait( var_1 );
    }

    var_2 = level.brplacementchallengeallowed;
    var_3 = getdvarfloat( "scr_bmo_respawn_predict_hint_time", 5.0 );

    if ( var_2 < var_3 )
        var_2 = var_3;

    if ( level._id_11F64 != 0 )
        var_2 = 0;

    var_4 = getdvarfloat( "scr_bmo_squad_wiped_stream_time", 3.0 );
    scripts\engine\utility::ent_flag_init( "playerRespawn_intermission_spawned" );
    self.remove_bank_lbravos = undefined;
    self.remove_carry_item = undefined;

    if ( istrue( self._id_128BF ) || var_0 == 1 )
    {
        var_5 = cop_car_initdamage();
        var_6 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_5 );
        thread kickplayersatcircleedge( 0.0, var_0 > 1 );
        wait( var_4 );
    }
    else if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
    {
        scripts\mp\utility\lower_message::setlowermessageomnvar( 9, int( gettime() + var_2 * 1000 ) );
        var_7 = var_2 - var_3;
        var_8 = var_2 - var_7;
        var_9 = var_2 - getdvarfloat( "scr_bmo_respawn_intermission_time", 6.0 );
        thread kickplayersatcircleedge( var_9 );
        var_10 = scripts\engine\utility::waittill_notify_or_timeout_return( "squad_wipe_death", var_7 );

        if ( var_10 == "squad_wipe_death" )
        {
            var_5 = cop_car_initdamage();
            var_6 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_5 );
            thread kickplayersatcircleedge( 0.0, 1 );
            wait( var_4 );
        }
        else
        {
            thread _id_130AA();
            var_10 = scripts\engine\utility::waittill_notify_or_timeout_return( "squad_wipe_death", var_8 );

            if ( var_10 == "squad_wipe_death" )
            {
                var_5 = cop_car_initdamage();
                var_6 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_5 );
                thread kickplayersatcircleedge( 0.0, 1 );
                wait( var_4 );
            }
        }
    }

    self notify( "stop_updatePrestreamRespawn" );
    var_5 = cop_car_initdamage();
    var_6 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_5 );

    if ( istrue( self._id_128BF ) )
    {
        self._id_128BF = 0;

        if ( var_0 > 1 && !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
            scripts\mp\hud_message::showsplash( "bm_your_squad_wiped" );
    }

    if ( !cosfov( var_5.origin ) )
    {
        var_11 = coop_handle_invuln_ac130( 0, 0.7 );
        var_5.origin = ( var_11[0], var_11[1], var_5.origin[2] );
    }

    scripts\engine\utility::ent_flag_clear( "playerRespawn_intermission_spawned" );
    self.remove_bank_lbravos = undefined;
    self.remove_carry_item = undefined;
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    scripts\mp\playerlogic::spawnplayer( undefined, 0 );
    scripts\cp_mp\execution::_clearexecution();
    scripts\mp\gametypes\br_pickups.gsc::initplayer();

    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() && isdefined( level.watchtrigger ) )
        var_5 = scripts\engine\utility::getstruct( level.watchtrigger, "targetname" );

    scripts\mp\gametypes\br_gulag.gsc::gulagwinnerrespawn( 1, undefined, var_5, 1, var_6, 1 );
    scripts\mp\gametypes\br.gsc::_id_12FD8( self );
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "player_respawn" );
    scripts\mp\trials\trial_utility::_id_12360( "ui_br_transition_type", 0 );

    if ( level.set_slow_healthregen )
    {
        thread coverreloadnotetrackhandler();
        thread cover_guys_debug();
        thread courtyard_intel_sequence();
    }

    self setclientomnvar( "ui_ctf_flag_carrier", 0 );

    foreach ( var_13 in level.spawn_rpgs_for_players )
    {
        if ( var_13 == self )
        {
            breakarmor();
            break;
        }
    }
}

cop_car_initdamage()
{
    var_0 = undefined;
    var_1 = undefined;
    var_2 = undefined;
    var_3 = 1;

    if ( isdefined( self.setspawnpoint ) )
    {
        var_0 = self.setspawnpoint.playerspawnpos;
        var_1 = self.setspawnpoint.playerspawnangles;
    }

    var_4 = getdvarfloat( "scr_kingslayer_respawnMinRadiusPercent", 0.8 );
    var_5 = getdvarfloat( "scr_kingslayer_respawnMaxRadiusPercent", 0.9 );
    var_6 = getdvarfloat( "scr_kingslayer_respawnRandomArea", 100 );

    if ( !isdefined( var_0 ) && var_6 >= 0 )
    {
        var_7 = scripts\mp\gametypes\br_gulag.gsc::weaponpickupflyoutbit();

        if ( isdefined( var_7 ) )
        {
            var_8 = cooldownsec();
            var_9 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
            var_10 = vectornormalize( var_7.origin - var_8 ) * ( var_9 * var_4 ) + var_8;
            var_0 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_10, var_6, var_4, var_5 );

            if ( isdefined( var_0 ) )
            {
                var_0 = scripts\mp\gametypes\br_public.gsc::init_rpg_spawns( var_0 );
                var_1 = scripts\mp\gametypes\br_gulag.gsc::mousetrapwatcher( var_0, var_7.origin );
            }
        }
    }

    if ( !isdefined( var_0 ) )
    {
        if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
        {
            var_11 = cooldownsec();
            var_12 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
            var_13 = getdvarint( "scr_br_maxRespawnDropToGround", 1 );
            var_14 = getdvarint( "scr_br_maxRespawnSnapToNavMesh", 1 );
            var_0 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_11, var_12, var_4, var_5 );
            var_1 = scripts\mp\gametypes\br_gulag.gsc::mousetrapwatcher( var_0, var_11 );
        }
        else if ( isdefined( level.prematchspawnorigins ) )
        {
            if ( isdefined( level.teamdata[self.team]["chosenSpawnWipeOrigin"] ) && isdefined( level.teamdata[self.team]["spawnWipeOriginUseStartTime"] ) && isdefined( level.brplacementchallengeallowed ) && level.teamdata[self.team]["spawnWipeOriginUseStartTime"] + level.brplacementchallengeallowed * 1000 > gettime() )
                var_0 = level.teamdata[self.team]["chosenSpawnWipeOrigin"];
            else
            {
                var_15 = [];

                foreach ( var_17 in level.prematchspawnorigins )
                {
                    if ( distance2dsquared( var_17.origin, self.origin ) > var_6 )
                        var_15[var_15.size] = var_17;
                }

                if ( var_15.size == 0 )
                    var_15 = level.prematchspawnorigins;

                var_15 = scripts\engine\utility::array_randomize( var_15 );
                var_0 = var_15[0].origin;
                var_0 = var_0 + scripts\engine\math::random_vector_2d() * randomfloatrange( 100, 500 );
                level.teamdata[self.team]["chosenSpawnWipeOrigin"] = var_0;
                level.teamdata[self.team]["spawnWipeOriginUseStartTime"] = gettime();
            }

            var_1 = ( 0, 0, 0 );

            if ( var_0[2] > 10000 )
            {
                var_3 = 0;
                var_2 = scripts\mp\gametypes\br_infils.gsc::getinfilspawnoffset();
            }
        }
        else
        {
            var_0 = ( 0, 0, 0 );
            var_1 = ( 0, 0, 0 );
        }
    }

    if ( !isdefined( var_1 ) )
    {
        var_19 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
        var_20 = vectortoyaw( var_19 - var_0 );
        var_1 = ( 0, var_20, 0 );
    }

    if ( var_3 )
    {
        if ( !isdefined( var_2 ) )
            var_2 = scripts\cp_mp\parachute::getc130height();

        if ( isdefined( level.br_circle ) )
        {
            var_21 = level.br_circle.circleindex;
            var_22 = scripts\mp\gametypes\br_gulag.gsc::nextstar();
            var_23 = isdefined( var_21 ) && var_21 >= var_22;

            if ( var_23 )
                var_2 = var_2 * getdvarfloat( "scr_br_gulagClosedSpawnOffsetScaler", 0.55 );
        }

        if ( isdefined( level._id_11F58 ) )
            var_2 = level._id_11F58;

        var_24 = ( 0, 0, var_2 );
        var_0 = scripts\mp\gametypes\br.gsc::getoffsetspawnorigin( var_0, var_24 );
    }

    var_25 = spawnstruct();
    var_25.origin = var_0;
    var_25.angles = var_1;
    var_25.height = var_2;
    return var_25;
}

kickplayersatcircleedge( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self notify( "fadeToGearingUp" );
    self endon( "fadeToGearingUp" );

    if ( isdefined( var_0 ) && var_0 > 0 )
        wait( var_0 );

    var_2 = 1.0;
    thread fadeoutin();
    wait( var_2 - 0.25 );

    if ( getdvarint( "scr_kingslayer_tacMapCenterAndZoom", 1 ) == 1 )
        scripts\mp\gametypes\br.gsc::current_respawn_point_override();

    if ( istrue( var_1 ) )
        scripts\mp\trials\trial_utility::_id_12360( "ui_br_transition_type", 6 );
    else
        scripts\mp\trials\trial_utility::_id_12360( "ui_br_transition_type", 2 );

    wait 0.25;

    if ( getdvarint( "scr_bmo_use_spawn_intermission_fix", 1 ) == 1 )
    {
        scripts\mp\gametypes\br_public.gsc::weapon_xp_iw8_ar_kilo433();
        var_3 = cop_car_initdamage();
        scripts\mp\gametypes\br_spectate.gsc::weapon_xp_iw8_ar_golf36();
        scripts\mp\gametypes\br.gsc::spawnintermission( var_3.origin, var_3.angles );
        scripts\mp\spectating::setdisabled();
        self.remove_bank_lbravos = var_3.origin;
        self.remove_carry_item = gettime();
        scripts\engine\utility::ent_flag_set( "playerRespawn_intermission_spawned" );
    }
}

fadeoutin()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    scripts\mp\gametypes\br_gulag.gsc::gulagfadetoblack();
    self waittill( "spawned_player" );
    scripts\mp\gametypes\br_gulag.gsc::gulagfadefromblack();
}

_id_130AA()
{
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self endon( "stop_updatePrestreamRespawn" );

    for (;;)
    {
        if ( scripts\engine\utility::ent_flag( "playerRespawn_intermission_spawned" ) )
        {
            var_0 = cop_car_initdamage();
            var_1 = gettime();

            if ( var_1 - self.remove_carry_item >= getdvarfloat( "scr_bmo_spawn_fallback_hint_delay", 2.0 ) * 1000 )
            {
                var_0 = cop_car_initdamage();
                var_2 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_0 );
            }
        }
        else
        {
            var_0 = cop_car_initdamage();
            var_2 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_0 );
        }

        wait 1.0;
    }
}

convoy_turret()
{
    var_0 = getdvarint( "scr_kingslayer_first_point_distance", 30000 );
    level.br_level.circleradius[0] = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( level.br_level.circleradius[0], var_0 );

    if ( istrue( level.set_relic_rocket_kill_ammo ) )
        coverupmodels( 0 );
    else
        level.br_level.circleradius[1] = level.br_level.circleradius[0];

    var_1 = ( level.br_level.circleradius[0][0], level.br_level.circleradius[0][1], 0 );
    var_2 = level.br_level.br_circleradii[0];
    var_3 = scripts\mp\gametypes\br_c130.gsc::createtestc130path( var_1, var_2 );
    return var_3;
}

convoy_pos()
{
    thread cosmeticattachment();
}

cosmeticattachment()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = distance( self.vehicle_collision_update.startpt, self.vehicle_collision_update.invuln_to_veh_crush );
    var_1 = var_0 / scripts\mp\gametypes\br_c130.gsc::getc130speed() - 5;
    wait( var_1 );

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isdefined( var_3.br_infil_type ) && var_3.br_infil_type == "c130" && !isdefined( var_3.jumptype ) )
        {
            var_3.jumptype = "outOfBounds";
            var_3 notify( "halo_kick_c130" );
        }
    }
}

course_triggers_expl()
{
    level endon( "game_ended" );

    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        return;

    level waittill( "br_prematchEnded" );
    wait 20;
    level thread _id_129B1();
}

_id_129B1()
{
    level endon( "game_ended" );

    for (;;)
    {
        for ( var_0 = 0; var_0 < level.set_relic_nobulletdamage; var_0++ )
        {
            var_1 = coop_handle_invuln_ac130( 0, 0.6 );
            var_2 = spawnstruct();
            var_2.origin = var_1;
            var_2.calculatewinningteam = spawn( "script_model", var_2.origin );
            var_2.calculatewinningteam setmodel( "ks_airdrop_crate_br" );
            level thread init_relic_amped( var_2, "gametype_kingslayer" );
        }

        wait( level.set_relic_noks + level.set_relic_noregen );
    }
}

init_relic_amped( var_0, var_1 )
{
    level endon( "game_ended" );

    if ( !isdefined( var_0.init_relic_rocket_kill_ammo ) )
        var_0.init_relic_rocket_kill_ammo = level.set_relic_squadlink;

    if ( scripts\cp_mp\utility\game_utility::sat_piece() )
        var_2 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_0.origin, var_0.init_relic_rocket_kill_ammo );
    else
        var_2 = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_0.origin, var_0.init_relic_rocket_kill_ammo );

    if ( istrue( level._id_13103 ) )
        var_2 = scripts\mp\gametypes\br_rewards.gsc::obj_room_fire_03( var_2 );

    var_3 = scripts\mp\gametypes\br_c130airdrop.gsc::delete_old_gate( undefined, var_2, 1 );
    var_4 = distance( var_3.startpt, var_3.endpt );
    var_5 = scripts\mp\gametypes\br_c130.gsc::getc130speed();
    var_6 = var_4 / var_5;
    var_7 = scripts\mp\gametypes\br_c130airdrop.gsc::delete_starting_boxes( var_3, var_4, var_5, var_6 );
    var_7.init_relic_dogtags = ::init_relic_dogtags;
    var_7._id_1268A = var_1;
    var_7 scripts\mp\gametypes\br_c130airdrop.gsc::delete_structs_on_self_death( 1, "battle_royale_c130_loot", "kingslayer_world", var_0 );
}

init_relic_dogtags( var_0, var_1, var_2, var_3 )
{
    var_4 = self.startpt;
    var_5 = self.centerpt;
    var_6 = self.speed;
    var_7 = distance2d( var_4, var_5 ) / var_6;
    var_8 = 0;
    var_9 = 0;

    for ( level.trial_time_remaining = level.trial_time_remaining + var_0; var_8 < var_0; var_12._id_1312F = multieventdisabled() )
    {
        wait( var_7 );
        var_10 = scripts\mp\gametypes\br_c130airdrop.gsc::delete_on_unloaded( self.origin, 1 );
        var_11 = scripts\cp_mp\killstreaks\airdrop::init_pipe_room_obj( var_10 + ( 0, 0, level.delete_race - 100 ), var_10, self.angles, var_1, var_2, var_3.transitionplayersoutofac130cinematic );
        var_8++;
        var_11.init_reach_icbm_launch = var_3;
        var_11._id_1268A = self._id_1268A;
        level.delete_trapfunc[level.delete_trapfunc.size] = var_11;
        var_12 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_11 );
    }
}

cp_arms_dealer_sound_load( var_0 )
{
    var_1 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
    var_2 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
    scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_killstreak_uav", var_2 );
    var_2 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
    scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_killstreak_clusterstrike", var_2 );
    var_2 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
    scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_killstreak_precision_airstrike", var_2 );

    if ( !isdefined( var_0.spawn_maint_wave_2 ) )
        var_0.spawn_maint_wave_2 = 1;
    else
        var_0.spawn_maint_wave_2++;

    var_0 scripts\mp\utility\stats::setextrascore1( var_0.spawn_maint_wave_2 );
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_c130_box_open" );
}

multieventdisabled()
{
    return level.set_relic_no_ammo_mun;
}

bomb_label()
{
    level.br_level.br_circleclosetimes = [ level.set_relic_noks, level.set_relic_noks ];
    level.br_level.br_circledelaytimes = [ level.set_relic_noregen + 40, level.set_relic_noregen ];
    level.br_level.circlesettingsassert = [ 1, 0 ];
    level.br_level.circlesetup = [ 0, 0 ];
    level.br_level.br_circleminimapradii = [ level.set_relic_nuketimer, level.set_relic_nuketimer ];
    level.br_level.br_circleradii = [ level.set_relic_squadlink, level.set_relic_squadlink, level.set_relic_squadlink ];

    if ( istrue( level.set_relic_rocket_kill_ammo ) )
    {
        var_0 = [];
        var_1 = [];
        var_2 = [];
        var_3 = [];

        for ( var_4 = 0; var_4 < level.set_relic_noluck; var_4++ )
        {
            var_0[var_0.size] = level.set_relic_squadlink;
            var_1[var_1.size] = level.set_relic_noks;
            var_2[var_2.size] = level.set_relic_noregen;
            var_3[var_3.size] = level.set_relic_nuketimer;
        }

        scripts\mp\gametypes\br_circle.gsc::jeep_horn( var_0, var_1, var_2, var_3 );
    }
    else
        level.br_level._id_129EC = 1;
}

_id_133B4()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    thread cp_is_point_in_front();
}

cp_dntsk_raid_sound_load( var_0 )
{
    var_0.vehicles_spawned = 0;
    var_0.set_relic_dfa = 0;
    var_0.set_relic_damage_from_above = 0;
}

cp_dntsk_raid_specific_init( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    scripts\mp\gametypes\br.gsc::onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

    if ( level.set_relic_steelballs_perks )
        self.set_relic_steelballs = 1;

    has_relic_amped_victim_survived_time();

    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        return;

    if ( isdefined( var_1 ) && isplayer( self ) )
        cop_car_initomnvars( var_1, self );
}

cop_car_initomnvars( var_0, var_1 )
{
    if ( !scripts\mp\flags::gameflag( "prematch_done" ) )
        return;

    if ( var_0 != var_1 && isdefined( var_0.team ) )
    {
        var_2 = var_0.team;
        var_3 = 1;
        var_4 = 1;

        if ( level.set_respawn_points )
        {
            foreach ( var_6 in level.spawn_rpgs_for_players )
            {
                if ( !isdefined( var_6 ) )
                    continue;

                if ( var_6.team == var_2 )
                {
                    var_4 = 0;
                    break;
                }
            }
        }

        if ( level.set_relic_trex == 0 && !scripts\mp\flags::gameflag( "placement_updates_allowed" ) )
            var_4 = 0;

        if ( var_4 == 1 )
        {
            foreach ( var_6 in level.spawn_rpgs_for_players )
            {
                if ( !isdefined( var_6 ) )
                    continue;

                var_9 = scripts\engine\utility::ter_op( level.set_respawn_loc_delayed, var_6.team == var_1.team, var_6 == var_1 );

                if ( var_9 )
                {
                    var_3 = level.set_scriptable_states;
                    var_0.set_relic_dfa++;
                    var_0 usingtacmap();
                    var_1.set_relic_damage_from_above++;
                    var_1 usingtacmap();
                    var_10 = isdefined( var_0.streakdata.streaks[1] );
                    var_11 = coop_escort_try_start_driving_func( var_0 );
                    var_0 scripts\mp\gametypes\br_pickups.gsc::little_bird_mg_enterendinternal( var_11, var_10, 1 );
                    var_0 thread scripts\mp\hud_message::showsplash( "kingslayer_" + var_11 );
                    var_0 thread scripts\mp\rank::scoreeventpopup( "hvt_kill" );
                    var_0 thread scripts\mp\rank::scoreeventpopup( "teamscore_notify_" + var_3 );
                    break;
                }
            }
        }

        if ( isdefined( level.teamdata[var_2] ) )
        {
            level.teamdata[var_2]["teamTotalScore"] = level.teamdata[var_2]["teamTotalScore"] + var_3;
            var_0.vehicles_spawned = var_0.vehicles_spawned + var_3;

            if ( level.set_relic_thirdperson > 0 )
            {
                if ( level.teamdata[var_2]["teamTotalScore"] >= level.set_relic_thirdperson )
                    level notify( "brKing_startPlacements" );
            }
        }
        else
            scripts\mp\utility\script::handle_train_veh_collision( "team " + var_2 + " is not in level.teamData" );
    }
}

usingtacmap( var_0 )
{
    var_1 = self.set_relic_dfa;

    if ( var_1 > 255 )
        var_1 = 255;

    var_2 = self.set_relic_damage_from_above;

    if ( var_2 > 255 )
        var_2 = 255;

    var_1 = var_1 + ( var_2 << 8 );
    scripts\mp\utility\stats::setextrascore0( var_1 );
}

usingfallback()
{
    var_0 = self.set_relic_dfa;

    if ( var_0 > 255 )
        var_0 = 255;

    var_1 = self.set_relic_damage_from_above;

    if ( var_1 > 255 )
        var_1 = 255;

    var_0 = var_0 + ( var_1 << 8 );
    return var_0;
}

iscontender()
{
    level waittill( "give_match_bonus" );
    waitframe();
    var_0 = getdvarfloat( "scr_bmo_eom_held_cash_scalar", 1.0 );
    var_1 = getdvarfloat( "scr_bmo_eom_banked_cash_scalar", 1.0 );
    var_2 = getdvarint( "scr_bmo_eom_initial_winner_bonus", 3000 );
    var_3 = getdvarint( "scr_bmo_eom_over_wincost_bonus", 2250 );
    var_4 = getdvarint( "scr_bmo_eom_top10_bonus", 1500 );

    foreach ( var_6 in level.teamnamelist )
    {
        var_7 = 0;
        var_8 = 0;
        var_9 = game["teamPlacements"][var_6];
        var_10 = 0;

        if ( var_8 )
            var_10 = var_3;
        else if ( var_9 <= 10 )
            var_10 = var_4;
        else
            var_10 = 750;

        var_11 = scripts\mp\utility\teams::getteamdata( var_6, "players" );

        foreach ( var_13 in var_11 )
        {
            var_13 scripts\mp\gametypes\br.gsc::_id_12A37();
            var_13 scripts\cp_mp\utility\game_utility::_id_1238F( var_9 );

            if ( !var_13 scripts\mp\utility\game::rankingenabled() || !var_13 hasplayerdata() )
                continue;

            var_13 scripts\mp\utility\stats::incpersstat( "cash", int( var_7 / 10000 ) );
            var_14 = var_13.pers["combatXP"];

            if ( !isdefined( var_14 ) )
                var_14 = 0;

            var_13 setplayerdata( "mp", "aarValue", 0, var_14 );
            var_15 = var_13.pers["missionXP"];

            if ( !isdefined( var_15 ) )
                var_15 = 0;

            var_13 setplayerdata( "mp", "aarValue", 1, var_15 );
            var_16 = var_13.pers["lootingXP"];

            if ( !isdefined( var_16 ) )
                var_16 = 0;

            var_13 setplayerdata( "mp", "aarValue", 2, var_16 );
            var_17 = 0;

            if ( isdefined( var_13.plundercount ) )
                var_17 = int( var_13.plundercount * var_0 );

            var_18 = 0;

            if ( isdefined( var_13.plunderbanked ) )
                var_18 = int( var_13.plunderbanked * var_1 );

            var_19 = var_17 + var_18;

            if ( var_19 > 0 )
                var_13 scripts\mp\rank::giverankxp( "cash_conversion_bonus", var_19, undefined, 1, 1 );

            var_13 setplayerdata( "mp", "aarValue", 3, 0 );
            var_20 = 0;

            if ( isdefined( var_13.matchbonus ) )
                var_20 = int( var_13.matchbonus );

            var_13 setplayerdata( "mp", "aarValue", 4, var_20 );

            if ( var_10 > 0 )
                var_13 scripts\mp\rank::giverankxp( "placement_bonus", var_10, undefined, 1, 1 );

            var_13 setplayerdata( "mp", "aarValue", 5, var_10 );
            var_21 = var_13 getplayerdata( "mp", "aarValue", 6 );
            var_22 = var_21 + var_13.pers["summary"]["xp"];
            var_13 setplayerdata( "mp", "aarValue", 7, var_22 );
        }
    }
}

cp_landlord_sound_load( var_0, var_1, var_2 )
{
    var_3 = int( game["teamScores"][var_1] );
    var_4 = var_0 - var_3;

    if ( var_4 != 0 )
    {
        var_5 = scripts\engine\utility::ter_op( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter(), 1, undefined );
        level thread scripts\mp\gamescore::giveteamscoreforobjective( var_1, var_4, 0, undefined, var_5, var_2 );
    }

    return var_4;
}

coverupbrokenmodels( var_0 )
{
    scripts\mp\objidpoolmanager::update_objective_position( self.objectiveiconid, var_0 );
}

cp_is_point_in_front()
{
    level endon( "game_ended" );
    var_0 = 0;
    var_1 = [];
    var_2 = level.playertakeextractionplunder != 0;
    var_3 = 0;

    for (;;)
    {
        waittillframeend;
        var_4 = level.detonatefxair && level.detonatesound && level.detonatingplayer;
        var_5 = level.set_shouldrespawn;
        var_0 = var_0 + level.framedurationseconds;

        if ( istrue( level._id_1311A ) )
            var_6 = scripts\mp\flags::gameflag( "placement_updates_allowed" );
        else
            var_6 = var_0 > level._id_121F3;

        var_7 = level._id_1254C && var_6;
        var_8 = scripts\mp\gamescore::onlowpopstart();
        var_9 = level._id_12BE5;
        var_10 = undefined;
        var_11 = undefined;
        var_12 = undefined;
        var_13 = [];
        var_14 = [];
        var_15 = [];
        var_16 = "none";
        var_17 = "none";
        var_18 = -1;
        var_19 = 0;

        foreach ( var_21 in level.teamnamelist )
        {
            var_22 = level.teamdata[var_21]["teamTotalScore"];
            var_23 = cp_landlord_sound_load( var_22, var_21, level.completesmokinggunquest.lasttuttxt );
            var_24 = obj_room_fire_07( var_21 );
            var_25 = var_8[var_21];

            if ( var_22 > var_18 )
            {
                if ( var_18 > var_19 )
                {
                    var_19 = var_18;
                    var_17 = var_16;
                }

                var_18 = var_22;
                var_16 = var_21;
            }
            else if ( var_16 != "none" )
            {
                if ( var_22 > var_19 )
                {
                    var_19 = var_22;
                    var_17 = var_21;
                }
            }

            var_26 = var_22;
            var_27 = var_22;
            var_28 = 0;

            if ( var_27 >= var_5 * 0.9 )
                var_10 = var_21;
            else if ( var_27 >= var_5 * 0.75 )
                var_11 = var_21;
            else if ( var_27 >= var_5 * 0.5 )
                var_12 = var_21;

            if ( var_27 >= var_5 * level._id_11ADB )
                thread scripts\mp\music_and_dialog::_id_11AAB();
            else if ( var_27 >= var_5 * level._id_11ADD )
                thread scripts\mp\music_and_dialog::_id_11AC1();
            else if ( var_27 >= var_5 * level._id_11ADC )
                thread scripts\mp\music_and_dialog::_id_11AA5();
            else if ( var_27 >= var_5 * level._id_11ADA )
                thread scripts\mp\music_and_dialog::_id_11AC3();

            var_29 = scripts\mp\utility\teams::getfriendlyplayers( var_21, 0 );
            _id_130A3( var_8, var_29 );

            foreach ( var_31 in var_29 )
            {
                var_14[var_31.guid] = var_31.vehicles_spawned;
                var_15[var_31.guid] = var_31;
            }

            if ( var_7 )
            {
                if ( var_25 == 1 )
                    var_13[var_13.size] = var_21;
                else if ( var_25 <= 5 )
                {
                    if ( var_24 > 5 )
                        showsplashtoteam( var_21, "bm_top_5" );
                }
                else if ( var_25 <= 10 )
                {
                    if ( var_24 > 10 )
                        showsplashtoteam( var_21, "bm_top_10" );
                }
            }

            if ( var_27 >= var_5 )
                level thread patch_collisions_crates( var_21 );
        }

        foreach ( var_31 in level.players )
        {
            var_35 = level.teamdata[var_31.team]["teamTotalScore"];
            var_31 setclientomnvar( "ui_br_team_cash_banked", int( var_35 ) );
            var_31 setclientomnvar( "ui_br_team_cash_pockets", int( scripts\engine\utility::ter_op( var_35 >= var_18, var_19, var_18 ) ) );
        }

        var_37 = [];
        var_38 = [];

        if ( level.spawn_real_number == 1 )
            var_37 = setteamplacement( game["teamPlacements"], "up" );
        else if ( level.spawn_real_number == 2 )
        {
            var_37[0] = var_16;
            var_38 = setteamplacement( var_14, "down" );
        }
        else
            var_38 = setteamplacement( var_14, "down" );

        level.completesmokinggunquest.lasttuttxt = var_16;

        if ( var_16 == "none" )
        {
            var_1 = [];
            waitframe();
            continue;
        }

        if ( !var_2 && var_18 >= var_5 * level.playertakeextractionplunder * 0.1 )
        {
            setomnvar( "ui_br_leader_hash_percentage_hit", 1 );
            var_2 = 1;
        }

        if ( !var_7 || var_18 == 0 )
        {
            waitframe();
            continue;
        }

        if ( level.spawn_real_number > 0 )
        {
            if ( level.hoopty_truck_initomnvars || istrue( level._id_11AEC ) )
            {
                _id_13093( var_14, var_38, var_15, var_37 );
                level._id_11AEC = 0;
            }
        }
        else if ( level.hoopty_truck_initomnvars || istrue( level._id_11AEC ) )
        {
            _id_13093( var_14, var_38, var_15 );
            level._id_11AEC = 0;
        }

        foreach ( var_21 in var_13 )
        {
            if ( !scripts\engine\utility::array_contains( var_1, var_21 ) )
            {
                if ( istrue( level._id_12CDF[var_21] ) )
                {
                    if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                        showsplashtoteam( var_21, "bm_top_team_regained" );

                    continue;
                }

                if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                    showsplashtoteam( var_21, "bm_top_team" );

                level._id_12CDF[var_21] = 1;
            }
        }

        if ( var_13.size > 0 )
        {
            foreach ( var_21 in var_1 )
            {
                if ( !scripts\engine\utility::array_contains( var_13, var_21 ) )
                    showsplashtoteam( var_21, "bm_top_team_lost" );
            }
        }

        var_1 = var_13;
        level._id_12CDE = var_16;
        level._id_11B89 = var_8;

        if ( !var_4 )
        {
            if ( !level.detonatingplayer && isdefined( var_10 ) )
            {
                level.detonatingplayer = 1;

                if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                {
                    if ( !level.helipad_getheli )
                    {
                        _id_12558( var_10, "bm_first_to_90_them" );
                        showsplashtoteam( var_10, "bm_first_to_90_us" );
                        level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "final_circle", 0, undefined, undefined, 2 );
                    }
                }
            }
            else if ( !level.detonatesound && isdefined( var_11 ) )
            {
                level.detonatesound = 1;

                if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                {
                    if ( !level.helipad_getheli )
                    {
                        _id_12558( var_11, "bm_first_to_75_them" );
                        showsplashtoteam( var_11, "bm_first_to_75_us" );
                    }
                }
            }
            else if ( !level.detonatefxair && isdefined( var_12 ) )
            {
                level.detonatefxair = 1;

                if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                {
                    if ( !level.helipad_getheli )
                    {
                        _id_12558( var_12, "bm_first_to_50_them" );
                        showsplashtoteam( var_12, "bm_first_to_50_us" );
                    }
                }
            }
        }

        waitframe();
    }
}

_id_130A3( var_0, var_1 )
{
    foreach ( var_3 in var_1 )
    {
        if ( !isdefined( var_3 ) )
            continue;

        var_4 = var_0[var_3.team];
        var_3 scripts\mp\trials\trial_utility::_id_12360( "ui_br_team_placement", var_4 );
        var_3 scripts\mp\trials\trial_utility::_id_12360( "ui_br_player_position", var_4 );
    }
}

obj_room_fire_07( var_0 )
{
    if ( isdefined( level._id_11B89 ) )
        return level._id_11B89[var_0];

    return -1;
}

_id_12557( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 scripts\mp\hud_message::showsplash( var_0 );
}

showsplashtoteam( var_0, var_1 )
{
    foreach ( var_3 in level.teamdata[var_0]["players"] )
        var_3 scripts\mp\hud_message::showsplash( var_1 );
}

_id_12558( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && var_3.team != var_0 )
            var_3 scripts\mp\hud_message::showsplash( var_1 );
    }
}

play_fake_vo_for_gunship( var_0, var_1 )
{
    var_2 = int( min( var_1, 131072 ) );
    self setclientomnvar( var_0, var_2 );
}

play_found_leads_counting_building_three( var_0, var_1 )
{
    var_2 = int( min( var_1, 131072 ) );
    setomnvar( var_0, var_2 );
}

_id_13093( var_0, var_1, var_2, var_3 )
{
    level.spawn_script_model = level.spawn_rpgs_for_players;
    level.spawn_rpgs_for_players = [];

    if ( level.spawn_real_number == 1 )
    {
        for ( var_4 = 0; var_4 < level.spawn_pickup_weapon; var_4++ )
        {
            var_5 = nuke_playmushroombnk( var_4, var_0, var_3 );

            if ( isdefined( var_5 ) )
                level.spawn_rpgs_for_players[level.spawn_rpgs_for_players.size] = var_2[var_5];
        }
    }
    else if ( level.spawn_real_number == 2 )
    {
        var_5 = nuke_playmushroombnk( 0, var_0, var_3 );

        if ( isdefined( var_5 ) )
            level.spawn_rpgs_for_players[0] = var_2[var_5];

        foreach ( var_7 in var_1 )
        {
            var_8 = var_2[var_7];
            var_9 = var_0[var_7];

            if ( var_9 == 0 )
                break;

            if ( var_9 == level._id_12013 )
                continue;

            if ( scripts\engine\utility::array_contains( level.spawn_rpgs_for_players, var_8 ) )
                continue;

            level.spawn_rpgs_for_players[level.spawn_rpgs_for_players.size] = var_8;

            if ( level.spawn_rpgs_for_players.size == level.spawn_pickup_weapon )
                break;
        }
    }
    else
    {
        foreach ( var_8 in var_1 )
        {
            var_9 = var_0[var_8];

            if ( var_9 == 0 )
                break;

            level.spawn_rpgs_for_players[level.spawn_rpgs_for_players.size] = var_2[var_8];

            if ( level.spawn_rpgs_for_players.size == level.spawn_pickup_weapon )
                break;
        }
    }

    foreach ( var_8 in level.spawn_script_model )
    {
        if ( isdefined( var_8 ) && !scripts\engine\utility::array_contains( level.spawn_rpgs_for_players, var_8 ) )
            _id_11EDB( var_8 );
    }

    level notify( "update_loot_leaders" );

    if ( level.spawn_queue_think.size < level.spawn_pickup_weapon )
    {
        for ( var_4 = 0; var_4 < level.spawn_pickup_weapon; var_4++ )
        {
            var_15 = spawnstruct();
            var_15.hidden = 0;
            var_15 scripts\mp\gametypes\br_quest_util.gsc::get_model_for_color_wire_cut( "ui_mp_br_mapmenu_icon_assassin_objective_enemy", "active" );
            level.spawn_queue_think[var_4] = var_15;
        }
    }

    for ( var_4 = 0; var_4 < level.spawn_pickup_weapon; var_4++ )
    {
        var_15 = level.spawn_queue_think[var_4];

        if ( isdefined( level.spawn_rpgs_for_players[var_4] ) )
        {
            var_15.targetplayer = level.spawn_rpgs_for_players[var_4];
            var_15.targetplayer.spawn_pavelow_boss = var_15;
            var_16 = var_15.targetplayer.origin;
            var_17 = scripts\engine\utility::array_contains( level.spawn_rpgs_for_players, var_15.targetplayer ) && !scripts\engine\utility::array_contains( level.spawn_script_model, var_15.targetplayer );

            if ( var_15.hidden == 0 )
            {
                var_18 = scripts\mp\utility\teams::getenemyplayers( var_15.targetplayer.team, 0 );

                foreach ( var_8 in var_18 )
                    var_15 countdowntimer( var_8 );

                var_21 = scripts\mp\utility\teams::getfriendlyplayers( var_15.targetplayer.team, 0 );

                foreach ( var_8 in var_21 )
                    var_15 countdownendcallback( var_8 );
            }

            if ( var_17 )
                any_alive_player_in_kill_zone_or_under_bridge_zone( var_15 );

            continue;
        }

        var_15.targetplayer = undefined;
        objective_removeallfrommask( var_15.objectiveiconid );
    }
}

cp_is_point_on_right()
{
    level endon( "game_ended" );
    level waittill( "update_loot_leaders" );

    for (;;)
    {
        for ( var_0 = 0; var_0 < level.spawn_pickup_weapon; var_0++ )
        {
            var_1 = level.spawn_queue_think[var_0];

            if ( isdefined( var_1.targetplayer ) )
            {
                if ( !scripts\mp\utility\player::isreallyalive( var_1.targetplayer ) && var_1.hidden == 0 )
                {
                    var_1.hidden = 1;
                    objective_removeallfrommask( var_1.objectiveiconid );
                    level notify( "Objective_Delete", var_1.objectiveiconid );
                }
                else if ( scripts\mp\utility\player::isreallyalive( var_1.targetplayer ) && var_1.hidden == 1 )
                {
                    if ( !level.set_relic_steelballs_perks || isdefined( var_1.targetplayer.set_relic_steelballs ) && var_1.targetplayer.set_relic_steelballs == 0 )
                    {
                        var_1.hidden = 0;
                        var_2 = scripts\mp\utility\teams::getenemyplayers( var_1.targetplayer.team, 0 );

                        foreach ( var_4 in var_2 )
                            var_1 countdowntimer( var_4 );
                    }
                }

                var_1 coverupbrokenmodels( var_1.targetplayer.origin );
                continue;
            }

            if ( var_1.hidden == 0 )
            {
                var_1.hidden = 1;
                objective_removeallfrommask( var_1.objectiveiconid );
            }
        }

        if ( level.spawn_player_vehicle > 0 )
        {
            wait( level.spawn_player_vehicle );
            continue;
        }

        waitframe();
    }
}

countdowntimer( var_0 )
{
    scripts\mp\gametypes\br_quest_util.gsc::_id_12552( var_0 );
}

countdownendcallback( var_0 )
{
    scripts\mp\gametypes\br_quest_util.gsc::playertouching( var_0 );
}

nuke_playmushroombnk( var_0, var_1, var_2 )
{
    var_3 = var_2[var_0];
    var_4 = 0;
    var_5 = 0;

    if ( level.teamdata[var_3]["players"].size == 0 )
        return undefined;

    var_6 = level.teamdata[var_3]["players"][0].guid;

    foreach ( var_8 in level.teamdata[var_3]["players"] )
    {
        var_4 = var_1[var_8.guid];

        if ( var_4 > var_5 )
        {
            var_5 = var_4;
            var_6 = var_8.guid;
        }
    }

    return var_6;
}

any_alive_player_in_kill_zone_or_under_bridge_zone( var_0 )
{
    var_1 = var_0.targetplayer;

    if ( scripts\mp\utility\player::isreallyalive( var_1 ) )
    {
        var_1 breakarmor();

        if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
            var_1 scripts\mp\hud_message::showsplash( "bm_player_marked" );
    }
}

_id_13094()
{
    level notify( "restartLootLeaders" );
    level endon( "restartLootLeaders" );
    level endon( "game_ended" );
    var_0 = getdvarfloat( "scr_dmz_loot_leader_update_interval", 15.0 );
    var_1 = getdvarfloat( "scr_dmz_loot_leader_update_interval_blink", 5.0 );
    var_2 = getdvarint( "scr_bmo_circle_pulse_start", 800 );
    var_3 = getdvarint( "scr_bmo_circle_pulse_end", 200 );
    var_4 = var_0 - var_1;
    scripts\mp\flags::gameflagwait( "placement_updates_allowed" );

    for (;;)
    {
        level._id_11AEC = 1;
        scripts\engine\utility::waittill_notify_or_timeout( "bmo_overtime_start", var_4 );
    }
}

wait_for_one_player_near_point()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( isdefined( level._id_121F3 ) )
        wait( level._id_121F3 );

    if ( level.set_relic_thirdperson > 0 )
        level waittill( "brKing_startPlacements" );

    scripts\mp\flags::gameflagset( "placement_updates_allowed" );
}

_id_11EDB( var_0 )
{
    var_0 has_relic_amped_victim_survived_time();

    if ( isdefined( var_0.spawn_pavelow_boss ) )
    {
        foreach ( var_2 in level.players )
            var_0.spawn_pavelow_boss countdownendcallback( var_2 );

        var_4 = var_0.spawn_pavelow_boss.extract_ontimerexpired;
        var_0.spawn_pavelow_boss.targetplayer = undefined;
        var_0.spawn_pavelow_boss = undefined;
    }

    level.spawn_rpgs_for_players = scripts\engine\utility::array_remove( level.spawn_rpgs_for_players, var_0 );
}

patch_collisions_crates( var_0 )
{
    waitframe();
    _id_130A3( scripts\mp\gamescore::onlowpopstart(), level.players );

    if ( istrue( level._id_12E94 ) )
        return;

    level._id_12E94 = 1;
    level thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"]["objective_completed"] );
    var_1 = [];

    if ( isdefined( var_0 ) && var_0 != "tie" )
        var_1 = scripts\mp\utility\teams::getteamdata( var_0, "players" );

    thread scripts\mp\music_and_dialog::_id_11AA3( var_1 );
}

ononeleftevent( var_0 )
{

}

_id_119D4()
{
    if ( !istrue( self.controlsfrozen ) )
        scripts\mp\utility\player::_freezecontrols( 1, undefined, "spawnEndOfGame" );

    var_0 = spawnstruct();
    var_1 = self getspectatingplayer();

    if ( !isdefined( var_1 ) )
        var_1 = self;

    var_0.origin = var_1.origin;
    var_0.angles = var_1.angles;

    if ( !var_1 isonground() )
    {
        var_2 = scripts\engine\trace::create_default_contents( 1 );
        var_0.origin = scripts\engine\utility::drop_to_ground( var_0.origin, 0, -20000, undefined, var_2 );
    }

    var_0.origin = var_0.origin + ( 0, 0, 100 );

    if ( !isdefined( level.introarmor ) )
    {
        level.introarmor = 1;
        level thread _id_12E8E();
    }

    return 1;
}

register_sequence_3_objectives()
{
    var_0 = [];
    level.intelused = [];
    level.intelchallengesdata = [];

    if ( level.mapname == "mp_br_mechanics" )
    {
        level.intelused[0] = ( 8682, -1036, 427 );
        level.intelchallengesdata[0] = ( 14, 163, 0 );
        level.intelused[1] = ( -1139, -3425, 1116 );
        level.intelchallengesdata[1] = ( 33, 75, 0 );
        level.intelused[2] = ( -5567, -4786, 1116 );
        level.intelchallengesdata[2] = ( 37, 192, 0 );
    }
    else
    {
        level.intelused[0] = ( -36548, -31983, 2400 );
        level.intelchallengesdata[0] = ( 12, 72, 0 );
        level.intelused[1] = ( -17592, -36440, 1379 );
        level.intelchallengesdata[1] = ( 17, 90, 0 );
        level.intelused[2] = ( -3520, -34298, 1217 );
        level.intelchallengesdata[2] = ( 11, 110, 0 );
        level.intelused[3] = ( -9577, -25957, 360 );
        level.intelchallengesdata[3] = ( 357, 82, 0 );
        level.intelused[4] = ( 23022, -26926, 1359 );
        level.intelchallengesdata[4] = ( 16, 101, 0 );
        level.intelused[5] = ( 31261, -29753, 1359 );
        level.intelchallengesdata[5] = ( 27, 52, 0 );
        level.intelused[6] = ( 44843, -41261, 3220 );
        level.intelchallengesdata[6] = ( 16, 52, 0 );
        level.intelused[7] = ( 44229, -15403, 1331 );
        level.intelchallengesdata[7] = ( 13, 72, 0 );
        level.intelused[8] = ( 44491, 3484, 1638 );
        level.intelchallengesdata[8] = ( 23, 11, 0 );
        level.intelused[9] = ( 16047, -3206, 2613 );
        level.intelchallengesdata[9] = ( 27, 309, 0 );
        level.intelused[10] = ( 5668, -5905, 1614 );
        level.intelchallengesdata[10] = ( 23, 304, 0 );
        level.intelused[11] = ( -13412, -20443, 1033 );
        level.intelchallengesdata[11] = ( 11, 109, 0 );
        level.intelused[12] = ( -30369, -7811, 1680 );
        level.intelchallengesdata[12] = ( 31, 339, 0 );
        level.intelused[13] = ( -26278, 4081, 142 );
        level.intelchallengesdata[13] = ( 6, 110, 0 );
        level.intelused[14] = ( -16429, 6021, 847 );
        level.intelchallengesdata[14] = ( 21, 57, 0 );
        level.intelused[15] = ( -7525, 11672, 1082 );
        level.intelchallengesdata[15] = ( 14, 46, 0 );
        level.intelused[16] = ( 8356, 15296, 2021 );
        level.intelchallengesdata[16] = ( 12, 38, 0 );
        level.intelused[17] = ( 26010, 29975, 2716 );
        level.intelchallengesdata[17] = ( 13, 68, 0 );
        level.intelused[18] = ( 12043, 30910, 3081 );
        level.intelchallengesdata[18] = ( 21, 88, 0 );
        level.intelused[19] = ( 7127, 52592, 2100 );
        level.intelchallengesdata[19] = ( 28, 241, 0 );
        level.intelused[20] = ( -6693, 56481, 4026 );
        level.intelchallengesdata[20] = ( 16, 246, 0 );
        level.intelused[21] = ( -21394, 37175, 757 );
        level.intelchallengesdata[21] = ( 2, 124, 0 );
        level.intelused[22] = ( -26151, 25577, 271 );
        level.intelchallengesdata[22] = ( 357, 10, 0 );
    }
}

_id_12E8E()
{
    var_0 = 0;

    foreach ( var_2 in level.players )
    {
        var_2 thread _id_11A74( var_2, moveplayertotoppos( var_2 ) );
        var_0++;

        if ( var_0 == 5 )
        {
            waitframe();
            var_0 = 0;
        }
    }
}

moveplayertotoppos( var_0 )
{
    var_1 = undefined;
    var_2 = undefined;

    foreach ( var_6, var_4 in level.intelused )
    {
        var_5 = distance2dsquared( var_0.origin, var_4 );

        if ( var_5 <= 9000000 )
            return var_6;

        if ( !isdefined( var_2 ) || var_2 > var_5 )
        {
            var_2 = var_5;
            var_1 = var_6;
        }
    }

    return var_1;
}

_id_11A74( var_0, var_1 )
{
    var_2 = level.intelused[var_1];
    var_3 = level.intelchallengesdata[var_1];
    var_4 = var_2 + anglestoright( var_3 ) * 1000;
    var_5 = var_3;
    var_6 = spawn( "script_model", var_2 );
    var_6 setmodel( "tag_origin" );
    var_6.angles = var_3;
    var_0 cameralinkto( var_6, "tag_origin" );
    var_6 moveto( var_4, 60 );
    var_6 rotateto( var_5, 60 );
}

countlefthand()
{
    level endon( "game_ended" );
    level thread cp_raid_complex_behavior();

    for (;;)
    {
        level waittill( "br_circle_set" );
        coverupmodels();
    }
}

coverupmodels( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = level.br_circle.circleindex + 1;

    if ( level.br_level.circleradius.size <= var_0 || !istrue( level.set_relic_rocket_kill_ammo ) )
        return;

    var_1 = level.br_level.circleradius[var_0];
    var_2 = level.set_relic_oneclip;
    var_3 = level.spawn_rpgs_for_players.size > 0;

    if ( var_3 )
    {
        var_4 = level.spawn_rpgs_for_players[0].origin;
        var_5 = scripts\engine\utility::ter_op( level.set_relic_punchbullets, var_1 - var_4, var_4 - var_1 );
    }
    else
    {
        var_6 = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_1, var_2, 0.8, 1.0, 1, 0, 1 );
        var_5 = var_6 - var_1;
    }

    var_5 = vectornormalize( var_5 ) * var_2;
    var_7 = var_1 + var_5;
    var_8 = !scripts\mp\gametypes\br_circle.gsc::score_spawner_relative_to_objective( var_7, 1 );

    if ( var_8 )
    {
        var_5 = vectornormalize( level.br_level.br_mapcenter - var_1 ) * var_2;
        var_7 = var_1 + var_5;
    }

    level.br_level.circleradius[var_0 + 1] = var_7;
}

correctcodeentered( var_0 )
{
    var_1 = level.br_level.br_mapbounds;
    var_2 = level.set_relic_shieldsonly;
    var_3 = var_0[0] < var_1[0][0] * var_2 && var_0[0] > var_1[1][0] * var_2 && var_0[1] < var_1[0][1] * var_2 && var_0[1] > var_1[1][1] * var_2;
    return var_3;
}

cp_raid_complex_behavior()
{
    level endon( "game_ended" );
    level.extra_riders_intro_scene_func = gettime();

    for (;;)
    {
        level waittill( "br_circle_started" );
        level.extra_riders_intro_scene_func = gettime();
    }
}

coop_escort_get_vehicle_driver_hint_string_func()
{
    return ( gettime() - level.extra_riders_intro_scene_func ) / 1000 / level.set_relic_noks;
}

cooldownsec()
{
    var_0 = coop_escort_get_vehicle_driver_hint_string_func();

    if ( level.br_circle.circleindex < 0 )
        return level.br_level.circleradius[0];

    if ( var_0 > 1 )
        return level.br_level.circleradius[level.br_circle.circleindex];

    var_1 = level.br_level.circleradius[level.br_circle.circleindex + 1];
    var_2 = level.br_level.circleradius[level.br_circle.circleindex];
    return vectorlerp( var_2, var_1, coop_escort_get_vehicle_driver_hint_string_func() );
}

cosfov( var_0 )
{
    var_1 = cooldownsec();
    var_2 = distance2d( var_0, var_1 );
    return var_2 < level.set_relic_squadlink;
}

coop_handle_invuln_ac130( var_0, var_1 )
{
    var_2 = cooldownsec();
    return scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_2, level.set_relic_squadlink, var_0, var_1 );
}

breakarmor()
{
    if ( !isdefined( self.carryflag ) )
    {
        self attach( "prop_king_game_flag", "tag_stowed_back3", 1 );
        self.carryflag = "prop_ctf_game_flag_west";
        self setclientomnvar( "ui_ctf_flag_carrier", 1 );
    }
}

has_relic_amped_victim_survived_time()
{
    if ( isdefined( self.carryflag ) )
    {
        self detach( "prop_king_game_flag", "tag_stowed_back3" );
        self.carryflag = undefined;
        self setclientomnvar( "ui_ctf_flag_carrier", 0 );
    }
}
