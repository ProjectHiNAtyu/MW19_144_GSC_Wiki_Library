// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level thread connect_init();
    level thread connected_search_node();
    level thread confirm_good_pickup_location();
    level thread connect_circlar_path();
}

connect_init()
{
    if ( getdvarint( "scr_brjugg_debug", 0 ) == 1 )
    {
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "circle" );
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "gulag" );
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "dropbag" );
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "oneLife" );
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "allowLateJoiners" );
    }

    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "plunderSites" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "tabletReplace" );
}

connected_search_node()
{
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerWelcomeSplashes", ::contributingplayers );
    waittillframeend;
    scripts\mp\flags::gameflaginit( "start_jugg_delivery", 0 );
    level.ontimelimit = ::contract_death_cash_flag;
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onJuggCrateActivate", ::connectedplayercount );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onJuggCrateUse", ::console_being_hacked );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onJuggCrateDestroy", ::consecutive_kills );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onJuggDropOnDeath", ::concusspushstart );
    concussionimmune();
    level._id_13158 = [];
    level._id_13158[0] = "assassination";
    level._id_13158[1] = "domination";
    level._id_13158[2] = "scavenger";
    level._id_129CB = 0;
    level thread connected_vandalize_node();
}

confirm_good_pickup_location()
{
    wait 1;
    game["dialog"]["match_start"] = "gametype_juggernautroyale";
}

concussionimmune()
{
    scripts\cp_mp\utility\game_utility::_id_11ED3( "delete_on_load", "targetname" );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_prison_cell_metal_mp", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_wooden_panel_mp_01", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "me_electrical_box_street_01", 1 );
}

connect_circlar_path()
{

}

contributingplayers( var_0 )
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_juggernaut_prematch_welcome" );

    if ( !istrue( level.br_infils_disabled ) )
    {
        self waittill( "br_jump" );

        while ( !self isonground() )
            waitframe();
    }
    else
        level waittill( "prematch_done" );

    scripts\mp\gametypes\br_analytics.gsc::close_trap_room_door( self );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_juggernaut_welcome" );
    scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "primary_objective", self, 0 );
}

contract_death_cash_flag()
{
    if ( isdefined( level.numendgame ) )
        level thread scripts\mp\gametypes\br.gsc::startendgame( 1 );

    level.numendgame = undefined;
}

connected_vandalize_node()
{
    level endon( "game_ended" );

    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        return;

    level waittill( "br_prematchEnded" );
    level thread controls_unlink_safe();
    level thread controlslinked();
    var_0 = 1;

    for (;;)
    {
        var_1 = getdvarint( "scr_br_jugg_active", 1 );

        if ( !var_1 )
        {
            waitframe();
            continue;
        }

        var_2 = scripts\mp\gametypes\br_jugg_common.gsc::numdepositers();

        if ( level.trial_time_remaining > 0 )
            var_2 = var_2 - level.trial_time_remaining;

        level.select_back_door_spawners = scripts\engine\utility::array_randomize( level.select_back_door_spawners );
        var_3 = scripts\mp\gametypes\br_jugg_common.gsc::_id_12537( var_2, var_0 );

        while ( !istrue( level._id_129CB ) )
        {
            waitframe();
            continue;
        }

        var_0 = 0;
        level thread scripts\mp\gametypes\br_jugg_common.gsc::_id_129B1( var_3, "gametype_juggernaut" );
        level waittill( "continue_jugg_drops" );

        if ( isdefined( level.gulag ) && istrue( level.gulag.shutdown ) )
            break;

        var_4 = getdvarint( "scr_br_jugg_delivery_interval", 20 );
        wait( var_4 );
    }
}

controls_unlink_safe()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "start_jugg_delivery" );
    level._id_129CB = 1;
}

controls_linkto_safe( var_0 )
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "br_player_eliminated" );
        var_1 = scripts\mp\gametypes\br.gsc::movingplatform_playerunlink();

        if ( var_1.size <= var_0 )
        {
            scripts\mp\flags::gameflagset( "start_jugg_delivery" );
            break;
        }
    }
}

controlslinked()
{
    level endon( "game_ended" );
    var_0 = getdvarint( "scr_br_jugg_time_start", 10 );
    wait( var_0 );
    scripts\mp\flags::gameflagset( "start_jugg_delivery" );
}

connectedplayercount( var_0 )
{

}

console_being_hacked( var_0 )
{

}

consecutive_kills( var_0 )
{
    level notify( "continue_jugg_drops" );
}

concusspushstart( var_0 )
{
    level notify( "continue_jugg_drops" );
    scripts\mp\gametypes\br_plunder.gsc::dropplunderbyrarity( 100, var_0 );
    var_1 = getdvarint( "scr_br_jugg_drop_minigun", 1 );

    if ( var_1 )
        scripts\mp\gametypes\br_pickups.gsc::init_range_targets( "brloot_weapon_lm_dblmg_lege", var_0 );
}
