// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::registerquestcategory( "x2_amb1", 0 );

    if ( !var_0 )
        return;

    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).subscribetoquestlocale = getdvarint( "scr_br_x2_amb1_missionTimeBase", 240 );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).bomb_vest_success_fail_think = getdvarint( "scr_br_x2_amb1_ambushCircleSize", 3000 );
    scripts\mp\gametypes\br_quest_util.gsc::registerremovequestinstance( "x2_amb1", ::_id_13653 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF6( "x2_amb1", ::_id_13652 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF8( "x2_amb1", ::_id_13654 );
    scripts\mp\gametypes\br_quest_util.gsc::registerquestthink( "x2_amb1", ::_id_13655, 0.05 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11C73( "x2_amb1", 0 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF9( "x2_amb1", ::_id_13651 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11E00( "x2_amb_signal" );
    get_evade_start_structs_in_front();
}

get_evade_start_structs_in_front()
{
    var_0 = [];

    if ( level.mapname == "mp_br_mechanics" )
        var_0[0] = ( -483, -2260, 30 );
    else
    {
        var_0[0] = ( 4695, 306, -215 );
        var_0[1] = ( -31298, 3614, -284 );
    }

    foreach ( var_4, var_2 in var_0 )
    {
        var_0[var_4] = getdvarvector( "scr_br_x2_amb" + var_4 + "_destination", var_0[var_4] );
        var_3 = spawnstruct();
        var_3.origin = scripts\mp\gametypes\br_public.gsc::init_rpg_spawns( var_0[var_4], 0, -200 ) + ( 0, 0, 20 );
        var_3.gameobject = spawn( "script_model", var_3.origin );
        var_3.gameobject hide();
        scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).destination[var_4] = var_3;
    }
}

_id_13654( var_0 )
{
    if ( !enablesplitscreen( var_0 ) )
        return;

    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( numfound() );
    scripts\mp\gametypes\br_quest_util.gsc::_id_12552( var_0 );
}

_id_13651()
{
    level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_gen_fail", self.team, 1 );
}

_id_13653()
{
    gw_fobs_init();
    scripts\mp\gametypes\br_quest_util.gsc::releaseteamonquest( self.team );
}

_id_13652( var_0 )
{
    if ( var_0.team == self.team )
    {
        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( var_0.team ) )
        {
            self.result = "fail";
            scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
        }
    }
}

enablesplitscreen( var_0 )
{
    return scripts\mp\gametypes\br_gametype_x2.gsc::debug_pre_start_coop_escape( var_0 );
}

parachuteoverheadwarningheight( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\mp\gametypes\br_gametype_x2.gsc::debug_printcode( "x2_amb1", var_0, var_1, var_4 );
    var_5.get_station_controller_struct = level._id_1363E;
    var_6 = undefined;
    var_7 = undefined;

    switch ( level._id_1365A )
    {
        case "signal":
            var_6 = 13;
            var_7 = "br_x2_amb1_signal_quest_start_team_notify";
            break;
        case "bomb":
        default:
            var_6 = 12;
            var_7 = "br_x2_amb1_quest_start_team_notify";
            break;
    }

    var_8 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).destination[var_5.get_station_controller_struct].origin;
    var_5 scripts\mp\gametypes\br_quest_util.gsc::get_minigun_path( 4, var_6, 0, var_8 );
    var_5 scripts\mp\gametypes\br_quest_util.gsc::_id_12395( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).bomb_vest_success_fail_think );

    foreach ( var_2 in var_5.playerlist )
        var_2._id_11C65 = var_8;

    var_5 _id_130CC();
    scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshowtoteam( numfound(), self.team );
    var_5 scripts\mp\gametypes\br_quest_util.gsc::_id_11C74( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).subscribetoquestlocale, 4 );
    scripts\mp\gametypes\br_quest_util.gsc::addquestinstance( "x2_amb1", var_5 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_129E2( "x2_amb1", self, self.team );
    var_11 = spawnstruct();
    var_11._id_11AEF = scripts\mp\gametypes\br_quest_util.gsc::objective_hide_for_mlg_spectator( "x2_amb1", scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.team ) );
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, var_7, var_11 );
    return var_5;
}

_id_130CC()
{
    foreach ( var_1 in self.playerlist )
    {
        var_1 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( numfound() );
        scripts\mp\gametypes\br_quest_util.gsc::_id_12550( var_1 );
    }
}

bot_koth_think()
{
    return scripts\mp\gametypes\br_gametype_x2.gsc::currlocation( "x2_amb1", ::parachuteoverheadwarningheight );
}

_id_13655()
{
    if ( istrue( self.little_bird_mg_deathcallback ) || scripts\mp\flags::gameflag( "x2_train_destroyed" ) )
        kill_frequency_watcher();

    if ( scripts\mp\flags::gameflag( "x2_ambush" + ( self.get_station_controller_struct + 1 ) + "_completed" ) )
        _id_13650();
}

_id_13650()
{
    var_0 = spawnstruct();
    var_1 = scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.team );
    var_2 = scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "x2_amb1" );
    var_3 = scripts\mp\gametypes\br_quest_util.gsc::objective_origin( scripts\mp\gametypes\br_quest_util.gsc::objective_minimapupdate( "x2_amb1" ) );
    var_0.usingobject = scripts\mp\gametypes\br_quest_util.gsc::v_start_pos( var_2, var_1, var_3 );
    self._id_11FD6 = self.playerlist[0].origin;
    self._id_11FD3 = self.playerlist[0].angles;
    self.result = "success";
    self.trap_toggle_logic = 1;
    scripts\mp\gametypes\br_gametype_x2.gsc::debug_reach_wind_room( self );
    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
}

kill_frequency_watcher()
{
    scripts\mp\gametypes\br_gametype_x2.gsc::debug_reach_wind_room( self );
    self.result = "fail";
    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
}

playersplash( var_0 )
{
    scripts\mp\gametypes\br_quest_util.gsc::playertimestart( var_0 );
    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
}

gw_fobs_init()
{
    foreach ( var_1 in self.playerlist )
    {
        if ( isdefined( var_1 ) )
            playersplash( var_1 );
    }
}

numfound()
{
    var_0 = undefined;

    switch ( level._id_1365A )
    {
        case "signal":
            var_0 = "x2_amb_signal";
            break;
        case "bomb":
        default:
            var_0 = "x2_amb1";
            break;
    }

    return var_0;
}
