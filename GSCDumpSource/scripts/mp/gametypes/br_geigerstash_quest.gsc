// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\engine\scriptable::_id_1219E( "body", ::make_sure_loot_is_visible );
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::registerquestcategory( "geigerstash", 1 );

    if ( !var_0 )
        return;

    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "geigerstash" )._id_121E0 = getdvarint( "scr_br_geigerstash_searchCircleSize", 7000 );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "geigerstash" ).subscribetoquestlocale = getdvarint( "scr_br_geigerstash_missionTimeBase", 180 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11E05( "geigerstash", ::make_trophy_explosion );
    scripts\mp\gametypes\br_quest_util.gsc::registerremovequestinstance( "geigerstash", ::make_pilot_invincible );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF6( "geigerstash", ::make_outline_ents );
    scripts\mp\gametypes\br_quest_util.gsc::registerquestcircletick( "geigerstash", ::make_javelin_interact );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF5( "geigerstash", ::make_javelin_model );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF8( "geigerstash", ::make_place_c4_interact );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11C73( "geigerstash", 1 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF9( "geigerstash", ::make_laser_shutdown_interact );
}

make_trophy_explosion()
{
    var_0 = self.origin;
    var_1 = spawn_maint_wave_1( var_0 );
    var_2 = scripts\mp\gametypes\br_quest_util.gsc::lastgunkilltime( "geigerstash", var_1 );

    if ( !isdefined( var_2 ) )
        return 0;

    getlootspawnpointcount( var_2.index );
    var_0 = var_2.origin;
    self._id_11F03 = var_2;
    return 1;
}

make_javelin_interact( var_0, var_1 )
{
    if ( !isdefined( self.lastcircletick ) )
        self.lastcircletick = -1;

    var_2 = gettime();

    if ( self.lastcircletick == var_2 )
        return;

    self.lastcircletick = var_2;
    var_3 = distance2d( self.curorigin, var_0 );

    if ( var_3 > var_1 )
        kill_rate_too_slow();
}

make_javelin_model( var_0 )
{
    if ( !enablesplitscreen( var_0 ) )
        return;

    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
}

make_place_c4_interact( var_0 )
{
    if ( !enablesplitscreen( var_0 ) )
        return;

    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( "geigerstash" );
}

make_laser_shutdown_interact()
{
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, "br_geigerstash_quest_timer_expired" );
    var_0 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getFriendlyPlayers" ) ]]( self.team, 0 );
    make_path_node_on_circular_path( var_0 );
    level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_gen_fail", self.team, 1 );
}

make_path_node_on_circular_path( var_0 )
{
    var_1 = "secondary";
    var_2 = "equip_geiger_counter";
    var_0[0] scripts\mp\equipment::_id_12B68( var_0, var_1, var_2, 0 );

    foreach ( var_4 in var_0 )
    {
        if ( isdefined( var_4.init_relic_noks ) )
            scripts\mp\gametypes\br_pickups.gsc::spawn_overwatch_soldiers_01( var_4.init_relic_noks );
    }
}

make_pilot_invincible()
{
    hack_index();

    foreach ( var_1 in self.playerlist )
        var_1 setclientomnvar( "ui_br_geiger_target", -1 );

    scripts\mp\gametypes\br_quest_util.gsc::releaseteamonquest( self.team );
}

make_outline_ents( var_0 )
{
    if ( var_0.team == self.team )
    {
        var_1 = scripts\mp\utility\teams::getteamdata( self.team, "players" );
        scripts\mp\gametypes\br_quest_util.gsc::getquestinstancedata( "geigerstash", self.team ).playerlist = var_1;

        if ( isdefined( self ) && isdefined( self.deletex1finhud ) && var_1.size )
            self.deletex1finhud setotherent( var_1[0] );

        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( var_0.team ) )
        {
            self.result = "fail";
            scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
        }
    }
}

enablesplitscreen( var_0 )
{
    if ( var_0.team == self.team )
        return 1;
    else
        return 0;
}

takequestitem( var_0 )
{
    var_1 = scripts\mp\gametypes\br_quest_util.gsc::createquestinstance( "geigerstash", self.team, var_0.index, var_0 );
    var_1 scripts\mp\gametypes\br_quest_util.gsc::registerteamonquest( self.team, self );
    var_1 scripts\mp\gametypes\br_quest_util.gsc::_id_11DE0( self );
    var_1.team = self.team;
    var_1.startlocation = self.origin;
    var_1.get_trap_room_spawnpoints = self.origin;
    var_1._id_11F03 = var_0._id_11F03;
    var_1.playerlist = scripts\mp\utility\teams::getteamdata( self.team, "players" );
    var_2 = spawn_maint_wave_1( var_1.startlocation, var_1._id_11F03 );
    var_1 _id_127DD( var_1._id_11F03.origin, var_1._id_11F03.angles );
    var_1 _id_13081();
    scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshowtoteam( "geigerstash", self.team );
    var_1 scripts\mp\gametypes\br_quest_util.gsc::_id_11C74( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "geigerstash" ).subscribetoquestlocale, 4 );
    scripts\mp\gametypes\br_quest_util.gsc::addquestinstance( "geigerstash", var_1 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_129E2( "geigerstash", self, self.team );
    var_3 = spawnstruct();
    var_3.excludedplayers = [];
    var_3.excludedplayers[0] = self;
    var_3._id_11AEF = scripts\mp\gametypes\br_quest_util.gsc::objective_hide_for_mlg_spectator( "geigerstash", scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.team ) );
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, "br_geigerstash_quest_start_team_notify", var_3 );
    scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( self, "br_geigerstash_quest_start_tablet_finder", var_3 );
    scripts\mp\gametypes\br_quest_util.gsc::passes_final_capsule_check( self.team, "br_mission_pickup_tablet" );
}

spawn_maint_wave_1( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2._id_121E3 = "getUnusedLootCacheArray";
    var_2._id_121DF = var_0;
    var_2._id_121E6 = 10000;
    var_2._id_121E7 = 0;
    var_2._id_121E4 = 4000;
    var_2._id_121E5 = 2000;
    var_2._id_121E1 = 1;
    var_2._id_11F03 = var_1;
    var_2.mintime = 60;

    if ( getdvar( "scr_br_gametype", "" ) == "dmz" )
    {
        if ( var_2._id_121E6 < level._id_11C60 )
            var_2._id_121E6 = level._id_11C60;

        var_2._id_121E4 = level._id_11C60;
        var_2._id_121E5 = level._id_11C61;
    }

    return var_2;
}

_id_127DD( var_0, var_1 )
{
    var_2 = spawn( "script_model", var_0 );
    var_3 = self.playerlist[0];
    var_2.angles = var_1;
    var_2 setotherent( var_3 );
    var_2 setmodel( "military_loot_crate_01_br_geigerstash_01" );
    var_2 setscriptablepartstate( "body", "geigerstash_closed" );
    var_2._id_11C67 = self;
    self.deletex1finhud = var_2;
    var_2._id_11C67.curorigin = var_2.origin;

    foreach ( var_5 in level.players )
    {
        if ( var_5 != var_3 && ( var_3.team == "none" || var_5.team != var_3.team ) )
            var_2 disablescriptableplayeruse( var_5 );
    }

    var_7 = "secondary";
    var_8 = "equip_geiger_counter";
    self.playerlist[0] scripts\mp\equipment::packs( self.playerlist, var_7, var_8 );
    var_9 = self.deletex1finhud getentitynumber();

    foreach ( var_5 in self.playerlist )
        var_5 setclientomnvar( "ui_br_geiger_target", var_9 );
}

_id_13081()
{
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::sortvalidplayersinarray( self.playerlist );

    foreach ( var_2 in var_0["valid"] )
        var_2 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( "geigerstash" );

    foreach ( var_2 in var_0["invalid"] )
        var_2 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
}

playerstoptimerdelete( var_0 )
{
    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
}

hack_index()
{
    foreach ( var_1 in self.playerlist )
        playerstoptimerdelete( var_1 );
}

make_sure_loot_is_visible( var_0, var_1, var_2, var_3, var_4 )
{
    if ( istrue( var_3 scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "playerSkipLootPickup", var_0 ) ) )
        return;

    if ( var_2 == "geigerstash_closed" && isdefined( var_0.entity ) )
    {
        var_5 = var_0.entity._id_11C67;

        if ( istrue( var_5.removed ) )
        {
            var_3 scripts\mp\utility\lower_message::_id_12394( "contract_expired", undefined, 5 );
            return;
        }

        var_0 setscriptablepartstate( "body", "geigerstash_opening" );
        var_6 = getdvarint( "scr_br_geigerstash_cacheDeleteDelay", 30 );
        var_0.entity scripts\engine\utility::delaycallwatchself( var_6, ::delete );
        var_5._id_11FD6 = var_0.origin;
        var_5._id_11FD3 = var_0.angles;
        var_5 forest_barrels( var_0.entity );
        level notify( "lootcache_opened_kill_callout" + var_0.origin );
        var_7 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getFriendlyPlayers" ) ]]( var_3.team, 0 );

        foreach ( var_9 in var_7 )
            var_9 notify( "calloutmarkerping_warzoneKillQuestIcon" );

        make_path_node_on_circular_path( var_7 );
    }
}

forest_barrels( var_0 )
{
    var_1 = spawnstruct();
    var_2 = scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.team );
    var_3 = scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "geigerstash" );
    var_4 = scripts\mp\gametypes\br_quest_util.gsc::objective_origin( scripts\mp\gametypes\br_quest_util.gsc::objective_minimapupdate( "geigerstash" ) );
    var_1.usingobject = scripts\mp\gametypes\br_quest_util.gsc::v_start_pos( var_3, var_2, var_4 );
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, "br_geigerstash_quest_complete", var_1 );
    self._id_11FD6 = var_0.origin;
    self._id_11FD3 = var_0.angles;
    self.result = "success";

    foreach ( var_6 in self.playerlist )
        var_6 setclientomnvar( "ui_br_geiger_target", -1 );

    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();

    foreach ( var_6 in scripts\mp\utility\teams::getteamdata( self.team, "players" ) )
        var_6 scripts\cp\helicopter\chopper_boss::tv_station_intro_camera( "br_geiger_contract" );
}

kill_rate_too_slow()
{
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, "br_geigerstash_quest_circle_failure" );
    level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_obj_circle_fail", self.team, 1 );
    self.result = "fail";

    foreach ( var_1 in self.playerlist )
        var_1 setclientomnvar( "ui_br_geiger_target", -1 );

    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
}
