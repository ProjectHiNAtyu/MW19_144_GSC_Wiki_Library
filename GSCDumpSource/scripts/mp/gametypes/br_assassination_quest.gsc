// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::registerquestcategory( "assassination", 1 );

    if ( !var_0 )
        return;

    scripts\mp\gametypes\br_quest_util.gsc::_id_11E00( "assassination_all" );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11E00( "assassination_all_timed" );
    level.br_leaderbystreak = getdvarint( "scr_br_leader_by_streak", 0 ) != 0;
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" )._id_11C62 = getdvarint( "scr_br_AQ_questTimeBase", 180 );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" )._id_11C63 = getdvarint( "scr_br_AQ_questTimeBonus", 60 );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" )._id_11F37 = getdvarint( "scr_br_AQ_resetTimerOnKill", 1 );
    scripts\mp\gametypes\br_quest_util.gsc::registerquestthink( "assassination", ::aq_questthink_circleposition, 10 );
    scripts\mp\gametypes\br_quest_util.gsc::registerquestthink( "assassination", ::aq_questthink_objectivevisibility, 0.2 );
    scripts\mp\gametypes\br_quest_util.gsc::registerremovequestinstance( "assassination", ::aq_removequestinstance );
    scripts\mp\gametypes\br_quest_util.gsc::registeronplayerkilled( "assassination", ::aq_playerdied );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF6( "assassination", ::bot_match_rules_invalidate_loadout );
    var_1 = level.questinfo.defaultfilter;
    var_1 = scripts\engine\utility::array_add( var_1, ::filtercondition_hasbeentracked );
    var_1 = scripts\engine\utility::array_add( var_1, scripts\mp\gametypes\br_quest_util.gsc::filtercondition_isdowned );

    if ( getdvarint( "scr_br_alt_mode_zxp", 0 ) )
        var_1 = scripts\engine\utility::array_add( var_1, scripts\mp\gametypes\br_quest_util.gsc::laser_vfx_start_pos );

    if ( getdvarint( "scr_br_alt_mode_gxp", 0 ) )
        var_1 = scripts\engine\utility::array_add( var_1, scripts\mp\gametypes\br_quest_util.gsc::filtercondition_isghost );

    scripts\mp\gametypes\br_quest_util.gsc::registerplayerfilter( "assassination", var_1, 0 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11C73( "assassination", 1 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DFA( "assassination", ::bot_loadout_team );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11DF9( "assassination", ::bot_loadout_choose_from_custom_default_class );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers = [];
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias = [];
    binoculars_watchracelaststand();
    game["dialog"]["mission_ass_accept"] = "mission_mission_ass_single_accept";
    game["dialog"]["mission_ass_hunted"] = "mission_mission_ass_hunted";
    game["dialog"]["mission_ass_success"] = "mission_mission_ass_single_success";
    game["dialog"]["mission_ass_hunted_success"] = "mission_mission_ass_hunted_success";
    game["dialog"]["mission_ass_hunted_timed_out"] = "mission_mission_ass_hunted_timed_out";
    game["dialog"]["mission_ass_fail"] = "mission_mission_ass_fail";
}

filtercondition_hasbeentracked( var_0 )
{
    if ( isdefined( var_0.hasbeentracked ) && var_0.hasbeentracked )
        return 0;

    return 1;
}

aq_questthink_circleposition()
{
    if ( self.modifier == "_all_timed" )
        return;

    if ( !isdefined( self.targetplayer ) )
        return;

    determinetrackingcircleposition( self.targetplayer );
    has_termal();
    _id_1306A( self.targetteam );
}

aq_questthink_objectivevisibility()
{
    determineobjectivevisibility();
}

aq_removequestinstance()
{
    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA ) )
        scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias = scripts\engine\utility::array_remove( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias, var_1 );

    scripts\mp\gametypes\br_quest_util.gsc::releaseteamonquest( self.hunterteam );
    removeallaqui();
}

takequestitem( var_0 )
{
    scripts\mp\gametypes\br_quest_util.gsc::passes_final_capsule_check( self.team, "br_mission_pickup_tablet" );
    var_1 = self.team;
    var_2 = determinetargetteam( self );
    var_3 = parachuteoverheadwarningheight( var_1, var_2, var_0.index, self, "", var_0 );

    if ( !isdefined( var_3 ) )
    {
        scripts\mp\utility\lower_message::_id_12394( "br_assassination_notargets", undefined, 5 );
        return;
    }

    var_3 parachutestate( self );
}

parachutestate( var_0 )
{
    var_1 = spawnstruct();
    var_1.excludedplayers = [];
    var_1.excludedplayers[0] = self.targetplayer;

    if ( isdefined( var_0 ) )
        var_1.excludedplayers[1] = var_0;

    var_1.stringvar = self.targetplayer.name;
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.targetteam, "br_assassination_quest_start_target_team", var_1, self._id_12BBA );
    scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( self.targetplayer, "br_assassination_quest_start_target_player" );

    if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
    {
        if ( istrue( level.questinfo._id_124DD ) )
        {
            var_2 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA );

            foreach ( var_4 in var_2 )
                level thread scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "mission_ass_hunted", var_4, 1 );
        }
        else
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_hunted", self.targetteam, 1 );
    }

    var_1._id_11AEF = scripts\mp\gametypes\br_quest_util.gsc::objective_locations( scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.hunterteam ) );
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.hunterteam, "br_assassination_quest_start_hunter_team", var_1 );

    if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
    {
        if ( istrue( level.questinfo._id_124DD ) )
        {
            var_2 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex );
            level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "mission_ass_accept", 1, var_2, 0 );
        }
        else
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_accept", self.hunterteam, 1 );
    }

    if ( isdefined( var_0 ) )
    {
        scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( var_0, "br_assassination_quest_start_tablet_finder", var_1 );
        scripts\mp\gametypes\br_quest_util.gsc::hint_obj_name( self.hunterteam, var_0, 6, scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "assassination" ) );
    }
}

parachuteoverheadwarningheight( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = var_0;

    if ( istrue( level.questinfo._id_124DD ) )
        var_7 = var_3.team + var_3.squadindex;

    var_8 = scripts\mp\gametypes\br_quest_util.gsc::createquestinstance( "assassination", var_7, var_2, var_5, var_3.squadindex );
    var_8.modifier = var_4;

    if ( !isdefined( var_8.modifier ) )
        var_8.modifier = "";

    var_8 scripts\mp\gametypes\br_quest_util.gsc::registerteamonquest( var_0, var_3 );
    var_8.team = var_0;
    var_8.hunterteam = var_0;
    var_8.targetteam = var_1;
    var_8._id_12BB6 = 0;
    var_8.plundertimer = 0;
    var_8._id_12BBC = 0;

    if ( isdefined( var_1 ) )
        var_8._id_12BBC = var_8 scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinteam( var_1 ).size;

    if ( !isdefined( var_8.targetteam ) )
    {
        dismount_after_accum_damage( var_8 );
        return undefined;
    }

    var_8 scripts\mp\gametypes\br_quest_util.gsc::get_minigun_path( 4, 3 );

    if ( isdefined( var_6 ) )
        var_8.targetplayer = var_6;
    else
        var_8 getnewtargetplayer( var_3 );

    if ( !isdefined( var_8.targetplayer ) )
    {
        dismount_after_accum_damage( var_8 );
        return undefined;
    }

    if ( var_8.modifier != "_all" )
        var_8 scripts\mp\gametypes\br_quest_util.gsc::_id_11C74( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" )._id_11C62, 4 );

    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers = scripts\engine\utility::array_combine( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers, scripts\mp\gametypes\br_public.gsc::ondefuse( var_1, var_8._id_12BBA ) );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias = scripts\engine\utility::array_combine( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias, scripts\mp\gametypes\br_public.gsc::ondefuse( var_1, var_8._id_12BBA ) );

    if ( var_8.modifier == "_all_timed" )
    {
        if ( istrue( level.questinfo._id_124DD ) )
            level.squaddata[var_0][var_8.squadindex].player_ignore_mover = 0;
        else
            level.teamdata[var_0]["hasFailed"] = 0;
    }

    var_8 determinetrackingcircleposition( var_8.targetplayer );
    var_8 has_termal();
    var_8 _id_1306A( var_8.targetteam );
    var_8 determineobjectivevisibility();
    scripts\mp\gametypes\br_quest_util.gsc::addquestinstance( "assassination", var_8 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_129E2( "assassination", var_3, var_0 );
    return var_8;
}

dismount_after_accum_damage( var_0 )
{
    if ( isdefined( var_0.mapcircle ) )
        var_0 scripts\mp\gametypes\br_quest_util.gsc::hacks_needed();

    var_0.result = "no_locale";
    var_0 scripts\mp\gametypes\br_quest_util.gsc::releaseteamonquest( var_0.hunterteam );
}

determinetargetteam( var_0 )
{
    var_1 = var_0.team;
    var_2 = undefined;
    var_3 = level.players;
    var_4 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers;
    var_5 = scripts\mp\gametypes\br_public.gsc::ondefuse( var_1, self.squadindex );
    var_6 = scripts\engine\utility::array_combine_unique( var_4, var_5 );

    if ( istrue( level.questinfo._id_124DD ) )
        var_6 = scripts\engine\utility::array_combine_unique( var_6, scripts\mp\utility\teams::getteamdata( var_1, "players" ) );

    if ( var_3.size == var_6.size && getdvarint( "scr_assassin_quest_reset_list", 1 ) )
    {
        scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).get_target_spotted_alias;
        var_4 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers;
        var_5 = scripts\mp\gametypes\br_public.gsc::ondefuse( var_1, self.squadindex );
        var_6 = scripts\engine\utility::array_combine_unique( var_4, var_5 );

        if ( istrue( level.questinfo._id_124DD ) )
            var_6 = scripts\engine\utility::array_combine_unique( var_6, scripts\mp\utility\teams::getteamdata( var_1, "players" ) );
    }

    var_7 = 0;
    var_8 = level.questinfo.quests["assassination"].filters[0];
    var_9 = 5000;
    var_10 = 30000;

    if ( lootchopper_premodifydamage() )
    {
        var_9 = level._id_11C59;
        var_10 = level._id_11C58;
    }

    while ( !isdefined( var_2 ) )
    {
        var_7 = var_7 + 5000;
        var_11 = scripts\engine\utility::get_array_of_closest( var_0.origin, var_3, var_6, undefined, var_9 + var_7, var_9 );
        var_11 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( var_11, var_8 );

        if ( !isdefined( var_11 ) || var_11.size == 0 )
        {
            if ( var_7 > var_10 )
            {
                var_11 = scripts\engine\utility::get_array_of_closest( var_0.origin, var_3, var_6, undefined, undefined, undefined );
                var_11 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( var_11, var_8 );

                if ( !isdefined( var_11 ) || var_11.size == 0 )
                    return undefined;
            }
            else
                continue;
        }

        var_12 = [];

        foreach ( var_14 in var_11 )
            var_12[var_14.team] = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinteam( var_14.team, var_8 ).size;

        var_16 = scripts\mp\gametypes\br_quest_util.gsc::getteamcenter( var_1, var_8 );
        var_17 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinteam( var_1, var_8 ).size;

        foreach ( var_25, var_19 in var_12 )
        {
            if ( !isdefined( var_2 ) )
            {
                var_2 = var_25;
                continue;
            }

            if ( getdvar( "scr_br_gametype", "" ) == "dmz" || getdvar( "scr_br_gametype", "" ) == "risk" )
            {
                var_20 = scripts\mp\gametypes\br_gametype_dmz.gsc::onkillstreakavailable( var_2 );
                var_21 = scripts\mp\gametypes\br_gametype_dmz.gsc::onkillstreakavailable( var_25 );

                if ( var_21 > 100000 )
                {
                    if ( var_21 > var_20 )
                    {
                        var_2 = var_25;
                        continue;
                    }
                }
            }

            var_22 = abs( var_17 - var_19 );

            if ( var_22 < abs( var_17 - var_12[var_2] ) )
            {
                var_2 = var_25;
                continue;
            }
            else if ( var_22 > abs( var_17 - var_12[var_2] ) )
                continue;

            if ( var_19 > var_12[var_2] )
            {
                var_2 = var_25;
                continue;
            }
            else if ( var_19 < var_12[var_2] )
                continue;

            var_23 = scripts\mp\gametypes\br_quest_util.gsc::getteamcenter( var_25, var_8 );
            var_24 = scripts\mp\gametypes\br_quest_util.gsc::getteamcenter( var_2, var_8 );

            if ( distance2d( var_16, var_23 ) < distance2d( var_16, var_24 ) )
            {
                var_2 = var_25;
                continue;
            }
        }
    }

    return var_2;
}

determinetargetplayer( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;
    var_5 = scripts\mp\gametypes\br_quest_util.gsc::getteamcenter( self.hunterteam );

    foreach ( var_7 in level.teamdata[var_0]["players"] )
    {
        if ( !scripts\mp\gametypes\br_quest_util.gsc::isplayervalid( var_7, never_kill_off_old( self.modifier ) ) )
            continue;

        if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        {
            if ( scripts\engine\utility::is_equal( var_7.script_noteworthy, "assassination_target" ) )
            {
                var_4 = var_7;
                break;
            }
        }

        if ( !isdefined( var_4 ) )
            var_4 = var_7;

        if ( getdvar( "scr_br_gametype", "" ) == "dmz" || getdvar( "scr_br_gametype", "" ) == "risk" )
        {
            var_8 = var_7.plundercount;

            if ( isdefined( var_8 ) )
            {
                var_9 = distance2dsquared( var_1.origin, var_7.origin );

                if ( !isdefined( var_3 ) || var_9 <= var_3 )
                {
                    if ( !isdefined( var_2 ) || var_8 >= var_2 )
                    {
                        var_2 = var_8;
                        var_3 = var_9;
                        var_4 = var_7;
                    }
                }
            }

            continue;
        }

        if ( distance2d( var_5, var_7.origin ) < distance2d( var_5, var_4.origin ) )
            var_4 = var_7;
    }

    var_4.hasbeentracked = 0;
    self.targetplayer = var_4;
    self._id_12BBA = var_4.squadindex;
}

has_target_player( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = undefined;
    var_4 = level.questinfo.quests["assassination"].filters[0];
    var_5 = level.teamdata[var_0]["players"];
    var_6 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).alltrackedplayers;
    var_7 = scripts\mp\gametypes\br_quest_util.gsc::ondamagereliclfo( var_1.team, var_4, var_1.squadindex );
    var_8 = scripts\mp\gametypes\br_quest_util.gsc::onquesttablethide( var_1.team, var_4, var_1.squadindex ).size;
    var_9 = 0;
    var_10 = 5000;
    var_11 = 30000;

    if ( lootchopper_premodifydamage() )
    {
        var_10 = level._id_11C59;
        var_11 = level._id_11C58;
    }

    while ( !isdefined( var_3 ) )
    {
        var_9 = var_9 + 5000;
        var_12 = scripts\engine\utility::get_array_of_closest( var_1.origin, var_5, var_6, undefined, var_10 + var_9, var_10 );
        var_12 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( var_12, var_4 );

        if ( !isdefined( var_12 ) || var_12.size == 0 )
        {
            if ( var_9 > var_11 )
            {
                var_12 = scripts\engine\utility::get_array_of_closest( var_1.origin, var_5, var_6, undefined, undefined, undefined );
                var_12 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( var_12, var_4 );

                if ( !isdefined( var_12 ) || var_12.size == 0 )
                    return undefined;
            }
            else
                continue;
        }

        var_13 = [];

        foreach ( var_2 in var_12 )
        {
            if ( isdefined( var_13[var_2.squadindex] ) )
                continue;

            var_13[var_2.squadindex] = scripts\mp\gametypes\br_quest_util.gsc::onquesttablethide( var_2.team, var_4, var_2.squadindex ).size;
        }

        foreach ( var_21, var_17 in var_13 )
        {
            if ( !isdefined( var_3 ) )
            {
                var_3 = var_21;
                continue;
            }

            var_18 = abs( var_8 - var_17 );

            if ( var_18 < abs( var_8 - var_13[var_3] ) )
            {
                var_3 = var_21;
                continue;
            }
            else if ( var_18 > abs( var_8 - var_13[var_3] ) )
                continue;

            if ( var_17 > var_13[var_3] )
            {
                var_3 = var_21;
                continue;
            }
            else if ( var_17 < var_13[var_3] )
                continue;

            var_19 = scripts\mp\gametypes\br_quest_util.gsc::ondamagereliclfo( var_0, var_4, var_21 );
            var_20 = scripts\mp\gametypes\br_quest_util.gsc::ondamagereliclfo( var_0, var_4, var_3 );

            if ( distance2d( var_7, var_19 ) < distance2d( var_7, var_20 ) )
            {
                var_3 = var_21;
                continue;
            }
        }
    }

    foreach ( var_23 in scripts\mp\gametypes\br_quest_util.gsc::onquesttablethide( var_0, var_4, var_3 ) )
    {
        if ( !isdefined( var_2 ) )
            var_2 = var_23;

        if ( distance2d( var_7, var_23.origin ) < distance2d( var_7, var_2.origin ) )
            var_2 = var_23;
    }

    var_2.hasbeentracked = 0;
    self.targetplayer = var_2;
    self._id_12BBA = var_2.squadindex;
}

determinetrackingcircleposition( var_0 )
{
    var_1 = ( var_0.origin[0], var_0.origin[1], mp_m_speedball_patch() );

    if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        var_1 = var_1 + scripts\engine\math::random_vector_2d() * randomfloatrange( mp_m_speed_patch(), mp_m_overunder_patch() );

    scripts\mp\gametypes\br_quest_util.gsc::throwing_knife_cp_trytopickup( var_1 );
}

has_termal()
{
    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
    {
        scripts\mp\gametypes\br_quest_util.gsc::_id_12395( level.spawn_race_dogtags );
        self._id_12C4E = 2;
    }
    else
    {
        if ( getdvarint( "scr_br_alt_mode_zxp", 0 ) )
            var_0 = scripts\mp\gametypes\br_quest_util.gsc::onquesttablethide( self.hunterteam, level.questinfo.defaultfilter );
        else
            var_0 = scripts\mp\gametypes\br_quest_util.gsc::onquesttablethide( self.hunterteam );

        if ( var_0.size == 0 )
        {
            scripts\mp\gametypes\br_quest_util.gsc::_id_12395( 3500 );
            self._id_12C4E = 0;
        }
        else
        {
            var_1 = undefined;

            foreach ( var_3 in var_0 )
            {
                var_4 = distance2d( var_3.origin, self.targetplayer.origin );

                if ( !isdefined( var_1 ) || var_4 < var_1 )
                    var_1 = var_4;
            }

            if ( var_1 > 5000 )
            {
                scripts\mp\gametypes\br_quest_util.gsc::_id_12395( 3500 );
                self._id_12C4E = 0;
                return;
            }

            if ( var_1 > 2500 )
            {
                scripts\mp\gametypes\br_quest_util.gsc::_id_12395( 2000 );
                self._id_12C4E = 1;
                return;
            }

            scripts\mp\gametypes\br_quest_util.gsc::_id_12395( 1500 );
            self._id_12C4E = 2;
        }
    }
}

determineobjectivevisibility()
{
    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ) )
    {
        var_2 = var_1 scripts\mp\gametypes\br_public.gsc::isplayeringulag();
        var_3 = isdefined( var_1.aq_hudenabled ) && var_1.aq_hudenabled;

        if ( var_2 && var_3 )
            var_1 hideassassinationhud( self );

        if ( !var_2 && !var_3 )
            var_1 showassassinationhud( self );
    }

    var_5 = self.squadindex;

    if ( isdefined( self.targetplayer.squadindex ) )
        var_5 = self.targetplayer.squadindex;

    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, var_5 ) )
    {
        var_2 = var_1 scripts\mp\gametypes\br_public.gsc::isplayeringulag();
        var_3 = isdefined( var_1.bot_modify_behavior_from_tweakables ) && var_1.bot_modify_behavior_from_tweakables;

        if ( var_2 && var_3 )
            var_1 playerstartarenasetcontrols();

        if ( !var_2 && !var_3 )
            var_1 _id_12531( self.targetplayer, self._id_12C4E );
    }
}

bot_loadout_team()
{
    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA ) )
        var_1 setclientomnvar( "ui_br_assassination_target_timer", self.subway_black_screen_fade_in );

    if ( self.modifier == "_all_timed" )
        thread br_watch_armor_weapon();
}

bot_loadout_choose_from_custom_default_class()
{
    if ( self.modifier == "_all_timed" )
    {
        if ( istrue( level.questinfo._id_124DD ) )
            level.squaddata[self.targetteam][self._id_12BBA].player_ignore_mover = 1;
        else
            scripts\mp\utility\teams::setteamdata( self.targetteam, "hasFailed", 1 );

        birds_in_square_monitor( self.hunterteam );
        scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
    }
    else
    {
        scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.hunterteam, "br_assassination_timer_expire_hunters_lose" );
        var_0 = scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.targetteam );
        var_1 = scripts\mp\gametypes\br_quest_util.gsc::objective_hide_for_mlg_spectator( "assassination", var_0 );
        self._id_11FD5 = "_averted";
        var_2 = spawnstruct();
        var_3 = scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "assassination" );
        var_4 = scripts\mp\gametypes\br_quest_util.gsc::objective_origin( scripts\mp\gametypes\br_quest_util.gsc::objective_minimapupdate( "assassination", self._id_11FD5, self.modifier ) );
        var_2.usingobject = scripts\mp\gametypes\br_quest_util.gsc::v_start_pos( var_3, var_0, var_4 );
        scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.targetteam, "br_assassination_timer_expire_targets_win", var_2, self._id_12BBA );

        if ( istrue( level.questinfo._id_124DD ) )
        {
            var_5 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex );
            level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "mission_ass_fail", 1, var_5, 0 );
            var_5 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA );
            level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "mission_ass_hunted_timed_out", 1, var_5, 0 );
        }
        else
        {
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_fail", self.hunterteam, 1 );
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_hunted_timed_out", self.targetteam, 1 );
        }

        if ( getdvar( "scr_br_gametype", "" ) != "dmz" && getdvar( "scr_br_gametype", "" ) != "risk" )
        {
            var_6 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA );
            scripts\mp\gametypes\br_quest_util.gsc::parachuteprelaststandfunction( self.targetteam, self.targetplayer.origin, self.targetplayer.angles, self._id_11FD8, var_6, self._id_12BBA );
        }
    }
}

aq_playerdied( var_0, var_1 )
{
    if ( var_1 scripts\mp\gametypes\br_public.gsc::isplayeringulag() )
        return;

    thread bot_modify_behavior_from_loadout( var_1, var_0 );
}

bot_match_rules_invalidate_loadout( var_0 )
{
    thread bot_modify_behavior_from_loadout( var_0 );
}

bot_modify_behavior_from_loadout( var_0, var_1 )
{
    if ( self.modifier == "_all_timed" && ( istrue( level.questinfo._id_124DD ) && istrue( level.squaddata[self.hunterteam][self.squadindex].player_ignore_mover ) || scripts\mp\utility\teams::getteamdata( self.hunterteam, "hasFailed" ) ) )
        return;

    if ( scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
    {
        if ( !isbot( var_0 ) )
            return;
    }

    if ( var_0.team == self.targetteam )
    {
        if ( var_0 == self.targetplayer )
        {
            var_2 = var_0.attackers;
            wait 0.75;
            var_3 = spawnstruct();
            var_4 = scripts\mp\gametypes\br_quest_util.gsc::objectiveids( self.hunterteam );
            var_5 = scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "assassination" );

            if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == self.hunterteam )
            {
                var_6 = "br_assassination_complete_hunters_win";
                self._id_11FD5 = "_target_killed";
                scripts\mp\gametypes\br_quest_util.gsc::hint_obj_name( self.hunterteam, var_1, 8, scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "assassination" ) );

                foreach ( var_8 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ) )
                    var_8 scripts\cp\helicopter\chopper_boss::_id_11EFA( "t9_ch_global_complete_wz_bounty_contracts_for_operator_mission", 1 );
            }
            else
            {
                var_6 = "br_assassination_complete_target_vanished";
                self._id_11FD5 = "_target_vanished";
            }

            var_10 = scripts\mp\gametypes\br_quest_util.gsc::objective_origin( scripts\mp\gametypes\br_quest_util.gsc::objective_minimapupdate( "assassination", self._id_11FD5, self.modifier ) );
            var_11 = scripts\mp\gametypes\br_alt_mode_bblitz.gsc::calculateeventstarttime( var_1 );
            var_3.usingobject = scripts\mp\gametypes\br_quest_util.gsc::v_start_pos( var_5, var_4, var_10, undefined, var_11 );
            scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.hunterteam, var_6, var_3 );
            level notify( "assassination_quest_completed", self.hunterteam, self.squadindex );

            if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
            {
                if ( istrue( level.questinfo._id_124DD ) )
                {
                    var_12 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex );
                    level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "mission_ass_success", 1, var_12, 0 );
                }
                else
                    level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_success", self.hunterteam, 1 );
            }

            self._id_11FD6 = var_0.origin;
            self._id_11FD3 = var_0.angles;

            if ( isdefined( var_2 ) )
            {
                foreach ( var_14 in var_2 )
                {
                    if ( isdefined( var_14.team ) && var_14.team == self.hunterteam )
                        scripts\mp\gametypes\br_quest_util.gsc::_id_11DE0( var_14 );
                }
            }

            self.result = "success";
            scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
        }

        if ( self.modifier == "_all_timed" )
        {
            if ( !isdefined( level.gulag ) || isdefined( level.gulag ) && !istrue( level.gulag.shutdown ) )
            {
                foreach ( var_8 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ) )
                {
                    if ( istrue( var_8.inlaststand ) )
                        var_8 scripts\mp\laststand::lastplundereventtype( "use_hold_revive_success", var_8 );

                    if ( !isalive( var_8 ) )
                    {
                        var_8 scripts\mp\gametypes\br_pickups.gsc::addrespawntoken( 1 );
                        var_8 thread scripts\mp\gametypes\br_gulag.gsc::playergulagautowin( "assassinationQuest" );
                    }
                }
            }
        }
    }
    else if ( var_0.team == self.hunterteam )
    {
        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( self.hunterteam, never_kill_off_old( self.modifier ) ) )
        {
            if ( getdvar( "scr_br_gametype", "" ) == "dmz" || getdvar( "scr_br_gametype", "" ) == "risk" )
            {
                self.result = "fail";
                scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
            }
            else
            {
                self._id_11FD5 = "_averted";
                var_18 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA );
                var_19 = scripts\mp\gametypes\br_quest_util.gsc::parachuteprelaststandfunction( self.targetteam, var_0.origin, var_0.angles, self._id_11FD8, var_18, self._id_12BBA );
                var_3 = spawnstruct();
                var_3._id_11AEF = scripts\mp\gametypes\br.gsc::get_int_or_0( var_19["plunder"] );
                scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.targetteam, "br_assassination_complete_targets_win", var_3, self._id_12BBA );
                self.result = "fail";
                scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
            }
        }
    }
}

getnewtargetplayer( var_0 )
{
    if ( istrue( level.questinfo._id_124DD ) )
        has_target_player( self.targetteam, var_0 );
    else
        determinetargetplayer( self.targetteam, var_0 );

    determinetrackingcircleposition( self.targetplayer );
    has_termal();
    updateassassinationhud();
}

removeallaqui()
{
    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ) )
        var_1 hideassassinationhud( self );

    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA ) )
        var_1 playerstartarenasetcontrols();

    scripts\mp\gametypes\br_quest_util.gsc::hacks_needed();
}

getplayerkills()
{
    if ( level.br_leaderbystreak )
        return self.killsthislife.size;
    else
        return self.kills;
}

never_kill_off_old( var_0 )
{
    switch ( var_0 )
    {
        case "_all_timed":
        case "_all":
            return level.questinfo.defaultfilter;
        default:
            return 0;
    }
}

showassassinationhud( var_0 )
{
    self.aq_hudenabled = 1;
    scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( "assassination" + var_0.modifier );
    var_0 scripts\mp\gametypes\br_quest_util.gsc::_id_12550( self );
}

hideassassinationhud( var_0 )
{
    self.aq_hudenabled = 0;
    scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
    var_0 scripts\mp\gametypes\br_quest_util.gsc::playertimestart( self );
}

_id_13069( var_0, var_1 )
{
    if ( isdefined( self.bot_modify_behavior_from_tweakables ) && self.bot_modify_behavior_from_tweakables )
        var_2 = var_0 getentitynumber();
    else
        var_2 = -1;

    var_2 = var_0 getentitynumber();
    var_2 = var_2 + 1;
    var_3 = var_1 << 8 | var_2;
    self setclientomnvar( "ui_br_assassination_target", var_3 );
}

_id_1306A( var_0 )
{
    foreach ( var_2 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA ) )
        var_2 _id_13069( self.targetplayer, self._id_12C4E );
}

_id_12531( var_0, var_1 )
{
    self.bot_modify_behavior_from_tweakables = 1;
    _id_13069( var_0, var_1 );
}

playerstartarenasetcontrols()
{
    self.bot_modify_behavior_from_tweakables = 0;
    self setclientomnvar( "ui_br_assassination_target", 0 );
}

updateassassinationhud()
{
    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ) )
    {
        var_1 showassassinationhud( self );
        var_1 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivesetparameter( self.targetplayer getentitynumber() );
    }

    foreach ( var_1 in scripts\mp\gametypes\br_public.gsc::ondefuse( self.targetteam, self._id_12BBA ) )
        var_1 _id_12531( self.targetplayer, self._id_12C4E );
}

br_watch_armor_weapon()
{
    self notify( "assassinationTimeWarning" );
    self endon( "assassinationTimeWarning" );
    self endon( "removed" );
    var_0 = [ 300, 240, 180, 120, 90, 60, 30, 10 ];

    foreach ( var_2 in var_0 )
    {
        var_3 = ( self.subway_black_screen_fade_in - gettime() ) / 1000;
        var_4 = var_3 - var_2;

        if ( var_4 < 0 )
            continue;

        wait( var_4 );
        var_5 = int( var_2 / 60 );
        var_6 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( scripts\mp\gametypes\br_public.gsc::ondefuse( self.hunterteam, self.squadindex ), never_kill_off_old( self.modifier ) );

        foreach ( var_8 in var_6 )
        {
            var_9 = gettime() + var_2 * 1000;
            var_10 = 5;

            if ( var_2 <= 20 )
                var_10 = var_2;

            var_8 scripts\mp\utility\lower_message::_id_12394( "br_assassin_mission_time_warning", var_9, var_10 );

            if ( var_5 >= 2 )
            {
                var_8 iprintlnbold( &"MP_BR_INGAME/MISSION_ASSASSIN_2_TIME_WARNING_MIN", var_5 );
                continue;
            }

            var_8 iprintlnbold( &"MP_BR_INGAME/MISSION_ASSASSIN_2_TIME_WARNING_SEC", var_2 );
        }
    }
}

binoculars_watchracelaststand()
{
    level thread binoculars_watchracedeath();
}

binoculars_watchracedeath()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );
    var_0 = getdvarint( "scr_br_all_assassin_version", 0 );

    if ( !var_0 )
        return;

    var_1 = getdvarint( "scr_br_all_assassin_wait_time", 120 );
    helitrig();
    wait( var_1 );
    binoculars_watchraceadson( var_0 );
}

binoculars_watchraceadson( var_0 )
{
    var_1 = spawnstruct();
    var_1._id_12BD9 = [];
    var_1.setphteamscores = [];
    var_1._id_11F73 = int( getdvarfloat( "scr_br_all_assassin_rest_time", 10 ) * 1000 );

    if ( var_0 == 1 )
        var_1.modifier = "_all";
    else if ( var_0 == 2 )
        var_1.modifier = "_all_timed";
    else
    {

    }

    if ( var_1.modifier == "_all_timed" )
        var_1 binocularsinited();
    else
        var_1 binoculars_watchracetake();

    var_1 thread binoculars_watchforads();
    var_1 thread bisoverwatch();
}

binoculars_watchraceadsoff()
{
    var_0 = ( 0, 0, 0 );
    var_1 = bintheplane();
    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        var_5 = undefined;
        var_6 = scripts\mp\utility\teams::getteamdata( var_4, "players" );

        foreach ( var_8 in var_6 )
        {
            if ( var_8 scripts\mp\gametypes\br_public.gsc::isplayeringulag() )
                continue;

            if ( var_8 scripts\mp\gametypes\br_public.gsc::runbrgametypefunc6() )
            {
                var_5 = var_8;
                break;
            }

            if ( !isdefined( var_5 ) )
                var_5 = var_8;
        }

        if ( !isdefined( var_5 ) )
            continue;

        var_10 = spawnstruct();
        var_10.team = var_4;
        var_10.pos = var_5.origin;
        var_0 = var_0 + var_10.pos;
        var_2[var_2.size] = var_10;
    }

    if ( var_2.size < 2 )
        return var_2;

    var_0 = var_0 / var_2.size;

    foreach ( var_10 in var_2 )
    {
        var_13 = var_10.pos - var_0;
        var_10._id_12682 = vectortoangles( var_13 )[1];
    }

    var_2 = scripts\mp\utility\script::quicksort( var_2, ::binocularsstruct );
    return var_2;
}

binoculars_watchracetake()
{
    var_0 = binoculars_watchraceadsoff();
    var_1 = getdvarint( "scr_br_all_assassin_group_size", 150 );
    var_2 = var_0.size;

    if ( isdefined( var_1 ) )
        var_1 = int( min( var_1, var_2 ) );
    else
        var_1 = var_2;

    var_3 = int( var_2 / var_1 );
    var_4 = var_2 % var_1;
    var_5 = [];

    for ( var_6 = 0; var_6 < var_3; var_6++ )
        var_5[var_6] = var_1;

    for ( var_6 = 0; var_6 < var_4; var_6++ )
        var_5[var_6 % var_3]++;

    var_7 = 0;

    for ( var_6 = 0; var_6 < var_5.size; var_6++ )
    {
        var_1 = var_5[var_6];

        for ( var_8 = 0; var_8 < var_1; var_8++ )
        {
            var_9 = var_0[var_7 + var_8].team;
            var_10 = _id_135F9( var_8 - 1, var_1 );
            var_11 = _id_135F9( var_8 + 1, var_1 );
            var_12 = var_0[var_7 + var_10].team;
            var_13 = var_0[var_7 + var_11].team;
            var_14 = spawnstruct();
            var_14._id_12BA9 = var_12;
            var_14._id_12BAA = var_13;
            self._id_12BD9[var_9] = var_14;
        }

        var_7 = var_7 + var_1;
    }
}

binocularsinited()
{
    var_0 = getdvarfloat( "scr_br_all_assassin_max_dist", 10000 );
    var_1 = binoculars_watchraceadsoff();

    for ( var_2 = 0; var_2 < var_1.size; var_2++ )
    {
        var_3 = var_1[var_2].team;

        if ( isdefined( self._id_12BD9[var_3] ) )
            continue;

        for ( var_4 = 0; var_4 < var_1.size - 1; var_4++ )
        {
            if ( var_4 % 2 )
                var_5 = int( -0.5 * var_4 - 0.5 );
            else
                var_5 = int( 0.5 * var_4 + 1 );

            var_6 = _id_135F9( var_2 + var_5, var_1.size );
            var_7 = var_1[var_6].team;

            if ( isdefined( self._id_12BD9[var_7] ) )
                continue;

            var_8 = var_1[var_6].pos;
            var_9 = var_1[var_2].pos;

            if ( distance( var_8, var_9 ) > var_0 )
                continue;

            var_10 = spawnstruct();
            var_10._id_12BA9 = var_7;
            var_10._id_12BAA = var_7;
            self._id_12BD9[var_3] = var_10;
            var_11 = spawnstruct();
            var_11._id_12BA9 = var_3;
            var_11._id_12BAA = var_3;
            self._id_12BD9[var_7] = var_11;
            break;
        }
    }
}

bintheplane()
{
    var_0 = gettime();
    var_1 = [];

    foreach ( var_5, var_3 in level.teamdata )
    {
        if ( isdefined( self._id_12BD9[var_5] ) )
            continue;

        var_4 = self.setphteamscores[var_5];

        if ( isdefined( var_4 ) && var_0 < var_4 + self._id_11F73 )
            continue;

        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( var_5, never_kill_off_old( self.modifier ) ) )
            continue;

        var_1[var_1.size] = var_5;
    }

    return var_1;
}

binocularsstate( var_0 )
{
    var_0 waittill( "removed" );
    self.setphteamscores[var_0.hunterteam] = gettime();
    self notify( "update" );
}

bisoverwatch()
{
    var_0 = getdvarint( "scr_br_all_assassin_update_delay", 10 );

    for (;;)
    {
        scripts\engine\utility::waittill_notify_or_timeout( "update", var_0 );

        if ( self.modifier == "_all_timed" )
        {
            biscodefunc();
            continue;
        }

        bischildthread();
    }
}

biscodefunc()
{
    var_0 = [];

    foreach ( var_3, var_2 in self._id_12BD9 )
    {
        if ( !isdefined( level.questinfo.quests["assassination"].instances[var_3] ) )
            var_0[var_0.size] = var_3;
    }

    foreach ( var_3 in var_0 )
        self._id_12BD9[var_3] = undefined;

    binocularsinited();
    binoculars_watchforads();
}

bischildthread()
{
    var_0 = [];

    foreach ( var_3, var_2 in self._id_12BD9 )
    {
        if ( !isdefined( level.questinfo.quests["assassination"].instances[var_3] ) )
        {
            if ( var_2._id_12BAA == var_2._id_12BA9 )
                var_0[var_0.size] = var_3;
        }
    }

    foreach ( var_3 in var_0 )
        self._id_12BD9[var_3] = undefined;

    var_6 = bintheplane();
    var_7 = var_6.size;
    var_0 = [];

    foreach ( var_3, var_2 in self._id_12BD9 )
    {
        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( var_3, never_kill_off_old( self.modifier ) ) )
        {
            if ( var_7 > 0 )
            {
                var_7--;
                var_9 = var_6[var_7];
                self._id_12BD9[var_9] = spawnstruct();
                self._id_12BD9[var_9]._id_12BAA = var_2._id_12BAA;
                self._id_12BD9[var_9]._id_12BA9 = var_2._id_12BA9;
                self._id_12BD9[var_2._id_12BA9]._id_12BAA = var_9;
                self._id_12BD9[var_2._id_12BAA]._id_12BA9 = var_9;
            }
            else
            {
                self._id_12BD9[var_2._id_12BA9]._id_12BAA = var_2._id_12BAA;
                self._id_12BD9[var_2._id_12BAA]._id_12BA9 = var_2._id_12BA9;
            }

            var_0[var_0.size] = var_3;
        }
    }

    foreach ( var_3 in var_0 )
        self._id_12BD9[var_3] = undefined;

    if ( var_7 >= 2 )
    {
        for ( var_12 = 0; var_12 < var_7; var_12++ )
        {
            var_3 = var_6[var_12];
            var_13 = _id_135F9( var_12 - 1, var_7 );
            var_14 = _id_135F9( var_12 + 1, var_7 );
            var_15 = var_6[var_13];
            var_16 = var_6[var_14];
            var_17 = spawnstruct();
            var_17._id_12BA9 = var_15;
            var_17._id_12BAA = var_16;
            self._id_12BD9[var_3] = var_17;
        }
    }

    if ( self._id_12BD9.size < 2 )
        return;

    binoculars_watchforads();
}

binoculars_watchforads()
{
    foreach ( var_6, var_1 in self._id_12BD9 )
    {
        if ( isdefined( level.questinfo.quests["assassination"].instances[var_6] ) )
            continue;

        var_2 = var_6;
        var_3 = var_1._id_12BAA;
        var_4 = "all_" + var_2 + "_" + var_3;
        var_5 = parachuteoverheadwarningheight( var_2, var_3, var_4, undefined, self.modifier );

        if ( isdefined( var_5 ) )
        {
            var_5 parachutestate();

            if ( self.modifier == "_all_timed" )
                var_5 thread bisdeaf();

            thread binocularsstate( var_5 );
        }
    }
}

bisdeaf()
{
    self endon( "removed" );
    var_0 = getdvarfloat( "scr_br_all_assassin_circle_start_update", 10 );
    var_1 = getdvarfloat( "scr_br_all_assassin_circle_end_update", 1.0 );

    for (;;)
    {
        aq_questthink_circleposition();
        determinetrackingcircleposition( self.targetplayer );
        var_2 = objectives_finale();
        var_3 = var_0 - var_1;
        wait( var_3 * var_2 + var_1 );
    }
}

binocularsstruct( var_0, var_1 )
{
    return var_0._id_12682 <= var_1._id_12682;
}

birds_in_square_monitor( var_0 )
{
    var_1 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( scripts\mp\utility\teams::getteamdata( var_0, "players" ) );

    foreach ( var_3 in var_1 )
    {
        if ( isalive( var_3 ) )
            var_3 kill( var_3.origin, var_3 );
    }

    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( var_0, "br_assassination_timer_expire_hunters_lose" );

    if ( istrue( level.questinfo._id_124DD ) )
    {
        var_5 = scripts\mp\gametypes\br_public.gsc::ondefuse( var_0, self.squadindex );
        level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "mission_ass_fail", 1, var_5, 0 );
    }
    else
        level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "mission_ass_fail", var_0, 1 );
}

_id_135F9( var_0, var_1 )
{
    return ( var_0 % var_1 + var_1 ) % var_1;
}

helitrig()
{
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).heliwaitatplunderrepository = 1;
}

heliplayloopropeanim()
{
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).helirpgenemy = 1;
}

end_ml_p3_exfil()
{
    return isdefined( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).heliwaitatplunderrepository ) && scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).heliwaitatplunderrepository;
}

end_mine_caves()
{
    return isdefined( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).helirpgenemy ) && scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" ).helirpgenemy;
}

objectives_finale()
{
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "assassination" )._id_11C62;
    var_1 = ( self.subway_black_screen_fade_in - gettime() ) / 1000;
    var_2 = clamp( var_1 / var_0, 0.0, 1.0 );
    return var_2;
}

mp_m_speedball_patch()
{
    if ( self.modifier == "_all_timed" )
    {
        var_0 = getdvarfloat( "scr_br_all_assassin_circle_start_size", 3000.0 );
        var_1 = getdvarfloat( "scr_br_all_assassin_circle_end_size", 200.0 );
        var_2 = objectives_finale();
        var_3 = var_0 - var_1;
        return var_3 * var_2 + var_1;
    }
    else
        return 2000;
}

mp_m_speed_patch()
{
    if ( self.modifier == "_all_timed" )
        return 0;
    else
        return 100;
}

mp_m_overunder_patch()
{
    if ( self.modifier == "_all_timed" )
    {
        var_0 = mp_m_speedball_patch();
        return var_0 * 0.5;
    }
    else
        return 900;
}

lootchopper_premodifydamage()
{
    var_0 = 0;
    var_1 = scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "overrideQuestSearchParams", "assassination" );

    if ( isdefined( var_1 ) )
        return var_1;

    var_2 = scripts\mp\utility\game::onfieldupgradeendbuffer();

    switch ( var_2 )
    {
        case "mini":
        case "risk":
        case "dmz":
            var_0 = 1;
            break;
    }

    return var_0;
}
