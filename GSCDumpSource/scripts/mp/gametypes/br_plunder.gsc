// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.br_plunder_enabled = getdvarint( "scr_br_plunder", 1 ) != 0;

    if ( !istrue( level.br_plunder_enabled ) )
        return;

    thread setupplunderextractionsites();
    register_vehicle_spawners();
    register_vfx();
    level._effect["vfx_extract_smoke"] = loadfx( "vfx/iw8_br/gameplay/vfx_br_adv_supply_drop_marker" );
    level._effect["vfx_br_cashLeaderBag"] = loadfx( "vfx/iw8_br/gameplay/vfx_br_money_vip_burst.vfx" );
    level.br_plunder_lobby = getdvarint( "scr_br_plunder_lobby", 0 ) != 0 && istrue( level.allowprematchdamage );
    level.br_plunder = spawnstruct();
    level.br_plunder._id_11AD9 = 16383;
    level.br_plunder._id_11AAA = 0;
    level.br_plunder._id_11AC7 = 0;
    level.br_plunder._id_11AA9 = 0;
    level.br_plunder._id_11AC6 = 0;
    level.br_plunder.set_relic_doomslayer = 0;
    level.br_plunder.set_relic_dogtags = 0;
    level.br_plunder.jugg_protect_jammer = 0;
    level.br_plunder.jugg_objective_struct = 0;
    level.br_plunder.jugg_pursue_players = 0;
    level.br_plunder.jugg_protect_jammer_internal = 0;
    level.br_plunder._id_11A9E = 0;
    level.br_plunder.scriptable_autouse_funcs = [];
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_common_1"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_common_1" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_uncommon_1"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_uncommon_1" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_uncommon_2"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_uncommon_2" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_uncommon_3"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_uncommon_3" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_rare_1"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_rare_1" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_rare_2"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_rare_2" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_epic_1"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_epic_1" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_epic_2"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_epic_2" );
    level.br_plunder.scriptable_autouse_funcs["brloot_plunder_cash_legendary_1"] = getscriptablelootspawnedcountbyrarity( "brloot_plunder_cash_legendary_1" );
    level.br_plunder.scriptable_autouse_funcs["br_loot_cache"] = getscriptablelootspawnedcountbyrarity( "br_loot_cache" );
    level.br_plunder.scriptable_autouse_funcs["brloot_mission_tablet"] = getscriptablelootspawnedcountbyrarity( "brloot_mission_tablet" );
    setupquantities();
    relic_nuketimer_waitforcompleteobjectives();
    relic_amped_paused();
    level.br_depots = [];
    level thread _id_11AA2();
    level thread _id_11AA7();

    if ( inplunderlivelobby() )
    {
        level.br_plunder_ents = [];
        thread plunderlivelobby();
    }

    relic_amped_pause();
    _id_11AA8();
    _blankfunc::logchangeweapon();
    relic_mythic_do_pain();
    register_wave_spawner();

    if ( getdvarint( "scr_enablePlunderPileOverrides", 0 ) == 1 )
        _id_11BAA();
}

_id_11AA2( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    level waittill( "prematch_started" );

    for (;;)
    {
        level waittill( "br_circle_started" );
        var_3 = scripts\mp\gametypes\br_quest_util.gsc::getvalidplayersinarray( level.players, level.questinfo.defaultfilter );
        scripts\mp\gametypes\br_analytics.gsc::cloneprop( var_3 );
    }
}

_id_11AA7()
{
    var_0 = getdvarint( "scr_br_plunder_start_amount", 0 );

    if ( !var_0 )
        return;

    level waittill( "infils_ready" );

    foreach ( var_2 in level.players )
        var_2 playersetplundercount( var_0 );
}

survivorstreakoverride( var_0, var_1 )
{
    if ( level.br_plunder_enabled )
        level.br_plunder.scriptable_autouse_funcs[var_0] = level.br_plunder.scriptable_autouse_funcs[var_0] + var_1;
}

setupquantities()
{
    level.br_plunder._id_11C4B = [];
    level.br_plunder.names = [];
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_uncommon_1";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_uncommon_2";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_uncommon_3";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_rare_1";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_rare_2";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_epic_1";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_epic_2";
    level.br_plunder.names[level.br_plunder.names.size] = "brloot_plunder_cash_legendary_1";

    for ( var_0 = 0; var_0 < level.br_plunder.names.size; var_0++ )
    {
        level.br_plunder._id_11C4B[var_0] = level.br_pickups.counts[level.br_plunder.names[var_0]];

        if ( isdefined( level.br_plunder._id_11C4B[var_0 - 1] ) )
        {

        }
    }
}

relic_nuketimer_waitforcompleteobjectives()
{
    game["dialog"]["plunder_extract_requested"] = "plunder_plunder_extract_requested";
    game["dialog"]["plunder_extract_chopper_arrive"] = "plunder_plunder_extract_chopper_arrive";
    game["dialog"]["plunder_extract_chopper_leave"] = "plunder_plunder_extract_chopper_leave";
    game["dialog"]["plunder_extract_success"] = "plunder_plunder_extract_success";
    game["dialog"]["plunder_extract_fail_chopper"] = "plunder_plunder_extract_fail_chopper";
}

relic_amped_paused()
{
    level._id_11ADF = getentarray( "extract_pad", "targetname" );
}

playerplaybankanim()
{
    if ( self isswitchingweapon() || self isreloading() || self ismantling() || self isthrowinggrenade() || self israisingweapon() || self ismeleeing() )
        return;

    scripts\mp\gametypes\br_public.gsc::_id_1194F( "iw8_ges_plyr_cash_handoff", 1.84 );
}

playerremoveplunderfrominventory()
{
    foreach ( var_2, var_1 in self.br_inventory_slots )
    {
        if ( var_1.scriptablename == "brloot_plunder_cash_uncommon_1" )
        {
            scripts\mp\gametypes\br_public.gsc::removeitemfrominventory( var_2 );
            return;
        }
    }
}

disablealldepotsforplayer( var_0 )
{
    for ( var_1 = 0; var_1 < level.br_depots.size; var_1++ )
    {
        var_2 = level.br_depots[var_1];

        if ( isdefined( var_2 ) && !istrue( var_2.disabled ) )
            var_2 depotmakeunusabletoplayer( var_0 );
    }
}

enablealldepotsforplayer( var_0 )
{
    for ( var_1 = 0; var_1 < level.br_depots.size; var_1++ )
    {
        var_2 = level.br_depots[var_1];

        if ( isdefined( var_2 ) && !istrue( var_2.disabled ) )
            var_2 depotmakeusabletoplayer( var_0 );
    }
}

depotmakeusabletoplayer( var_0 )
{
    self enableplayeruse( var_0 );

    if ( isdefined( self.objectiveiconid ) )
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( self.objectiveiconid, var_0 );
}

depotmakeunusabletoplayer( var_0 )
{
    self disableplayeruse( var_0 );

    if ( isdefined( self.objectiveiconid ) )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( self.objectiveiconid, var_0 );
}

depotmakeunsabletoall()
{
    self makeunusable();

    if ( isdefined( self.objectiveiconid ) )
    {
        scripts\mp\objidpoolmanager::objective_playermask_hidefromall( self.objectiveiconid );
        scripts\mp\objidpoolmanager::returnobjectiveid( self.objectiveiconid );
    }
}

initplayer()
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    if ( !isdefined( self.plundercount ) )
        self.plundercount = 0;

    if ( !isdefined( self.plunderbanked ) )
        self.plunderbanked = 0;

    if ( !isdefined( self.haspickedupplunderyet ) )
        self.haspickedupplunderyet = 0;

    if ( self.plundercount == 0 )
        playersetplundercount( 0 );
}

playerdropplunder()
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    playersetplundercount( 0 );
}

bankplunderongameended()
{
    level waittill( "game_ended" );

    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1.plundercount ) && var_1.plundercount > 0 )
            var_1 _id_11951( var_1.plundercount );
    }
}

playerdropplunderondeath( var_0, var_1 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    if ( istrue( scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "playerDropPlunderOnDeath", var_0, var_1 ) ) )
        return;

    var_2 = 10.0;
    var_3 = 2.0 / var_2;
    var_4 = 3.0 / var_2;
    var_5 = 5.0 / var_2;

    if ( isdefined( self.plundercount ) && self.plundercount > 0 )
        var_6 = self.plundercount;
    else
        var_6 = 0;

    var_7 = int( min( var_6, max( 2, int( var_6 * var_3 ) ) ) + 0.5 );
    var_8 = int( max( 1, int( var_6 * var_5 ) ) );
    self.plundercountondeath = var_7;
    playersetplundercount( var_7 );

    if ( var_8 <= 0 )
        return;

    init_reach_pipe_room( var_8, var_0 );
}

takeplunderpickup( var_0 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    var_1 = 1;

    if ( isdefined( var_0.count ) )
        var_1 = var_0.count;

    if ( var_1 < 0 )
        scripts\mp\utility\script::handle_train_veh_collision( "takePlunderPickup - amount less than 0: " + var_1 + ", pickupEnt.scriptableName: " + var_0.scriptablename );

    if ( scripts\engine\utility::array_contains( level.br_plunder.names, var_0.scriptablename ) )
    {
        _id_11960( var_1 );
        level.br_plunder._id_11AAA = level.br_plunder._id_11AAA + 1;
        level.br_plunder._id_11AC7 = level.br_plunder._id_11AC7 + var_1;
        survivorstreakoverride( var_0.scriptablename, -1 );
        var_2 = "loot";

        if ( isdefined( var_0.relic_squadlink_toofar_hud_logic.spawn_set_jugg_value ) )
            var_2 = var_0.relic_squadlink_toofar_hud_logic.spawn_set_jugg_value;

        scripts\mp\gametypes\br_analytics.gsc::_id_12D37( self, var_2, var_1 );
    }
    else
        scripts\mp\gametypes\br_pickups.gsc::trypickupitem( var_0.scriptablename, var_1 );
}

relic_amped_pause()
{
    var_0 = [];
    var_0[1] = "ui_br_plunder_pickedup";
    var_0[2] = "ui_br_plunder_pickedup";
    level._id_1195A = var_0;
    var_1 = [];
    var_1[1] = ::_id_11961;
    var_1[2] = ::_id_11956;
    var_1[3] = ::_id_11952;
    var_1[4] = ::_id_1195D;
    var_1[5] = ::_id_11954;
    var_1[6] = ::_id_1195F;
    level._id_11959 = var_1;
}

_id_11960( var_0, var_1 )
{
    return _id_11958( var_0, 1, undefined, var_1 );
}

_id_11955( var_0, var_1, var_2 )
{
    return _id_11958( var_0, 2, var_1, var_2 );
}

_id_11951( var_0, var_1, var_2 )
{
    return _id_11958( var_0, 3, var_1, var_2 );
}

_id_1195C( var_0, var_1 )
{
    return _id_11958( var_0, 4, undefined, var_1 );
}

_id_11953( var_0, var_1, var_2 )
{
    return _id_11958( var_0, 5, var_1, var_2 );
}

_id_1195E( var_0, var_1, var_2 )
{
    return _id_11958( var_0, 6, var_1, var_2 );
}

_id_1195B( var_0, var_1 )
{
    return _id_11958( var_0, 4, undefined, var_1 );
}

_id_11957( var_0, var_1 )
{
    return _id_11958( var_0, 4, undefined, var_1 );
}

_id_11958( var_0, var_1, var_2, var_3 )
{
    if ( !istrue( level.br_plunder_enabled ) || !isdefined( self.plundercount ) )
        return;

    if ( var_0 < 0 )
        scripts\mp\utility\script::handle_train_veh_collision( "playerPlunderEvent - amount less than 0: " + var_0 + ", type: " + var_1 );

    if ( var_1 == 2 || var_1 == 3 || var_1 == 4 )
        var_0 = int( min( self.plundercount, var_0 ) );

    if ( !isdefined( self._id_11AD2 ) )
        self._id_11AD2 = [];

    if ( !isdefined( self._id_11AD3 ) )
        self._id_11AD3 = [];

    if ( !isdefined( self.setplayerdownedextrainfo ) )
        self.setplayerdownedextrainfo = 0;

    var_5 = scripts\engine\utility::ter_op( var_1 == 5, 3, var_1 );
    var_6 = level._id_1195A[var_5];
    var_7 = self._id_11AD3[var_1];
    var_8 = self._id_11AD2[var_1];

    if ( !isdefined( var_8 ) || gettime() - var_8 > 2000 )
        var_7 = 0;

    var_7 = var_7 + var_0;

    if ( isplayer( self ) && isdefined( var_6 ) )
    {
        var_9 = int( min( var_7, self.plundercount + var_0 ) );
        self setclientomnvar( var_6, var_9 );
    }

    self.setplayerdownedextrainfo = var_1;
    self._id_11AD2[var_1] = gettime();
    self._id_11AD3[var_1] = var_7;
    var_10 = level._id_11959[var_1];

    if ( isdefined( var_10 ) )
        var_3 = self [[ var_10 ]]( var_0, var_2, var_3 );

    if ( isdefined( var_3 ) )
    {
        if ( isdefined( var_3.player ) && !var_3.player scripts\mp\gametypes\br_public.gsc::isplayeringulag() )
        {
            if ( isdefined( var_3._id_119DD ) && var_3._id_119DD != "none" )
            {
                if ( var_3._id_119DD != "br_plunder_first_pickup" || !istrue( var_3.player.haspickedupplunderyet ) )
                {
                    if ( isdefined( level._id_11AE7 ) )
                    {
                        if ( var_0 + self.plundercount > level._id_11AE7 )
                        {
                            var_3.player thread scripts\mp\hud_message::showsplash( var_3._id_119DD );

                            if ( var_3._id_119DD == "br_plunder_first_pickup" )
                                var_3.player.haspickedupplunderyet = 1;
                        }
                    }
                    else
                    {
                        var_3.player thread scripts\mp\hud_message::showsplash( var_3._id_119DD );

                        if ( var_3._id_119DD == "br_plunder_first_pickup" )
                            var_3.player.haspickedupplunderyet = 1;
                    }
                }
            }

            if ( isdefined( var_3._id_1199A ) && ( !isdefined( var_3._id_1199B ) || var_3._id_1199B > 0 ) )
                var_3.player thread scripts\mp\utility\points::giveunifiedpoints( var_3._id_1199A, undefined, var_3._id_1199B );
        }

        if ( istrue( var_3.wam_first_node ) )
        {
            if ( var_1 == 3 )
                thread playerplaybankanim();
            else if ( var_1 == 2 )
                thread _id_1194E();
        }

        if ( isdefined( var_3.amount ) )
            var_0 = var_3.amount;

        if ( istrue( var_3._id_11A7D ) )
        {
            var_11 = scripts\engine\utility::ter_op( isdefined( var_3._id_11AE6 ), var_3._id_11AE6, var_0 );
            _id_11A7E( self, var_11 );
        }
    }

    switch ( var_1 )
    {
        case 4:
        case 3:
        case 2:
            var_0 = var_0 * -1;
            break;
        case 6:
        case 5:
            var_0 = 0;
            break;
        case 1:
            break;
    }

    if ( isdefined( var_0 ) )
    {
        var_3._id_11ACE = var_0;
        thread playersetplundercount( self.plundercount + var_0, var_3 );
    }

    scripts\mp\gametypes\br_gametype_dmz.gsc::usingtacmap();
    return var_3;
}

_id_13154( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    switch ( var_0 )
    {
        case 6:
        case 5:
        case 4:
        case 3:
        case 2:
        case 1:
            return 1;
        default:
            return 0;
    }
}

_id_11961( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    if ( !istrue( self.haspickedupplunderyet ) )
    {
        var_2._id_119DD = "br_plunder_first_pickup";
        thread scripts\mp\gametypes\br_armory_kiosk.gsc::_id_12536();
    }

    scripts\cp\helicopter\chopper_boss::unset_relic_dfa( var_0 );
    return var_2;
}

_id_11956( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    if ( !isdefined( var_2._id_11A7D ) )
    {
        var_2._id_11A7D = 1;
        var_2._id_11AE6 = undefined;
    }

    if ( !isdefined( var_2.wam_first_node ) )
        var_2.wam_first_node = 1;

    if ( isdefined( var_1 ) )
    {
        var_3 = _id_11AA6( var_1._id_11AE2 );

        if ( isdefined( var_3.dmzwincost ) && var_3.dmzwincost > 0 )
        {
            var_4 = var_1._id_11AEA + var_0 - var_3.dmzwincost;

            if ( var_4 >= 0 )
            {
                var_0 = var_0 - var_4;

                if ( !istrue( var_1._id_11AC8 ) )
                    _id_11AB3( var_1 );
            }
        }

        var_5 = 1;

        foreach ( var_7 in var_1.plunder )
        {
            var_8 = var_7.player;

            if ( isdefined( var_8 ) && var_8 == self )
            {
                var_7.plundercount = var_7.plundercount + var_0;
                var_5 = 0;
                break;
            }
        }

        if ( var_5 )
        {
            var_7 = spawnstruct();
            var_7.player = self;
            var_7.team = self.team;
            var_7.plundercount = var_0;
            var_1.plunder[var_1.plunder.size] = var_7;
        }
    }

    var_2.amount = var_0;
    var_1._id_11AEA = var_1._id_11AEA + var_0;

    if ( !isdefined( level.teamdata[self.team]["plunderInDeposit"] ) )
        level.teamdata[self.team]["plunderInDeposit"] = int( var_0 );
    else
        level.teamdata[self.team]["plunderInDeposit"] = level.teamdata[self.team]["plunderInDeposit"] + int( var_0 );

    return var_2;
}

_id_11952( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    if ( !isdefined( var_2._id_119DD ) )
        var_2._id_119DD = "br_plunder_banked";

    if ( !isdefined( var_2._id_1199A ) )
        var_2._id_1199A = scripts\engine\utility::ter_op( getdvar( "scr_br_gametype", "" ) == "dmz" || getdvar( "scr_br_gametype", "" ) == "risk", "plunder_cash_blood_money", "plunder_cash" );

    if ( !isdefined( var_2._id_1199B ) )
        var_2._id_1199B = int( scripts\mp\rank::getscoreinfovalue( var_2._id_1199A ) * ( var_0 / 10 ) );

    if ( !isdefined( var_2._id_11A7D ) )
    {
        var_2._id_11A7D = 1;
        var_2._id_11AE6 = undefined;
    }

    if ( !isdefined( var_2.wam_first_node ) )
        var_2.wam_first_node = 1;

    self.plunderbanked = self.plunderbanked + var_0;

    if ( self.plunderbanked > level.br_plunder._id_11AD9 )
        self.plunderbanked = level.br_plunder._id_11AD9;

    if ( !isdefined( level.teamdata[self.team]["plunderBanked"] ) )
        level.teamdata[self.team]["plunderBanked"] = var_0;
    else
        level.teamdata[self.team]["plunderBanked"] = level.teamdata[self.team]["plunderBanked"] + var_0;

    return var_2;
}

_id_1195D( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    return var_2;
}

_id_11954( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    if ( !isdefined( var_2._id_11AE6 ) )
        var_2._id_11AE6 = 0;

    var_2._id_123C7 = 1;
    var_3 = self.team;

    if ( isdefined( var_1 ) && isdefined( var_1.plunder ) )
    {
        foreach ( var_6, var_5 in var_1.plunder )
        {
            if ( isdefined( var_5.player ) && var_5.player == self )
            {
                var_3 = var_5.team;

                if ( !isdefined( var_0 ) )
                    var_0 = var_5.plundercount;
                else
                    var_0 = min( var_0, var_5.plundercount );

                var_5.plundercount = var_5.plundercount - var_0;

                if ( var_5.plundercount == 0 )
                    var_1.plunder[var_6] = undefined;

                self.plunderbanked = self.plunderbanked + var_0;

                if ( self.plunderbanked > level.br_plunder._id_11AD9 )
                    self.plunderbanked = level.br_plunder._id_11AD9;

                break;
            }
        }

        if ( !isdefined( var_2._id_1199A ) )
            var_2._id_1199A = scripts\engine\utility::ter_op( getdvar( "scr_br_gametype", "" ) == "dmz" || getdvar( "scr_br_gametype", "" ) == "risk", "plunder_cash_blood_money", "plunder_cash" );

        if ( !isdefined( var_2._id_1199B ) )
            var_2._id_1199B = int( scripts\mp\rank::getscoreinfovalue( var_2._id_1199A ) * ( var_0 / 10 ) );
    }

    var_0 = int( var_0 );
    level.teamdata[var_3]["plunderInDeposit"] = level.teamdata[var_3]["plunderInDeposit"] - var_0;
    level.teamdata[var_3]["plunderBanked"] = level.teamdata[var_3]["plunderBanked"] + var_0;
    return var_2;
}

_id_1195F( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = get_max_ai_from_infil_name( self );

    var_2._id_123C7 = 1;
    var_3 = self.team;

    if ( isdefined( var_1 ) && isdefined( var_1.plunder ) )
    {
        foreach ( var_6, var_5 in var_1.plunder )
        {
            if ( isdefined( var_5.player ) && var_5.player == self )
            {
                var_3 = var_5.team;

                if ( !isdefined( var_0 ) )
                    var_0 = var_5.plundercount;
                else
                    var_0 = min( var_0, var_5.plundercount );

                var_5.plundercount = var_5.plundercount - var_0;

                if ( var_5.plundercount == 0 )
                    var_1.plunder[var_6] = undefined;

                break;
            }
        }
    }

    var_0 = int( var_0 );
    level.teamdata[var_3]["plunderInDeposit"] = level.teamdata[var_3]["plunderInDeposit"] - var_0;
    return var_2;
}

isbrsquadleader( var_0 )
{
    if ( !isdefined( self.plunder ) )
        return;

    if ( !isdefined( var_0 ) )
        var_0 = get_max_ai_from_infil_name();

    var_0.bootcampmodewatcher = 0;
    var_0.teams = [];
    var_0.trial_updatehitmarker = 0;

    foreach ( var_5, var_2 in self.plunder )
    {
        if ( isdefined( var_2.player ) || var_2.plundercount <= 0 )
            continue;

        var_3 = var_2.team;
        var_4 = var_2.plundercount;
        level.teamdata[var_3]["plunderInDeposit"] = level.teamdata[var_3]["plunderInDeposit"] - var_4;
        level.teamdata[var_3]["plunderBanked"] = level.teamdata[var_3]["plunderBanked"] + var_4;
        var_0.bootcampmodewatcher = var_0.bootcampmodewatcher + var_4;
        var_0.teams[var_0.teams.size] = var_3;
        self.plunder[var_5] = undefined;
    }

    foreach ( var_2 in self.plunder )
    {
        if ( var_2.plundercount <= 0 )
            continue;

        var_7 = var_2.player;
        var_3 = var_2.team;
        var_4 = var_2.plundercount;
        var_8 = undefined;

        if ( isdefined( var_0 ) )
            var_8 = gametypeoverrideassassinsearchparams( var_0, var_7, var_3 );

        var_8 = var_7 _id_11953( var_4, self, var_8 );

        if ( isdefined( var_8 ) && isdefined( var_8.amount ) )
            var_4 = var_8.amount;

        var_0.bootcampmodewatcher = var_0.bootcampmodewatcher + var_4;
        var_0.teams[var_0.teams.size] = var_3;
        var_0.trial_updatehitmarker++;
    }

    var_10 = "fulton";

    if ( isdefined( self.classname ) && self.classname == "script_vehicle" )
        var_10 = "little_bird";

    var_0.teams = scripts\engine\utility::array_remove_duplicates( var_0.teams );
    var_11 = 0;

    if ( var_0.teams.size > 1 )
        var_11 = 1;
    else if ( var_0.teams.size == 1 && var_0.teams[0] != self.team )
        var_11 = 1;

    var_12 = _id_11AA6( self._id_11AE2, undefined, 1 );

    if ( isdefined( var_12 ) && isdefined( var_12.jugg_source ) )
        scripts\mp\gametypes\br_analytics.gsc::closeelevatordoors( var_0.trial_updatehitmarker, var_0.bootcampmodewatcher, var_12.jugg_source, var_11, self.origin );

    self.plunder = [];
    return var_0;
}

isbulletpenetration( var_0, var_1 )
{
    if ( !isdefined( self.plunder ) )
        return;

    if ( !isdefined( var_1 ) )
        var_1 = get_max_ai_from_infil_name();

    var_1.bootcampmodewatcher = 0;
    var_1.teams = [];
    var_2 = 0;

    foreach ( var_7, var_4 in self.plunder )
    {
        if ( isdefined( var_4.player ) || var_4.plundercount <= 0 )
            continue;

        var_5 = var_4.team;
        var_6 = var_4.plundercount;
        level.teamdata[var_5]["plunderInDeposit"] = level.teamdata[var_5]["plunderInDeposit"] - var_6;
        var_1.bootcampmodewatcher = var_1.bootcampmodewatcher + var_6;
        var_1.teams[var_1.teams.size] = var_5;
        self.plunder[var_7] = undefined;
    }

    foreach ( var_4 in self.plunder )
    {
        if ( var_4.plundercount <= 0 )
            continue;

        var_9 = var_4.player;
        var_5 = var_4.team;
        var_6 = var_4.plundercount;
        var_10 = undefined;

        if ( isdefined( var_1 ) )
            var_10 = gametypeoverrideassassinsearchparams( var_1, var_9, var_5 );

        var_9 _id_1195E( var_6, self, var_10 );

        if ( isdefined( var_10 ) && isdefined( var_10.amount ) )
            var_6 = var_10.amount;

        var_1.bootcampmodewatcher = var_1.bootcampmodewatcher + var_6;
        var_1.teams[var_1.teams.size] = var_5;
        var_2 = var_2 + var_6;
    }

    self.plunder = [];

    if ( istrue( var_0 ) )
    {
        var_12 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
        dropplunderbyrarity( var_1.bootcampmodewatcher, var_12 );
    }

    return var_1;
}

get_max_ai_from_infil_name( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.player = undefined;

    if ( isdefined( var_0 ) )
        var_2.player = var_0;

    var_2._id_119DD = undefined;
    var_2._id_1199A = undefined;
    var_2._id_1199B = undefined;
    var_2._id_123C7 = undefined;
    var_2._id_11A7D = undefined;
    var_2._id_11AE6 = undefined;
    var_2.wam_first_node = undefined;
    return var_2;
}

gametypeoverrideassassinsearchparams( var_0, var_1, var_2 )
{
    var_3 = get_max_ai_from_infil_name();

    if ( isdefined( var_0.player ) )
    {
        var_3.player = var_0.player;
        var_1 = var_0.player;
    }
    else if ( isdefined( var_1 ) )
        var_3.player = var_1;

    if ( isdefined( var_0._id_119DD ) )
        var_3._id_119DD = var_0._id_119DD;

    if ( isdefined( var_0._id_1199A ) )
        var_3._id_1199A = var_0._id_1199A;

    if ( isdefined( var_0._id_1199B ) )
        var_3._id_1199B = var_0._id_1199B;

    if ( isdefined( var_0._id_123C7 ) )
        var_3._id_123C7 = var_0._id_123C7;

    if ( isdefined( var_0._id_11A7D ) )
        var_3._id_11A7D = var_0._id_11A7D;

    if ( isdefined( var_0._id_11AE6 ) )
        var_3._id_11AE6 = var_0._id_11AE6;

    if ( isdefined( var_0.wam_first_node ) )
        var_3.wam_first_node = var_0.wam_first_node;

    return var_3;
}

playersetplundercount( var_0, var_1 )
{
    if ( !isdefined( self.plundercount ) )
        self.plundercount = 0;

    var_2 = var_0 - self.plundercount;

    if ( ( !isdefined( var_1 ) || !istrue( var_1._id_123C7 ) ) && var_2 == 0 )
        return;

    self.plundercount = var_0;

    if ( self.plundercount > level.br_plunder._id_11AD9 )
    {
        scripts\mp\hud_message::showerrormessage( "MP_BR_INGAME/PLUNDER_HELD_LIMIT_REACHED" );
        self.plundercount = level.br_plunder._id_11AD9;
    }

    if ( isdefined( self.petwatch ) )
        scripts\cp_mp\pet_watch::unset_relic_hideobjicons();

    var_3 = self.plundercount;
    _id_119BA( var_3 );

    if ( var_0 > 0 )
    {
        if ( istrue( level._id_11AEE ) && var_2 != 0 )
            _id_11A9B( self, 1, 1 );

        enablealldepotsforplayer( self );

        if ( inplunderlivelobby() && var_0 >= 10 )
            thread playerdelayautobankplunder();
    }
    else
    {
        if ( istrue( level._id_11AEE ) && var_2 != 0 )
            _id_11A9B( self, 0, 1 );

        disablealldepotsforplayer( self );
    }

    if ( isdefined( var_1 ) && isdefined( var_1._id_11ACE ) )
        level.teamdata[self.team]["plunderTeamTotal"] = level.teamdata[self.team]["plunderTeamTotal"] + var_1._id_11ACE;

    thread scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "postPlunder", var_1 );
}

_id_119BA( var_0 )
{
    [var_2, var_3, var_4] = wheelson_remote_tank_follow_path();
    var_5 = scripts\mp\gametypes\br_public.gsc::ondamagerelicsquadlink( self.team, self.squadindex, var_4 );

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    var_6 = obj_hangar_juggs( var_0, var_5, var_2, var_3 );
    scripts\mp\gametypes\br_public.gsc::_id_123DB( self.team, self.squadindex, var_4, var_6 );
    var_7 = scripts\mp\gametypes\br_public.gsc::ondefuse( self.team, self.squadindex );

    foreach ( var_9 in var_7 )
    {
        if ( isbot( var_9 ) && scripts\mp\gametypes\br_public.gsc::scn_infil_tango_npc_4_sfx() )
            continue;

        var_9 setclientomnvar( var_4, var_6 );
    }
}

obj_hangar_juggs( var_0, var_1, var_2, var_3 )
{
    var_4 = int( pow( 2, var_3 ) ) - 1;
    var_5 = ( var_0 & var_4 ) << var_2;
    var_6 = ~( var_4 << var_2 );
    var_7 = var_1 & var_6;
    var_8 = var_7 + var_5;
    return var_8;
}

wheelson_remote_tank_follow_path()
{
    var_0 = 0;
    var_1 = 0;
    var_2 = "";

    switch ( self.pers["squadMemberIndex"] )
    {
        case 1:
            [var_0, var_1, var_2] = [ 0, 14, "ui_br_plunder_count" ];
            break;
        case 2:
            [var_0, var_1, var_2] = [ 14, 14, "ui_br_plunder_count" ];
            break;
        case 3:
            [var_0, var_1, var_2] = [ 0, 14, "ui_br_plunder_count2" ];
            break;
        case 4:
            [var_0, var_1, var_2] = [ 14, 14, "ui_br_plunder_count2" ];
            break;
        default:
            break;
    }

    return [ var_0, var_1, var_2 ];
}

dangercircletick( var_0, var_1 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    var_2 = var_1 * var_1;

    for ( var_3 = 0; var_3 < level.br_depots.size; var_3++ )
    {
        var_4 = level.br_depots[var_3];

        if ( isdefined( var_4 ) && !istrue( var_4.disabled ) && distance2dsquared( var_0, var_4.origin ) > var_2 )
        {
            var_4.disabled = 1;
            var_4 depotmakeunsabletoall();
        }
    }

    for ( var_3 = 0; var_3 < level.br_plunder_sites.size; var_3++ )
    {
        var_5 = level.br_plunder_sites[var_3];

        if ( isdefined( var_5 ) && !istrue( var_5.disabled ) && distance2dsquared( var_0, var_5.origin ) > var_2 )
        {
            var_5.disabled = 1;
            var_5 setscriptablepartstate( var_5.type, var_5.helihint_gotopad_vo );
        }
    }
}

_id_1194E()
{
    self endon( "death_or_disconnect" );

    if ( !scripts\mp\gametypes\br_public.gsc::waypointid() || self isgestureplaying() )
        return;

    scripts\mp\gametypes\br_public.gsc::_id_1194F( "iw8_ges_plyr_cash_handoff", 1.84 );
}

cratedropplunder()
{
    if ( !isdefined( self.plunder ) )
        return;

    var_0 = 0;

    for ( var_1 = 0; var_1 < self.plunder.size; var_1++ )
        var_0 = var_0 + self.plunder[var_1].plundercount;

    self.angles = ( 0, 0, 0 );
    var_2 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
    dropplunderbyrarity( var_0, var_2 );
}

dropplundersounds( var_0, var_1 )
{
    if ( var_1 <= 0 )
        return;

    var_2 = var_0 + ( 0, 0, 24 );
    var_3 = "";
    wait 0.5;

    switch ( var_1 )
    {
        case 0:
            break;
        case 1:
            var_3 = "br_drop_plunder_01";
            break;
        case 2:
            var_3 = "br_drop_plunder_02";
            break;
        case 3:
            var_3 = "br_drop_plunder_03";
            break;
        case 4:
            var_3 = "br_drop_plunder_04";
            break;
        case 5:
            var_3 = "br_drop_plunder_05";
            break;
        case 6:
        default:
            var_3 = "br_drop_plunder_06";
            break;
    }

    playsoundatpos( var_2, var_3 );
}

dropplunderbyrarity( var_0, var_1, var_2 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    var_3 = [];
    var_4 = [];
    var_5 = 0;
    var_6 = 6;

    if ( isdefined( var_2 ) )
        var_6 = var_2;

    for ( var_7 = level.br_plunder._id_11C4B.size - 1; var_7 >= 0; var_7-- )
    {
        var_4[var_7] = int( var_0 / level.br_plunder._id_11C4B[var_7] );
        var_4[var_7] = int( clamp( var_4[var_7], 0, var_6 - var_5 ) );
        var_5 = var_5 + var_4[var_7];

        if ( var_0 <= 0 || var_5 >= var_6 )
            break;
        else
            var_0 = var_0 - var_4[var_7] * level.br_plunder._id_11C4B[var_7];
    }

    for ( var_8 = level.br_plunder._id_11C4B.size - 1; var_8 >= 0; var_8-- )
    {
        if ( !isdefined( var_4[var_8] ) )
            continue;

        for ( var_9 = 0; var_9 < var_4[var_8]; var_9++ )
        {
            var_10 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
            var_11 = scripts\mp\gametypes\br_pickups.gsc::spawnpickup( level.br_plunder.names[var_8], var_10, level.br_plunder._id_11C4B[var_8], 1 );
            survivorstreakoverride( level.br_plunder.names[var_8], 1 );

            if ( isdefined( var_11 ) )
            {
                var_3[var_3.size] = var_11;

                if ( inplunderlivelobby() )
                    level.br_plunder_ents[level.br_plunder_ents.size] = var_11;
            }
        }
    }

    level.br_plunder._id_11AA9 = level.br_plunder._id_11AA9 + var_5;
    level.br_plunder._id_11AC6 = level.br_plunder._id_11AC6 + var_0;
    level thread dropplundersounds( self.origin, var_3.size );
    return var_3;
}

init_reach_pipe_room( var_0, var_1 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    var_2 = [];
    var_3 = [];
    var_4 = 0;

    for ( var_5 = level.br_plunder.names.size - 1; var_5 >= 0; var_5-- )
    {
        if ( var_0 >= level.br_plunder._id_11C4B[var_5] )
        {
            var_4 = var_5;
            break;
        }
    }

    var_6 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
    var_7 = scripts\mp\gametypes\br_pickups.gsc::spawnpickup( level.br_plunder.names[var_4], var_6, var_0, 1 );
    survivorstreakoverride( level.br_plunder.names[var_4], 1 );

    if ( isdefined( var_7 ) )
    {
        var_2[var_2.size] = var_7;

        if ( inplunderlivelobby() )
            level.br_plunder_ents[level.br_plunder_ents.size] = var_7;
    }

    level.br_plunder._id_11AA9++;
    level.br_plunder._id_11AC6 = level.br_plunder._id_11AC6 + var_0;
    level thread dropplundersounds( self.origin, var_2.size );
    return var_2;
}

safecheckstring()
{
    if ( scripts\mp\gametypes\br_gametypes.gsc::roof_enemy_groups( "plunderSites" ) )
        return 0;

    return istrue( level.br_plunder_enabled ) && level.br_plunder_sites.size != 0 && getdvarint( "scr_br_plunder_sites", 1 ) != 0;
}

#using_animtree("mp_vehicles_always_loaded");

register_vehicle_spawners()
{
    level.scr_anim["plunder_extract_heli"]["heli_in"] = %iw8_br_plunder_heli_in;
    level.scr_anim["plunder_extract_heli"]["heli_loop"] = %iw8_br_plunder_heli_loop;
    level.scr_anim["plunder_extract_heli"]["heli_out"] = %iw8_br_plunder_heli_out;
}

#using_animtree("script_model");

register_vfx()
{
    level.scr_animtree["plunder_extract_heli"] = #animtree;
    level.scr_anim["plunder_extract_heli"]["rope_in"] = %iw8_br_plunder_heli_rope_in;
    level.scr_animname["plunder_extract_heli"]["rope_in"] = "iw8_br_plunder_heli_rope_in";
    level.scr_anim["plunder_extract_heli"]["rope_loop"] = %iw8_br_plunder_heli_rope_loop;
    level.scr_animname["plunder_extract_heli"]["rope_loop"] = "iw8_br_plunder_heli_rope_loop";
    level.scr_anim["plunder_extract_heli"]["rope_out"] = %iw8_br_plunder_heli_rope_out;
    level.scr_animname["plunder_extract_heli"]["rope_out"] = "iw8_br_plunder_heli_rope_out";
    level.scr_anim["plunder_extract_heli"]["bag_in"] = %iw8_br_plunder_heli_bag_in;
    level.scr_animname["plunder_extract_heli"]["bag_in"] = "iw8_br_plunder_heli_bag_in";
    level.scr_anim["plunder_extract_heli"]["bag_loop"] = %iw8_br_plunder_heli_bag_loop;
    level.scr_animname["plunder_extract_heli"]["bag_loop"] = "iw8_br_plunder_heli_bag_loop";
    level.scr_anim["plunder_extract_heli"]["bag_out"] = %iw8_br_plunder_heli_bag_out;
    level.scr_animname["plunder_extract_heli"]["bag_out"] = "iw8_br_plunder_heli_bag_out";
}

register_wave_spawner()
{
    var_0 = [];
    var_1 = _id_11AA6( "plunderHelipad1", 1 );
    var_1._id_121BE = "brloot_plunder_extraction_site_01";
    var_0[var_0.size] = var_1;
    var_1 = _id_11AA6( "plunderHelipad2", 1 );
    var_1._id_121BE = "brloot_plunder_extraction_site_02";
    var_0[var_0.size] = var_1;
    var_1 = _id_11AA6( "extractHelipadPlunder", 1 );
    var_1._id_121BE = "brloot_quest_extract_site_plunder";
    var_0[var_0.size] = var_1;
    var_1 = _id_11AA6( "extractHelipadBR", 1 );
    var_1._id_121BE = "brloot_quest_extract_site_br";
    var_0[var_0.size] = var_1;

    foreach ( var_1 in var_0 )
    {
        var_1.type = 1;
        var_1.usetime = 0;
        var_1._id_1310B = 3;
        var_1._id_13109 = getdvarint( "scr_plunderHeliUseAmount", 20000 );
        var_1._id_12BF3 = 0;
        var_1._id_1310C = "MP/CANNOT_DEPOSIT_CASH_HELI_FULL";
        var_1._id_1310D = "MP/CANNOT_DEPOSIT_CASH_HELI_LEAVING";
        var_1._id_121BF = "activedepositcurrent";
        var_1._id_121B8 = "visiblecurrent";
        var_1.jugg_go_to_node_callback = 0;
        var_1.juggernaut_shouldexecute = getdvarint( "scr_plunderHeliCountdown", 30 );
        var_1.jugg_health_debug = "MP/CASH_HELI_LEAVING_IN_N";
        var_1.dmzwincost = 0;
        var_1.gas_badplace = ::playerplunderbankdeposit;
        var_1.jugg_get_priority_player = ::playerpowerscleanuphud;
        var_1.brcirclecoughnexttime = ::playerpackdataintogulagomnvar;
        var_1.jugg_source = "little_bird";
    }
}

obj_room_fire_01()
{
    var_0 = [];

    if ( scripts\cp_mp\utility\game_utility::riskspawn_debugdvar() )
    {
        var_0 = getentitylessscriptablearrayinradius( "extract_pad", "targetname" );
        var_1 = getentitylessscriptablearrayinradius( "extract_pad_boneyard", "targetname" );

        if ( var_1.size > 0 )
            var_0 = scripts\engine\utility::array_combine( var_0, var_1 );
    }
    else
    {
        var_2 = getentitylessscriptablearrayinradius( "plunder_extraction_01", "targetname" );
        var_3 = getentitylessscriptablearrayinradius( "plunder_extraction_02", "targetname" );
        var_0 = scripts\engine\utility::array_combine( var_2, var_3 );
    }

    if ( var_0.size > 0 )
    {
        foreach ( var_5 in var_0 )
        {
            var_5.allowobjectiveuseaftermatchstart = "active";
            var_5.allowed_objectives = "activeCurrent";
            var_5.helihint_gotopad_vo = "visible";
            var_5.heliextractcallback = "visible";
        }

        return var_0;
    }
    else
    {
        var_0 = getentitylessscriptablearrayinradius( "plunder_extraction", "targetname" );

        foreach ( var_5 in var_0 )
        {
            var_5.allowobjectiveuseaftermatchstart = "visible";
            var_5.allowed_objectives = "visibleCurrent";
            var_5.helihint_gotopad_vo = "hidden";
        }

        return var_0;
    }
}

setupplunderextractionsites()
{
    level.br_plunder_sites = obj_room_fire_01();
    level.clear_look_at_ent = [];
    level.clear_look_at_ent[level.clear_look_at_ent.size] = "brloot_plunder_extraction_site";
    level.clear_look_at_ent[level.clear_look_at_ent.size] = "brloot_plunder_extraction_site_01";
    level.clear_look_at_ent[level.clear_look_at_ent.size] = "brloot_plunder_extraction_site_02";
    level.clear_look_at_ent[level.clear_look_at_ent.size] = "brloot_quest_extract_site_br";
    level.clear_look_at_ent[level.clear_look_at_ent.size] = "brloot_quest_extract_site_plunder";
    level.clear_mortar_settings = [];
    level.clear_mortar_settings[level.clear_mortar_settings.size] = "active";
    level.clear_mortar_settings[level.clear_mortar_settings.size] = "active2";
    level.clear_mortar_settings[level.clear_mortar_settings.size] = "activecurrent";
    level.clear_mortar_settings[level.clear_mortar_settings.size] = "activecurrentnight";
    level.clear_mortar_settings[level.clear_mortar_settings.size] = "visiblecurrent";

    if ( !safecheckstring() )
    {
        var_0 = getentarray( "plunder_extraction_visual", "targetname" );

        foreach ( var_2 in var_0 )
            var_2 delete();

        foreach ( var_5 in level.br_plunder_sites )
            var_5 setscriptablepartstate( var_5.type, "hidden" );

        level.br_plunder_sites = [];
        return;
    }

    scripts\mp\flags::gameflagwait( "prematch_done" );
    scripts\engine\scriptable::scriptable_addusedcallback( ::plundersiteused );

    if ( isdefined( level.start_area_fx_end ) && level.start_area_fx_end > 0 && !istrue( level._id_1311A ) )
        wait( level.start_area_fx_end );
    else if ( istrue( level._id_1311A ) )
        scripts\mp\flags::gameflagwait( "activate_cash_lzs" );

    foreach ( var_8 in level.players )
    {
        if ( isdefined( var_8 ) )
        {
            if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
                var_8 scripts\mp\hud_message::showsplash( "bm_extract_heli_start" );
        }
    }

    foreach ( var_5 in level.br_plunder_sites )
    {
        var_11 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), var_5.allowed_objectives, var_5.allowobjectiveuseaftermatchstart );
        var_5 setscriptablepartstate( var_5.type, var_11 );
    }
}

mounted()
{
    if ( !safecheckstring() )
        return;

    var_0 = obj_room_fire_01();
    return var_0;
}

_id_12377( var_0 )
{
    foreach ( var_2 in level.br_plunder_sites )
    {
        if ( !scripts\engine\utility::array_contains( var_0, var_2 ) )
            var_2 setscriptablepartstate( var_2.type, "hidden" );
    }

    level.br_plunder_sites = var_0;
}

getrewardvaluetype( var_0 )
{
    var_1 = spawn( "script_model", var_0.origin + ( 0, 0, 1000 ) );
    var_1 setmodel( "veh8_mil_air_mindia8_plunder_x" );
    var_2 = var_0.origin[0];
    var_3 = var_0.origin[1];
    var_4 = 800;
    var_5 = var_1 tracegroundpoint( var_2, var_3 );
    var_6 = var_5 + var_4;
    var_7 = ( var_2, var_3, var_6 );
    var_1.origin = var_7;

    for (;;)
        waitframe();
}

plundersiteused( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_3 ) )
        return;

    if ( !isdefined( level.clear_look_at_ent ) || !isdefined( level.clear_mortar_settings ) )
        return;

    var_5 = 1;

    foreach ( var_7 in level.clear_look_at_ent )
    {
        if ( var_7 != var_1 )
            continue;

        var_5 = 0;
        break;
    }

    if ( var_5 )
        return;

    var_5 = 1;

    foreach ( var_10 in level.clear_mortar_settings )
    {
        if ( var_10 != var_2 )
            continue;

        var_5 = 0;
        break;
    }

    if ( var_5 )
        return;

    thread plundersiteusedinternal( var_0, var_1, var_2, var_3 );
}

plundersiteusedinternal( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( var_0.disabled ) )
        return;

    if ( isdefined( var_0.heli ) )
    {
        var_3 playerdenyextraction( undefined, &"KILLSTREAKS/AIR_SPACE_TOO_CROWDED" );
        return;
    }

    var_4 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), "inuseCurrent", "inuse" );
    var_0 setscriptablepartstate( var_0.type, var_4 );
    var_5 = getgroundposition( var_0.origin, 1 ) + ( 0, 0, 2 );
    var_6 = var_3 playerspawnextractchopper( var_5, var_0 );

    if ( isdefined( var_6 ) )
    {
        var_6.site = var_0;
        var_0.heli = var_6;
        var_0.team = var_3.team;
        thread get_next_rein_group( var_5 );
        var_3 _id_119F4();

        if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "plunder_extract_requested", var_3.team, 1 );

        level thread scripts\mp\gametypes\br.gsc::_id_12BEE( "br_extract_heli_incoming", var_3, var_3.team );
        var_6 thread playerpowerscleanuppowers( var_0 );
    }
    else
    {
        playerdenyextraction( undefined, &"KILLSTREAKS/AIR_SPACE_TOO_CROWDED" );
        var_4 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), var_0.allowed_objectives, var_0.allowobjectiveuseaftermatchstart );
        var_0 setscriptablepartstate( var_0.type, var_4 );
        return;
    }

    if ( istrue( level._id_11AD4 ) )
    {
        var_7 = scripts\common\utility::playersincylinder( var_0.origin, 15000 );
        var_8 = scripts\mp\gametypes\br_public.gsc::ondefuse( var_3.team, var_3.squadindex );

        foreach ( var_10 in var_7 )
        {
            if ( !scripts\engine\utility::array_contains( var_8, var_10 ) )
                var_10 thread scripts\mp\hud_message::showsplash( "br_extract_heli_incoming_them", undefined, var_3 );
        }
    }

    if ( istrue( level.threat_sight_monitor ) )
    {
        var_0.disabled = 1;
        var_4 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), var_0.heliextractcallback, var_0.helihint_gotopad_vo );
        var_0 setscriptablepartstate( var_0.type, var_4 );
        level thread scripts\mp\gametypes\br_gametype_dmz.gsc::lastdirtyscore( var_0 );
    }
}

_id_119F4()
{
    self endon( "death_or_disconnect" );
    scripts\mp\gametypes\br_public.gsc::_id_1194F( "iw8_ges_plyr_plunder_smoke", 1.867 );
}

playerdenyextraction( var_0, var_1 )
{
    self iprintlnbold( var_1 );
    self playlocalsound( "br_pickup_deny" );

    if ( isdefined( var_0 ) )
    {
        var_2 = self getweaponammoclip( var_0 );
        self setweaponammoclip( var_0, var_2 + 1 );
    }
}

get_next_rein_group( var_0 )
{
    wait 1.35;
    var_1 = spawn( "script_model", var_0 );
    var_1 setmodel( "scr_smoke_grenade" );
    var_1.angles = ( 0, 90, 90 );
    var_1 playsound( "smoke_carepackage_expl_trans" );
    var_1 playloopsound( "smoke_carepackage_smoke_lp" );
    var_1 setscriptablepartstate( "smoke", "on" );
    wait 17;
    var_1 endon( "death" );
    var_1 setscriptablepartstate( "smoke", "dissipate" );
    var_1 playsound( "smoke_canister_tail_dissipate" );
    wait 1;
    var_1 stoploopsound();
    wait 4.5;
    var_1 delete();
}

playerspawnextractchopper( var_0, var_1 )
{
    var_2 = var_0;
    var_3 = var_2 + ( 0, 0, 2000 );
    var_4 = var_2 + ( 0, 0, 8000 );
    var_5 = var_2 + ( 0, 0, 800 );
    var_6 = 0;
    var_7 = ( 0, 0, 0 );
    var_8 = getdvarint( "scr_dmz_plunder_use_structs", 0 );

    if ( var_8 )
    {
        var_9 = neurotoxin_damage_monitor( var_2 );

        if ( isdefined( var_9 ) )
        {
            var_10 = var_9.script_noteworthy;
            var_7 = var_10.angles;
        }
        else
        {
            var_6 = mp_m_trench_patch( var_1, var_4, var_3 );
            var_7 = ( 0, var_6, 0 );
        }
    }
    else
    {
        var_6 = mp_m_trench_patch( var_1, var_4, var_3 );
        var_7 = ( 0, var_6, 0 );
    }

    if ( getdvarint( "scr_br_plunder_heli_adjust_bag", 0 ) == 1 )
    {
        var_11 = -100;
        var_12 = 60;
        var_13 = anglestoforward( var_7 );
        var_14 = anglestoright( var_7 );
        var_2 = var_2 + var_13 * var_11 + var_14 * var_12;
        var_3 = var_2 + ( 0, 0, 2000 );
        var_5 = var_2 + ( 0, 0, 800 );
    }

    var_15 = var_4 - anglestoforward( var_7 ) * 20000;
    var_16 = spawnheli( self, var_15, var_3, var_5, var_2 );
    return var_16;
}

neurotoxin_damage_monitor( var_0 )
{
    var_1 = undefined;

    foreach ( var_3 in level._id_11ADF )
    {
        if ( isdefined( var_3 ) && distance2dsquared( var_3.origin, var_0 ) <= 10000 )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}

mp_m_trench_patch( var_0, var_1, var_2 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.leave_pool_behind_after_deactivation ) )
        return var_0.leave_pool_behind_after_deactivation;

    var_3 = 10;
    var_4 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 1, 0, 1, 1, 0 );
    var_5 = 0;

    for ( var_6 = 0; var_6 < 360; var_6 = var_6 + var_3 )
    {
        var_5 = var_5 + var_6;
        var_7 = ( 0, var_5, 0 );
        var_8 = var_1 - anglestoforward( var_7 ) * 20000;
        var_9 = var_2;
        var_10 = scripts\engine\trace::sphere_trace( var_8, var_9, 100, undefined, var_4, 1 );

        if ( var_10["fraction"] == 1 )
        {
            if ( isdefined( var_0 ) )
                var_0.leave_pool_behind_after_deactivation = var_5;

            return var_5;
        }

        if ( var_6 % 3 == 0 )
            waitframe();
    }

    return var_5;
}

drophelicrate( var_0 )
{
    if ( !isdefined( var_0.plunder ) )
        return;

    level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "plunder_extract_fail_chopper", self.team, 1 );
    _id_11A9C( self.crate, 0 );
    var_1 = self.crate;
    self.crate = undefined;
    var_1.plunder = var_0.plunder;
    var_2 = var_1.origin;
    var_3 = ( var_2[0], var_2[1], -12000 );
    var_4 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 1, 1, 0 );
    var_5 = scripts\engine\trace::ray_trace( var_2, var_3, var_0, var_4 );
    var_6 = var_5["position"];
    var_7 = var_2[2] - var_6[2];

    if ( var_7 > 0 )
    {
        var_8 = sqrt( 2 * var_7 / 800 );
        var_1 moveto( var_6, var_8, var_8, 0 );
        wait( var_8 );
    }

    var_1.origin = var_6;
    playfx( scripts\engine\utility::getfx( "airdrop_crate_impact" ), var_6 );
    isbulletpenetration( var_1, 1 );
    var_1 thread playerplunderdepositcallback( var_0 );
}

descendpos( var_0, var_1, var_2 )
{
    var_3 = var_0 * 0.0000157828;
    var_4 = 0.5 * var_2;
    var_5 = var_1;
    var_6 = -1 * var_3;
    var_7 = ( -1 * var_5 + sqrt( var_5 * var_5 - 4 * var_4 * var_6 ) ) / ( 2 * var_4 );
    var_7 = var_7 * 3600;
    var_7 = var_7 + 1.5;
    return var_7;
}

deregisterscriptableinstance( var_0 )
{
    var_1 = descendpos( 20000, 100, 125 );
    var_2 = descendpos( var_0, 25.0, 31.25 );
    var_3 = var_1 + var_2;
    return var_3;
}

playerpowerscleanuppowers( var_0 )
{
    self endon( "death" );
    self endon( "leaving" );
    var_1 = self.jugg_idle_until_shot_or_near[2];
    var_2 = self.handlenavobstacles[2] - var_1;
    self.level_light = deregisterscriptableinstance( var_2 );
    thread heliwatchgameendleave();
    self._id_11B84 = 1;
    helidescend();
    self._id_11B84 = undefined;
    self setscriptablepartstate( "vector_field", "on" );

    if ( !istrue( level.gameended ) )
    {
        if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "plunder_extract_chopper_arrive", self.team, 1 );

        thread playersetattractionoff( var_0 );
        return;
    }

    thread playerpulloutofgulagwin( 1 );
}

playersetattractionoff( var_0 )
{
    var_1 = undefined;

    if ( var_0.type == "brloot_plunder_extraction_site_01" )
        var_1 = "plunderHelipad1";
    else if ( var_0.type == "brloot_plunder_extraction_site_02" )
        var_1 = "plunderHelipad2";
    else if ( var_0.type == "brloot_quest_extract_site_plunder" )
        var_1 = "extractHelipadPlunder";
    else if ( var_0.type == "brloot_quest_extract_site_br" )
        var_1 = "extractHelipadBR";
    else
    {

    }

    _id_11AB0( var_0, var_1 );
    var_2 = undefined;

    if ( isdefined( self.team ) )
        var_2 = scripts\mp\utility\teams::getfriendlyplayers( self.team );

    thread _id_11ABE( var_0, var_2 );
    _id_11AC4( var_0, var_2 );
}

playerpackdataintoomnvar( var_0 )
{
    if ( !istrue( level.gameended ) && !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "plunder_extract_success", self.team, 1 );

    var_1 = var_0 isbrsquadleader();

    if ( isdefined( var_1 ) && isdefined( var_1.bootcampmodewatcher ) && var_1.bootcampmodewatcher > 0 )
    {
        level.br_plunder.jugg_pursue_players = level.br_plunder.jugg_pursue_players + var_1.bootcampmodewatcher;
        level.br_plunder.jugg_protect_jammer_internal++;
    }
}

_id_12814( var_0 )
{
    var_1 = spawn( "script_model", ( 0, 0, 0 ) );
    var_1 setmodel( "misc_rapelling_rope_01_fiber_br" );
    var_1 linkto( var_0, "origin_animate_jnt", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_1.animname = var_0.animname;
    var_1 scripts\common\anim::setanimtree();
    var_0 scripts\common\anim::anim_first_frame_solo( var_1, "rope_in", "origin_animate_jnt" );
    var_2 = spawn( "script_model", ( 0, 0, 0 ) );
    var_2 setmodel( "br_plunder_extraction_delivery_bag" );
    var_2 linkto( var_0, "origin_animate_jnt", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_2.animname = var_0.animname;
    var_2 scripts\common\anim::setanimtree();
    var_0 scripts\common\anim::anim_first_frame_solo( var_2, "bag_in", "origin_animate_jnt" );
    var_0.rope = var_1;
    var_0.crate = var_2;
}

spawnheli( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 1;
    var_6 = vectortoangles( var_2 * ( 1, 1, 0 ) - var_1 * ( 1, 1, 0 ) );
    var_7 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( var_0, var_1, var_6, "veh_apache_plunder_mp", "veh8_mil_air_mindia8_plunder_x" );

    if ( !isdefined( var_7 ) )
        return;

    var_7.damagecallback = ::callback_vehicledamage;
    var_7.speed = 100;
    var_7.accel = 125;
    var_7.health = scripts\engine\utility::ter_op( scripts\mp\utility\game::onfieldupgradeendbuffer() == "dmz" || scripts\mp\utility\game::onfieldupgradeendbuffer() == "risk", level.juggernaut_damage_thread, 1000 );
    var_7.maxhealth = var_7.health;
    var_7.team = var_0.team;
    var_7.owner = var_0;
    var_7.lifeid = 0;
    var_7.flaresreservecount = var_5;
    var_7.isassaulting = var_1;
    var_7.handlenavobstacles = var_2;
    var_7.plunder_initrepositories = var_3;
    var_7.jugg_idle_until_shot_or_near = var_4;
    var_7._id_12152 = var_6;
    var_7.vehiclename = "magma_plunder_chopper";
    var_7.animname = "plunder_extract_heli";
    var_7 setcandamage( 1 );
    var_7 setmaxpitchroll( 10, 25 );
    var_7 vehicle_setspeed( var_7.speed, var_7.accel );
    var_7 sethoverparams( 1, 1, 1 );
    var_7 setturningability( 0.05 );
    var_7 setyawspeed( 45, 25, 25, 0.5 );
    var_7 setotherent( var_0 );
    var_7 setscriptablepartstate( "engine", "on" );
    var_7 setscriptablepartstate( "tail_light", "red" );
    var_7 setscriptablepartstate( "cockpit_light", "on" );
    var_7 setscriptablepartstate( "infil_lights", "on" );
    var_7.scenenode = spawn( "script_model", var_7.jugg_idle_until_shot_or_near );
    var_7.scenenode.angles = var_7._id_12152;
    var_7.scenenode setmodel( "tag_origin" );
    var_7.scenenode scripts\common\anim::anim_first_frame_solo( var_7, "heli_in" );
    _id_12814( var_7 );
    return var_7;
}

playerplunderdepositcallback( var_0 )
{
    _id_11AA0( self );
    self hide();

    if ( isdefined( var_0 ) )
        var_0.crate = undefined;

    waitframe();
    self delete();
}

playerplunderevent()
{
    self endon( "heli_gone" );
    var_0 = self.owner;
    self waittill( "death", var_1, var_2, var_3, var_4 );
    var_5 = 0;

    if ( isdefined( self.plunder ) )
    {
        foreach ( var_7 in self.plunder )
            var_5 = var_5 + var_7.plundercount;
    }

    scripts\mp\gametypes\br_analytics.gsc::closedpos( var_5, "little_bird", self.jugg_idle_until_shot_or_near, self.origin );
    thread drophelicrate( self );
    playerplaydepositanim();

    if ( !isdefined( self ) )
        return;

    if ( !isdefined( self.largeprojectiledamage ) && !istrue( self.isdepot ) )
    {
        self vehicle_setspeed( 25, 5 );
        thread playerplunderbankdepositcallback( 75 );
        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 2.7 );
    }

    playerpowersaddhudelem( var_1 );
}

playerplaydepositanim()
{
    if ( isdefined( self.rope ) )
        self.rope delete();

    if ( isdefined( self.crate ) )
        self.crate thread playerplunderdepositcallback( self );

    if ( isdefined( self.scenenode ) )
        self.scenenode delete();
}

playerpowersaddhudelem( var_0 )
{
    var_1 = self gettagorigin( "tag_origin" ) + ( 0, 0, 40 );
    self radiusdamage( var_1, 256, 140, 70, var_0, "MOD_EXPLOSIVE" );
    playfx( scripts\engine\utility::getfx( "little_bird_explode" ), var_1, anglestoforward( self.angles ), anglestoup( self.angles ) );
    playsoundatpos( var_1, "veh_chopper_support_crash" );
    earthquake( 0.4, 800, var_1, 0.7 );
    playrumbleonposition( "grenade_rumble", var_1 );
    physicsexplosionsphere( var_1, 500, 200, 1 );
    self notify( "explode" );
    wait 0.35;
    level thread scripts\mp\gametypes\br.gsc::_id_12BEE( "br_extract_heli_shot_down", self.owner, self.team );
    playerplunderdrop();
}

playerplunderdrop()
{
    playerplaydepositanim();
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

playerplunderbankdepositcallback( var_0 )
{
    self endon( "explode" );
    self notify( "heli_crashing" );
    self setvehgoalpos( self.origin + ( 0, 0, 100 ), 1 );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.5 );
    self setyawspeed( var_0, var_0, var_0 );
}

callback_vehicledamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12 )
{
    if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_1.owner ) )
            var_1 = var_1.owner;
    }

    if ( istrue( level.juggernaut_death_test ) )
        return;

    if ( ( var_1 == self || isdefined( var_1.pers ) && var_1.pers["team"] == self.team && !level.friendlyfire && level.teambased ) && var_1 != self.owner )
        return;

    if ( self.health <= 0 )
        return;

    var_2 = scripts\mp\utility\killstreak::getmodifiedantikillstreakdamage( var_1, var_5, var_4, var_2, self.maxhealth, 3, 4, 5 );
    scripts\mp\killstreaks\killstreaks::killstreakhit( var_1, var_5, self, var_4, var_2 );
    var_1 scripts\mp\damagefeedback::updatedamagefeedback( "" );

    if ( self.health - var_2 <= 900 && ( !isdefined( self.smoking ) || !self.smoking ) )
        self.smoking = 1;

    self vehicle_finishdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );
}

playerpulloutofgulagwin( var_0 )
{
    if ( istrue( self._id_12EE0 ) || istrue( self.leaving ) )
        return;

    self endon( "death" );
    self notify( "try_to_leave" );
    self._id_12EE0 = 1;

    if ( !istrue( level.gameended ) && !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( "plunder_extract_chopper_leave", self.team, 1 );

    var_1 = self.site;

    if ( isdefined( var_1 ) )
    {
        _id_11AB4( var_1 );
        playerpackdataintoomnvar( var_1 );

        if ( isdefined( var_1.heli ) && var_1.heli == self )
        {
            var_1.heli = undefined;
            var_1.team = undefined;
            var_1 notify( "heli_left" );
        }

        var_1 thread playerhumanconcusspushcleanup( self.site.type );
        self.site = undefined;
    }

    self._id_11D2E = 1;
    self waittill( "ready_to_leave" );
    self notify( "leaving" );
    self.leaving = 1;
    self._id_12EE0 = undefined;
    var_2 = getanimlength( level.scr_anim[self.animname]["heli_out"] );
    self.scenenode thread scripts\common\anim::anim_single_solo( self, "heli_out" );
    thread scripts\common\anim::anim_single_solo( self.rope, "rope_out", "origin_animate_jnt" );
    thread scripts\common\anim::anim_single_solo( self.crate, "bag_out", "origin_animate_jnt" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_2 );
    self stoploopsound();
    self notify( "heli_gone" );
    playerplunderdrop();
}

playerhumanconcusspushcleanup( var_0 )
{
    var_1 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), "inuseCurrent", "inuse" );
    self setscriptablepartstate( var_0, var_1 );
    wait 6;

    if ( isdefined( self ) )
    {
        var_1 = scripts\engine\utility::ter_op( istrue( level._id_1254E ) && !istrue( level._id_12549 ), self.allowed_objectives, self.allowobjectiveuseaftermatchstart );
        self setscriptablepartstate( var_0, var_1 );
    }
}

helidescend()
{
    self endon( "death" );
    var_0 = getanimlength( level.scr_anim[self.animname]["heli_in"] );
    self.scenenode thread scripts\common\anim::anim_single_solo( self, "heli_in" );
    thread scripts\common\anim::anim_single_solo( self.rope, "rope_in", "origin_animate_jnt" );
    thread scripts\common\anim::anim_single_solo( self.crate, "bag_in", "origin_animate_jnt" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    thread players_in_aggro();
    thread players_in_laststand();
    thread players_in_correct_volume();
}

players_in_aggro()
{
    self endon( "death" );
    self.scenenode endon( "death" );
    var_0 = getanimlength( level.scr_anim[self.animname]["heli_loop"] );

    for (;;)
    {
        self.scenenode thread scripts\common\anim::anim_single_solo( self, "heli_loop" );
        wait( var_0 );

        if ( istrue( self._id_11D2E ) && !istrue( self._id_11B84 ) )
        {
            self notify( "ready_to_leave" );
            break;
        }
    }
}

players_in_laststand()
{
    self endon( "death" );
    var_0 = getanimlength( level.scr_anim[self.animname]["rope_loop"] );

    for (;;)
    {
        thread scripts\common\anim::anim_single_solo( self.rope, "rope_loop", "origin_animate_jnt" );
        wait( var_0 );

        if ( istrue( self._id_11D2E ) )
            break;
    }
}

players_in_correct_volume()
{
    self endon( "death" );
    var_0 = getanimlength( level.scr_anim[self.animname]["bag_loop"] );

    for (;;)
    {
        thread scripts\common\anim::anim_single_solo( self.crate, "bag_loop", "origin_animate_jnt" );
        wait( var_0 );

        if ( istrue( self._id_11D2E ) )
            break;
    }
}

isattachmentvariantlocked()
{
    return isalive( self ) && ( scripts\common\vehicle::isvehicle() || isdefined( self.classname ) && self.classname == "script_vehicle" );
}

playerplundereventcallbacks()
{
    self endon( "leaving" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "touch", var_0 );

        if ( isdefined( var_0 ) && var_0 isattachmentvariantlocked() )
            var_0 dodamage( var_0.health, self.origin, var_0, var_0, "MOD_CRUSH" );
    }
}

playerplundereventomnvars()
{
    self endon( "leaving" );
    self endon( "death" );
    var_0 = 70;
    var_1 = -80;
    var_2 = 150;
    var_3 = 25;
    var_4 = -100;

    for (;;)
    {
        var_5 = getentarrayinradius( "script_vehicle", "classname", self.origin, getdvarfloat( "test_radius", 400 ) );

        if ( var_5.size <= 1 )
        {
            wait 0.5;
            continue;
        }

        var_6 = scripts\engine\trace::create_vehicle_contents();
        var_7 = anglestoforward( self.angles );
        var_8 = self.origin + var_7 * getdvarfloat( "test_f", var_2 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_m", var_3 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_b", var_4 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        waitframe();
    }
}

tracegroundheight( var_0 )
{
    var_1 = 800;
    var_2 = tracegroundpoint( var_0 );
    var_3 = var_2 + var_1;
    return var_3;
}

tracegroundpoint( var_0 )
{
    self endon( "death" );
    self endon( "leaving" );
    var_1 = -99999;
    var_2 = ( var_0[0], var_0[1], var_1 );
    var_3 = [ self ];
    var_4 = scripts\engine\trace::create_contents( 0, 1, 0, 1, 1, 0, 1, 1, 0 );
    var_5 = scripts\engine\trace::sphere_trace( var_0, var_2, 100, var_3, var_4, 1 );
    var_6 = var_5["position"][2];
    return var_6;
}

heliwatchgameendleave()
{
    self endon( "death" );
    self endon( "try_to_leave" );
    level waittill( "game_ended" );
    thread playerpulloutofgulagwin( 0 );
}

playerplunderbankdeposit( var_0, var_1 )
{
    _id_11AB7( var_0 );
}

playerpowerscleanuphud( var_0 )
{
    if ( isdefined( var_0.heli ) )
        var_0.heli thread playerpulloutofgulagwin( 1 );
}

playerpackdataintogulagomnvar( var_0 )
{

}

plunderlivelobby()
{
    thread autopickupplunder();
}

inplunderlivelobby()
{
    return istrue( level.br_plunder_enabled ) && istrue( level.br_plunder_lobby ) && !scripts\mp\flags::gameflag( "prematch_done" );
}

autopickupplunder()
{
    var_0 = 0.1;
    var_1 = 25;
    var_2 = var_1 * var_1;

    while ( inplunderlivelobby() )
    {
        for ( var_3 = 0; var_3 < level.br_plunder_ents.size; var_3++ )
        {
            var_4 = level.br_plunder_ents[var_3];

            if ( !isdefined( var_4 ) )
                continue;

            var_5 = var_4.origin;

            for ( var_6 = 0; var_6 < level.players.size; var_6++ )
            {
                var_7 = level.players[var_6];

                if ( !isalive( var_7 ) )
                    continue;

                var_8 = distancesquared( var_7.origin, var_5 );

                if ( var_8 < var_2 )
                {
                    var_7 scripts\mp\gametypes\br_pickups.gsc::brpickupsusecallback( var_4, var_7 );
                    break;
                }
            }
        }

        wait( var_0 );
    }
}

playerdelayautobankplunder()
{
    self notify( "playerDelayAutoBankPlunder" );
    self endon( "playerDelayAutoBankPlunder" );
    self endon( "death" );
    level endon( "prematch_done" );
    level endon( "game_ended" );
    wait 2;
    _id_11951( self.plundercount );
}

playerplunderlivelobbydropondeath( var_0 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    if ( inplunderlivelobby() )
    {
        var_1 = var_0 == "MOD_MELEE";
        var_2 = 1;

        if ( var_1 && isdefined( self.plundercount ) && self.plundercount > 1 )
        {
            var_2 = self.plundercount;
            playersetplundercount( 0 );
        }

        if ( var_2 <= 0 )
            return;

        if ( level.br_plunder_ents.size > 0 )
            level.br_plunder_ents = scripts\engine\utility::array_removeundefined( level.br_plunder_ents );

        var_3 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
        return init_reach_pipe_room( var_2, var_3 );
    }
}

relic_mythic_do_pain()
{
    foreach ( var_1 in level.teamnamelist )
    {
        level.teamdata[var_1]["plunderTeamTotal"] = 0;
        level.teamdata[var_1]["plunderInDeposit"] = 0;
        level.teamdata[var_1]["plunderBanked"] = 0;
    }

    if ( getdvar( "scr_br_gametype", "" ) == "risk" )
    {
        foreach ( var_1 in level.teamnamelist )
        {
            level.teamdata[var_1]["tokensTeamTotal"] = 0;
            level.teamdata[var_1]["tokensInDeposit"] = 0;
            level.teamdata[var_1]["tokensBanked"] = 0;
        }
    }
}

obj_room_fire_02( var_0 )
{
    var_1 = level.br_plunder.names[0];

    for ( var_2 = level.br_plunder._id_11C4B.size - 1; var_2 > 0; var_2-- )
    {
        if ( var_0 >= level.br_plunder._id_11C4B[var_2] )
        {
            var_1 = level.br_plunder.names[var_2];
            break;
        }
    }

    return var_1;
}

_id_11A7E( var_0, var_1 )
{
    if ( var_1 == 0 )
        return;

    var_2 = obj_room_fire_02( var_1 );
    var_3 = scripts\mp\gametypes\br_pickups.gsc::getcashsoundaliasforplayer( var_0, var_2 );
    var_0 playsoundtoplayer( var_3, self );
}

_id_11BAA()
{
    foreach ( var_7, var_1 in level.br_plunder.names )
    {
        var_2 = getdvarint( "scr_plunderPileOverride_" + var_7, -1 );

        if ( var_2 > -1 )
        {
            level.br_plunder._id_11C4B[var_7] = var_2;
            level.br_pickups.counts[var_1] = var_2;
            var_3 = getentitylessscriptablearrayinradius( var_1 );

            foreach ( var_5 in var_3 )
                var_5.count = var_2;
        }
    }
}

_id_11BA9( var_0 )
{
    foreach ( var_7, var_2 in level.br_plunder.names )
    {
        level.br_plunder._id_11C4B[var_7] = int( float( level.br_plunder._id_11C4B[var_7] ) * var_0 );
        level.br_pickups.counts[var_2] = level.br_plunder._id_11C4B[var_7];
        var_3 = getentitylessscriptablearrayinradius( var_2 );

        foreach ( var_5 in var_3 )
            var_5.count = level.br_plunder._id_11C4B[var_7];

        waitframe();
    }
}

getnumbersspawnpoint_late()
{
    var_0 = 0;

    foreach ( var_4, var_2 in level.br_plunder.names )
    {
        var_3 = getentitylessscriptablearrayinradius( var_2 );
        var_0 = var_0 + var_3.size * level.br_pickups.counts[var_2];
    }

    var_0 = var_0 * 100;
    level._id_12CEA = var_0;
}

_id_11AA8()
{
    level._id_11AE1 = spawnstruct();
    level._id_11AE1.data = [];
    level._id_11AE1.instances = [];
    level._id_11AE1.uniqueinstanceid = 0;
    level._id_11AE1._id_12BCF = [];
    level._id_11AE1._id_12BCC = [];
    level._id_11AE1._id_12BCD = [];

    for ( var_0 = 1; var_0 <= 4; var_0++ )
    {
        level._id_11AE1._id_12BCC[var_0] = "ui_br_plunder_repo_ent_" + var_0;
        level._id_11AE1._id_12BCD[var_0] = "ui_br_plunder_repo_info_" + var_0;
    }

    scripts\common\interactive::interactive_addusedcallback( ::_id_11ABB, "plunderRepository" );
    scripts\engine\scriptable::scriptable_addusedcallback( ::_id_11ABD );
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::_id_11AAF );
    level._id_11AEE = getdvarint( "scr_br_plunderUseDisabledWhenEmpty", 0 ) > 0;
}

_id_11AA6( var_0, var_1, var_2 )
{
    var_3 = level._id_11AE1;
    var_4 = var_3.data[var_0];

    if ( !isdefined( var_4 ) )
    {
        if ( istrue( var_1 ) )
        {
            var_4 = spawnstruct();
            var_3.data[var_0] = var_4;
            var_4.usetime = 0.75;
            var_4._id_1310B = 2;
            var_4._id_13109 = 250;
            var_4._id_12BF3 = 1;
            var_4._id_12BCE = 0;
            var_4._id_1310E = "MP/CANNOT_DEPOSIT_LS";
            var_4._id_13110 = "MP/CANNOT_DEPOSIT_VEHICLE";
            var_4._id_1310C = "MP/PLACEHOLDER_CANNOT_DEPOSIT_FULL";
            var_4._id_1310F = "MP/CANNOT_DEPOSIT_NO_CASH";
            var_4._id_1310D = "MP/PLACEHOLDER_CANNOT_DEPOSIT_LEAVING";
            var_4._id_121BE = undefined;
            var_4._id_121BF = undefined;
            var_4._id_121B8 = undefined;
            var_4.jugg_go_to_node_callback = 60;
            var_4.juggernaut_shouldexecute = 0;
            var_4.jugg_health_debug = "MP/PLACEHOLDER_LEAVING_IN_N";
            var_4.dmzwincost = 2000;
            var_4._id_1312A = undefined;
            var_4._id_130FC = ::_id_11AB9;
            var_4.gas_badplace = undefined;
            var_4.jugg_get_priority_player = undefined;
            var_4.jugg_source = undefined;
        }
        else
        {

        }
    }

    return var_4;
}

_id_11AB0( var_0, var_1 )
{
    var_2 = level._id_11AE1;
    var_3 = _id_11AA6( var_1 );
    var_0._id_11AE2 = var_1;
    var_0.startorigin = var_0.origin;
    var_0.plunder = [];
    var_0._id_11AEA = 0;
    var_0._id_11AD7 = level._id_11AE1.uniqueinstanceid;
    level._id_11AE1.uniqueinstanceid++;
    var_0._id_119EC = [];
    var_2.instances[var_0._id_11AD7] = var_0;
    _id_11A9A( var_0 );

    if ( !isdefined( var_3._id_121BE ) )
        var_0 scripts\common\interactive::interactive_addusedcallbacktoentity( "plunderRepository" );

    _id_11A9C( var_0, 1 );
}

_id_11AA0( var_0 )
{
    var_1 = level._id_11AE1;
    var_0 notify( "plunder_instance_deregistered" );
    _id_11A9C( var_0, 0, 1 );
    var_0._id_11AE2 = undefined;
    var_0._id_11AED = undefined;
    var_0._id_11AC8 = undefined;
    var_0.startorigin = undefined;
    var_0.plunder = undefined;
    var_0._id_11AEA = undefined;
    _id_11AB4( var_0 );
    var_0._id_119EC = undefined;

    if ( isdefined( var_0._id_11AD7 ) )
        var_1.instances[var_0._id_11AD7] = undefined;

    _id_11AB1( var_0 );
    var_0 scripts\common\interactive::interactive_removeusedcallbackfromentity();
}

_id_11AB8( var_0 )
{
    var_1 = level._id_11AE1;

    if ( !isdefined( var_1 ) )
        return 0;

    var_2 = undefined;

    if ( isdefined( var_0._id_11AD7 ) )
        var_2 = var_1.instances[var_0._id_11AD7];

    return isdefined( var_2 ) && var_2 == var_0;
}

_id_11A9C( var_0, var_1, var_2 )
{
    var_0 notify( "plunder_allowRepositoryUse" );
    var_3 = undefined;

    if ( isdefined( var_0._id_11AE2 ) )
        var_3 = _id_11AA6( var_0._id_11AE2, undefined, var_2 );

    if ( isdefined( var_3 ) )
    {
        if ( isdefined( var_3._id_121BE ) )
        {
            if ( var_1 )
                var_0 setscriptablepartstate( var_3._id_121BE, var_3._id_121BF, 0 );
            else
                var_0 setscriptablepartstate( var_3._id_121BE, var_3._id_121B8, 0 );
        }
        else if ( var_1 )
            var_0 makeusable();
        else
            var_0 makeunusable();

        var_4 = istrue( var_0._id_11AED );
        var_0._id_11AED = scripts\engine\utility::ter_op( var_1, var_1, undefined );

        if ( !var_4 )
        {
            if ( var_1 )
            {
                foreach ( var_6 in level.players )
                    _id_11A9D( var_0, var_6, _id_11AAD( var_0, var_6 ) );
            }
        }
        else if ( !var_1 )
            var_0 notify( "repository_use_disabled" );
    }
}

_id_11A9D( var_0, var_1, var_2, var_3 )
{
    var_4 = undefined;

    if ( isdefined( var_0._id_11AE2 ) )
        var_4 = _id_11AA6( var_0._id_11AE2, undefined, var_3 );

    if ( isdefined( var_4 ) )
    {
        if ( isdefined( var_4._id_121BE ) )
        {
            if ( var_2 )
                var_0 enablescriptablepartplayeruse( var_4._id_121BE, var_1 );
            else
                var_0 disablescriptablepartplayeruse( var_4._id_121BE, var_1 );
        }
        else if ( var_2 )
            var_0 enableplayeruse( var_1 );
        else
            var_0 disableplayeruse( var_1 );
    }

    if ( !var_2 )
        var_0 notify( "repository_use_disabled_for_" + var_1 getentitynumber() );
}

_id_11A9B( var_0, var_1, var_2 )
{
    var_3 = level._id_11AE1;

    foreach ( var_5 in var_3.instances )
    {
        if ( isdefined( var_5 ) )
            _id_11A9D( var_5, var_0, var_1, 1 );
    }
}

_id_11AAD( var_0, var_1 )
{
    if ( var_1 scripts\cp_mp\utility\player_utility::isinvehicle() )
        return 0;

    if ( scripts\mp\utility\player::round_spawn_enemies( var_1 ) )
        return 0;

    var_2 = _id_11AA6( var_0._id_11AE2 );
    var_3 = istrue( var_2._id_12BF3 ) || istrue( var_0.little_bird_mg_init );

    if ( var_3 && isdefined( var_0.team ) && var_1.team != var_0.team )
        return 0;

    return 1;
}

_id_11AAE( var_0, var_1, var_2 )
{
    var_3 = _id_11AA6( var_0._id_11AE2 );

    if ( !istrue( var_0._id_11AED ) )
        return 0;

    if ( var_3._id_1310B == 2 || var_3._id_1310B == 3 )
    {
        if ( !isdefined( var_1.plundercount ) || var_1.plundercount <= 0 && ( !isdefined( var_1.juggernaut_dmg_modifier ) || isdefined( var_1.juggernaut_getavoidanceposition ) && isdefined( var_0.index ) && var_1.juggernaut_getavoidanceposition != var_0.index ) )
        {
            if ( istrue( var_2 ) && isdefined( var_3._id_1310F ) && var_3._id_1310F != "" )
            {
                var_1 playlocalsound( "br_plunder_atm_cancel" );
                var_1 scripts\mp\hud_message::showerrormessage( var_3._id_1310F );
            }

            return 0;
        }
        else if ( istrue( var_0._id_11AC8 ) )
        {
            if ( istrue( var_2 ) && isdefined( var_3._id_1310C ) && var_3._id_1310C != "" )
            {
                var_1 playlocalsound( "br_plunder_atm_cancel" );
                var_1 scripts\mp\hud_message::showerrormessage( var_3._id_1310C );
            }

            return 0;
        }
    }

    if ( var_1 scripts\cp_mp\utility\player_utility::isinvehicle() )
    {
        if ( istrue( var_2 ) && isdefined( var_3._id_13110 ) && var_3._id_13110 != "" )
        {
            var_1 playlocalsound( "br_plunder_atm_cancel" );
            var_1 scripts\mp\hud_message::showerrormessage( var_3._id_13110 );
        }

        return 0;
    }

    if ( scripts\mp\utility\player::round_spawn_enemies( var_1 ) )
    {
        if ( istrue( var_2 ) && isdefined( var_3._id_1310E ) && var_3._id_1310E != "" )
        {
            var_1 playlocalsound( "br_plunder_atm_cancel" );
            var_1 scripts\mp\hud_message::showerrormessage( var_3._id_1310E );
        }

        return 0;
    }

    if ( var_1 isparachuting() || var_1 isskydiving() )
        return 0;

    if ( var_1 isinexecutionattack() || var_1 isinexecutionvictim() )
        return 0;

    if ( isdefined( var_3._id_1312A ) )
        return [[ var_3._id_1312A ]]( var_0, var_1, var_2 );

    return 1;
}

_id_11ABD( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_5 = var_0.entity;

    if ( !isdefined( var_5 ) || isdefined( var_5.little_bird_mg_creategunnerturret ) )
        var_5 = var_0;

    if ( !_id_11AB8( var_5 ) )
        return;

    var_6 = _id_11AA6( var_5._id_11AE2 );

    if ( !isdefined( var_6._id_121BE ) )
        return;

    if ( var_1 != var_6._id_121BE )
        return;

    if ( var_2 != var_6._id_121BF )
        return;

    if ( !_id_11AAE( var_5, var_3, 1 ) )
        return;

    thread _id_11ABC( var_5, var_3 );
}

_id_11ABB( var_0, var_1 )
{
    if ( !_id_11AB8( var_0 ) )
        return;

    if ( !_id_11AAE( var_0, var_1, 1 ) )
        return;

    thread _id_11ABC( var_0, var_1 );
}

_id_11ABC( var_0, var_1 )
{
    var_2 = var_1 getentitynumber();
    var_3 = gettime();
    _id_11AB5( var_1, 1 );
    _id_11A9D( var_0, var_1, 0 );
    _id_11ABF( var_0, var_1 );

    if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_0 ) )
            _id_11A9D( var_0, var_1, 1 );

        if ( var_1 scripts\cp_mp\utility\player_utility::_isalive() )
            _id_11AB5( var_1, 0 );

        var_1._id_11AE3 = undefined;

        if ( isplayer( var_1 ) )
        {
            var_4 = 0;
            var_5 = undefined;

            if ( !var_4 && var_1 scripts\cp_mp\utility\player_utility::_isalive() && !var_1 scripts\cp_mp\utility\player_utility::isinvehicle() && !scripts\mp\utility\player::round_spawn_enemies( var_1 ) )
            {
                if ( istrue( var_0.jugg_modifyherodroptoplayerdamage ) )
                    var_5 = 2;
                else if ( isdefined( var_1._id_11AE4 ) && isdefined( var_1._id_11AE4._id_1310A ) && var_1._id_11AE4._id_1310A - gettime() <= 1.5 )
                    var_5 = 1.5;
            }

            thread _id_11A9F( var_1, var_5 );
        }
    }

    if ( isdefined( var_0 ) && isdefined( var_0._id_119EC ) )
        var_0._id_119EC[var_2] = undefined;

    if ( isdefined( var_1 ) && isplayer( var_1 ) )
        _id_11AC4( var_0, var_1 );
}

_id_11ABF( var_0, var_1 )
{
    var_1 endon( "death_or_disconnect" );
    var_1 endon( "last_stand_start" );
    var_0 endon( "death" );
    var_0 endon( "repository_use_disabled" );
    var_0 endon( "repository_use_disabled_for_" + var_1 getentitynumber() );
    level endon( "game_ended" );
    var_2 = _id_11AA6( var_0._id_11AE2 );
    var_0._id_119EC[var_1 getentitynumber()] = var_1;
    _id_11AC5( var_1, var_0._id_11AD7, var_2.type, 1, var_0._id_11AC9, var_0._id_11AEA );
    _id_11AC0( var_1 );
    _id_11AC4( var_0, var_1 );
    var_3 = 0;
    var_4 = 0;
    var_5 = var_2.usetime;

    for ( var_6 = 0; var_1 usebuttonpressed(); var_4 = var_4 + 0.05 )
    {
        var_7 = undefined;

        if ( var_3 )
        {
            var_3 = 0;
            var_7 = 0;
        }
        else
            var_7 = 1;

        if ( !_id_11AAE( var_0, var_1, var_7 ) )
            return;

        if ( var_4 >= var_5 )
        {
            var_8 = int( min( var_1.plundercount, var_2._id_13109 ) );

            if ( isdefined( var_2._id_130FC ) )
                thread [[ var_2._id_130FC ]]( var_0, var_1, var_8 );
            else
            {

            }

            var_6 = var_4;
            var_5 = var_4 + var_2.usetime;

            if ( isdefined( var_1._id_11AE4 ) )
                var_1._id_11AE4._id_1310A = gettime();

            var_3 = 1;
        }

        wait 0.05;
    }
}

_id_11AB9( var_0, var_1, var_2 )
{
    var_3 = _id_11AA6( var_0._id_11AE2 );
    var_4 = var_1 _id_11958( var_2, var_3._id_1310B, var_0 );

    if ( isdefined( var_4 ) && isdefined( var_4.amount ) )
        var_2 = var_4.amount;

    if ( var_2 > 0 )
    {
        _id_11AC5( var_1, undefined, undefined, undefined, undefined, var_0._id_11AEA, var_2 );
        _id_11AC0( var_1 );
    }
}

_id_11AB5( var_0, var_1 )
{
    var_2 = [ "movement", "usability", "weapon_switch", "equipment", "supers", "killstreaks", "fire", "melee", "reload", "ads", "mantle", "mount_top", "mount_side", "execution_attack", "vehicle_use", "cough_gesture" ];

    if ( istrue( var_0._id_11AE3 ) && var_1 )
        return;

    if ( !istrue( var_0._id_11AE3 ) && !var_1 )
        return;

    var_0 scripts\common\utility::allow_array( var_2, !var_1 );

    if ( var_1 )
        var_0._id_11AE3 = 1;
    else
        var_0._id_11AE3 = undefined;
}

_id_11ABE( var_0, var_1 )
{
    var_0 endon( "death" );
    var_0 endon( "plunder_instance_deregistered" );
    var_0 notify( "plunder_repositoryWatchCountdown" );
    var_0 endon( "plunder_repositoryWatchCountdown" );
    level endon( "game_ended" );
    var_2 = _id_11AA6( var_0._id_11AE2 );

    if ( !isdefined( var_0._id_11ACB ) )
    {
        var_0._id_11ACB = [];
        var_0._id_11ACC = 0;
        var_3 = scripts\engine\utility::ter_op( isdefined( var_2.juggernaut_shouldexecute ), var_2.juggernaut_shouldexecute, 0 );
        var_4 = scripts\engine\utility::ter_op( isdefined( var_2.jugg_go_to_node_callback ), var_2.jugg_go_to_node_callback, 0 );
        var_0._id_11AE5 = gettime() + var_3 * 1000;
        var_0._id_11AC9 = gettime() + ( var_3 + var_4 ) * 1000;
    }

    if ( isdefined( var_1 ) )
    {
        if ( !isarray( var_1 ) )
            var_1 = [ var_1 ];

        foreach ( var_6 in var_1 )
        {
            if ( isdefined( var_6 ) && isplayer( var_6 ) )
                var_0._id_11ACB[var_6 getentitynumber()] = var_6;
        }
    }

    while ( gettime() <= var_0._id_11AC9 )
    {
        if ( gettime() - var_0._id_11ACC >= 1000 )
        {
            if ( gettime() > var_0._id_11AE5 )
            {
                var_8 = int( max( 0, ( var_0._id_11AC9 - gettime() ) / 1000 ) );

                foreach ( var_6 in var_0._id_11ACB )
                {
                    if ( isdefined( var_6 ) )
                        thread _id_11ABA( var_6, var_0, var_8 );
                }
            }

            var_0._id_11ACC = gettime();
        }

        wait 0.05;
    }

    thread _id_11AB6( var_0, 1 );
}

_id_11AB6( var_0, var_1 )
{
    _id_11AB4( var_0 );
    var_2 = _id_11AA6( var_0._id_11AE2 );

    if ( isdefined( var_2.gas_badplace ) )
        [[ var_2.gas_badplace ]]( var_0, var_1 );
}

_id_11AB4( var_0 )
{
    var_0 notify( "plunder_repositoryWatchCountdown" );
    var_0._id_11ACB = undefined;
    var_0._id_11AC9 = undefined;
    var_0._id_11ACC = undefined;
}

_id_11ABA( var_0, var_1, var_2 )
{
    var_0 endon( "disconnect" );
    var_0 notify( "plunder_repositorySendCountdownMessage" );
    var_0 endon( "plunder_repositorySendCountdownMessage" );
    level endon( "game_ended" );

    if ( !isdefined( var_0._id_11ACA ) )
        var_0._id_11ACA = [];

    var_3 = _id_11AA6( var_1._id_11AE2 );

    if ( isdefined( var_3.jugg_health_debug ) )
    {
        var_4 = spawnstruct();
        var_4.origin = var_1.origin;
        var_4.msg = var_3.jugg_health_debug;
        var_4.value = var_2;
        var_0._id_11ACA[var_0._id_11ACA.size] = var_4;
    }

    waittillframeend;

    if ( !var_0 scripts\mp\gametypes\br_public.gsc::isplayeringulag() && var_0 scripts\cp_mp\utility\player_utility::_isalive() )
    {
        var_5 = undefined;
        var_6 = 2147483647;

        foreach ( var_4 in var_0._id_11ACA )
        {
            var_8 = distance2dsquared( var_0.origin, var_4.origin );

            if ( var_8 < var_6 )
            {
                var_6 = var_8;
                var_5 = var_4;
            }
        }
    }

    var_0._id_11ACA = undefined;
}

_id_11AB7( var_0 )
{
    var_0.jugg_modifyherodroptoplayerdamage = 1;
    _id_11AB4( var_0 );
    _id_11A9C( var_0, 0 );
    _id_11AB1( var_0 );
    var_1 = _id_11AA6( var_0._id_11AE2 );

    if ( isdefined( var_1.jugg_get_priority_player ) )
        [[ var_1.jugg_get_priority_player ]]( var_0 );
}

_id_11AB3( var_0 )
{
    var_0._id_11AC8 = 1;
    _id_11A9C( var_0, 0 );
    var_1 = _id_11AA6( var_0._id_11AE2 );

    if ( isdefined( var_1.brcirclecoughnexttime ) )
        [[ var_1.brcirclecoughnexttime ]]( var_0 );
}

_id_11AAF()
{
    _id_11A9B( self, 1, 1 );
}

_id_11AC5( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( isdefined( var_3 ) && !var_3 )
    {
        _id_11A9F( var_0 );
        return;
    }

    var_7 = var_0._id_11AE4;

    if ( !isdefined( var_7 ) )
    {
        var_7 = spawnstruct();
        var_0._id_11AE4 = var_7;
        var_7._id_11AD7 = var_1;
        var_7.type = var_2;
        var_7.visible = 0;
        var_7.endtime = undefined;
        var_7._id_11AEA = undefined;
        var_7._id_11AD1 = undefined;
        var_7.timestamp = undefined;
    }
    else if ( isdefined( var_1 ) && isdefined( var_7._id_11AD7 ) && var_1 != var_7._id_11AD7 )
        return;

    var_8 = 0;

    if ( istrue( var_3 ) )
    {
        var_8 = !var_7.visible;
        var_7.visible = 1;
    }

    if ( isdefined( var_4 ) )
        var_7.endtime = var_4;

    if ( isdefined( var_5 ) )
        var_7._id_11AEA = var_5;

    if ( isdefined( var_6 ) )
    {
        var_7._id_11AD1 = var_6;
        var_9 = level._id_11AE1.instances[var_7._id_11AD7];

        foreach ( var_11 in var_9._id_119EC )
        {
            if ( var_11 != var_0 )
            {
                _id_11AC5( var_0, undefined, undefined, undefined, undefined, var_5, undefined );
                _id_11AC0( var_0 );
            }
        }

        if ( isdefined( var_9.team ) )
            _id_11AC4( var_9, scripts\mp\utility\teams::getfriendlyplayers( var_9.team ) );
    }
    else if ( isdefined( var_7.timestamp ) && var_7.timestamp < gettime() )
        var_7._id_11AD1 = undefined;

    var_7.timestamp = gettime();
}

_id_11A9F( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_0 endon( "plunder_sendRepositoryWidgetOmnvar" );
    var_0._id_11AE4 = undefined;

    if ( isdefined( var_1 ) && var_1 > 0 )
        wait( var_1 );

    var_0 setclientomnvar( "ui_br_plunder_repository", 0 );
}

_id_11AC0( var_0 )
{
    var_0 notify( "plunder_sendRepositoryWidgetOmnvar" );
    var_1 = var_0._id_11AE4;

    if ( !isdefined( var_1 ) )
    {
        var_0 setclientomnvar( "ui_br_plunder_repository", 0 );
        return;
    }

    var_2 = 0;
    var_3 = 0;
    var_4 = var_1.visible;
    var_5 = 1;

    if ( isdefined( var_4 ) )
        var_2 = var_2 | int( var_4 ) << var_3;

    var_3 = var_3 + var_5;
    var_4 = var_1.type;
    var_5 = 1;

    if ( isdefined( var_4 ) )
        var_2 = var_2 | int( var_4 ) << var_3;

    var_3 = var_3 + var_5;
    var_4 = var_1.endtime;
    var_5 = 14;

    if ( isdefined( var_4 ) )
    {
        var_4 = int( var_4 / 250 );
        var_4 = var_4 & 16383;
        var_2 = var_2 | int( var_4 ) << var_3;
    }

    var_3 = var_3 + var_5;

    if ( var_1.type == 0 )
    {
        var_4 = var_1._id_11AEA;
        var_5 = 9;

        if ( isdefined( var_4 ) )
        {
            var_4 = int( var_4 / 5 );
            var_4 = var_4 & 511;
            var_2 = var_2 | int( var_4 ) << var_3;
        }

        var_3 = var_3 + var_5;
        var_4 = var_1._id_11AD1;
        var_5 = 6;

        if ( isdefined( var_4 ) )
        {
            var_4 = int( var_4 / 5 );
            var_4 = var_4 & 63;
            var_2 = var_2 | int( var_4 ) << var_3;
        }
    }
    else
    {
        var_4 = var_1._id_11AD1;
        var_5 = 15;

        if ( isdefined( var_4 ) )
        {
            var_4 = int( var_4 / 5 );
            var_4 = var_4 & 32767;
            var_2 = var_2 | int( var_4 ) << var_3;
        }
    }

    var_0 setclientomnvar( "ui_br_plunder_repository", var_2 );
}

_id_11A9A( var_0 )
{
    var_1 = level._id_11AE1;
    var_2 = _id_11AA6( var_0._id_11AE2 );

    if ( !istrue( var_2._id_12BCE ) )
        return;

    if ( !isdefined( var_1._id_12BCF[var_0.team] ) )
        var_1._id_12BCF[var_0.team] = [];

    var_3 = [];

    for ( var_4 = 1; var_4 <= 4; var_4++ )
        var_3[var_4] = var_4;

    foreach ( var_6 in var_1._id_12BCF[var_0.team] )
        var_3[var_6.boss_one_minion_watcher] = undefined;

    foreach ( var_9 in var_3 )
    {
        var_0.boss_one_minion_watcher = var_9;
        break;
    }

    if ( isdefined( var_0.boss_one_minion_watcher ) )
    {
        var_1._id_12BCF[var_0.team] = scripts\engine\utility::array_add( var_1._id_12BCF[var_0.team], var_0 );
        var_11 = var_1._id_12BCC[var_0.boss_one_minion_watcher];

        foreach ( var_13 in scripts\mp\utility\teams::getfriendlyplayers( var_0.team ) )
            var_13 setclientomnvar( var_11, var_0 getentitynumber() );
    }
    else
    {

    }
}

_id_11AB1( var_0 )
{
    var_1 = level._id_11AE1;
    var_2 = var_0.boss_one_minion_watcher;

    if ( !isdefined( var_2 ) )
        return;

    var_0.boss_one_minion_watcher = undefined;
    var_1._id_12BCF[var_0.team] = scripts\engine\utility::array_remove( var_1._id_12BCF[var_0.team], var_0 );

    if ( var_1._id_12BCF[var_0.team].size == 0 )
        var_1._id_12BCF[var_0.team] = undefined;

    var_3 = var_1._id_12BCC[var_2];
    var_4 = var_1._id_12BCD[var_2];

    foreach ( var_6 in scripts\mp\utility\teams::getfriendlyplayers( var_0.team ) )
    {
        var_6 setclientomnvar( var_3, -1 );
        var_6 setclientomnvar( var_4, 0 );
    }
}

_id_11AC4( var_0, var_1 )
{
    var_2 = level._id_11AE1;

    if ( !isdefined( var_0.boss_one_minion_watcher ) )
        return;

    if ( !isarray( var_1 ) )
        var_1 = [ var_1 ];

    if ( var_1.size == 0 )
        return;

    var_3 = 0;
    var_4 = 0;
    var_5 = 1;
    var_6 = 1;
    var_3 = var_3 + var_5;
    var_4 = var_4 + var_6;
    var_5 = var_0._id_11AC9;
    var_6 = 14;

    if ( isdefined( var_5 ) )
    {
        var_5 = var_5 / 250;
        var_5 = int( min( var_5, 16383 ) );
        var_3 = var_3 + ( var_5 << var_4 );
    }

    var_4 = var_4 + var_6;
    var_5 = var_0._id_11AEA;
    var_6 = 9;

    if ( isdefined( var_5 ) )
    {
        var_5 = var_5 / 5;
        var_5 = int( min( var_5, 511 ) );
        var_3 = var_3 + ( var_5 << var_4 );
    }

    var_7 = var_2._id_12BCD[var_0.boss_one_minion_watcher];

    foreach ( var_9 in var_1 )
    {
        if ( scripts\engine\utility::array_contains( var_0._id_119EC, var_9 ) )
        {
            var_9 setclientomnvar( var_7, var_3 & ~1 );
            continue;
        }

        var_9 setclientomnvar( var_7, var_3 );
    }
}
