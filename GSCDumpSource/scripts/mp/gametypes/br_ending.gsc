// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

claymore_load_spawning()
{
    if ( !suncascademult1( getdvar( "scr_br_gametype" ) ) )
        return;

    setdvarifuninitialized( "scr_br_ending_enabled", 1 );
    setdvarifuninitialized( "scr_br_exfil_5_chance", 0 );
    exitdriver();
}

disablespawningforplayer()
{
    if ( !getdvarint( "scr_br_ending_enabled" ) )
        return 0;

    if ( !suncascademult1( getdvar( "scr_br_gametype" ) ) )
        return 0;

    if ( istrue( level.clear_three_room_screens ) )
        return 0;

    return 1;
}

suncascademult1( var_0 )
{
    var_1 = 0;

    switch ( var_0 )
    {
        case "bodycount":
        case "zxp":
        case "brdov":
        case "truckwar":
        case "gxp":
        case "dbd":
        case "brz":
        case "rebirth":
        case "mini":
        case "jugg":
        case "":
            var_1 = 1;
            break;
    }

    return var_1;
}

waitforstuck( var_0, var_1 )
{
    if ( !disablespawningforplayer() )
        return;

    level notify( "stop_suspense_music" );
    var_0 = scripts\engine\utility::array_removeundefined( var_0 );
    var_0 = scripts\engine\utility::array_sort_with_func( var_0, ::forced_aitypes );
    level notify( "br_ending_start" );
    level.colorise_warnings = 1;
    var_2 = randomfloat( 1 ) < getdvarfloat( "scr_br_exfil_5_chance" );
    var_3 = get_battle_station_combat_action_default( var_0, var_1 );
    var_4 = "chopper";

    if ( var_2 )
    {
        setomnvarforallclients( "ui_br_bink_overlay_state", 0 );
        level thread isplayerusingtablet( 15, "ch2_s5_exfil_teaser_polina_bink" );
        var_4 = "exfil5";
    }

    var_3.istrialslevel = var_4;
    var_3 _id_122B8( var_4, var_1 );
    var_0 = undefined;
    level.claymore_crate_update_hint_logic_alt = var_3;
    intro_safehouse_edit_loadout( var_3 );
    var_5 = intro_safehouse_loot( var_3 );
    findavailableteam( var_3.origin, 1000 );
    filtervehiclespawnstructsfunc();
    var_3 scripts\common\anim::anim_first_frame_solo( var_3.disable_heli_lights, var_3.v_end_pos[0].anime );

    foreach ( var_7 in level.players )
    {
        var_7 cameradefault();
        var_7 cameralinkto( var_3.disable_heli_lights, "tag_player", 1, 1 );
    }

    foreach ( var_10 in var_3.v_end_pos )
    {
        if ( isdefined( var_10.startfunc ) )
            [[ var_10.startfunc ]]( var_10.van_initdamage );

        if ( isdefined( var_10.fx ) )
            playfx( scripts\engine\utility::getfx( var_10.fx ), var_10.loot_boxes, anglestoforward( var_10.loop_emp_spark_vfx ), anglestoup( var_10.loop_emp_spark_vfx ) );

        if ( var_10.players.size > 0 )
        {
            var_10.players = scripts\engine\utility::array_removeundefined( var_10.players );

            foreach ( var_7 in var_10.players )
            {
                var_7 dontinterpolate();

                if ( isdefined( var_7.shutdownattractionicontrigger ) )
                {
                    if ( !isplayer( var_7 ) )
                        var_7.shutdownattractionicontrigger thread scripts\common\anim::anim_single_solo( var_7.player_rig, var_10.anime, var_7.shutdowngulagforalivecount );
                    else
                        var_7.shutdownattractionicontrigger thread scripts\mp\anim::anim_player_solo( var_7, var_7.player_rig, var_10.anime, var_7.shutdowngulagforalivecount );

                    continue;
                }

                if ( !isplayer( var_7 ) )
                {
                    var_3 thread scripts\common\anim::anim_single_solo( var_7.player_rig, var_10.anime );
                    continue;
                }

                var_3 thread scripts\mp\anim::anim_player_solo( var_7, var_7.player_rig, var_10.anime );
            }

            if ( isdefined( var_3.watchweapondrop ) )
            {
                foreach ( var_14 in var_3.watchweapondrop )
                {
                    if ( isdefined( var_14.player ) )
                        continue;

                    if ( isdefined( var_14.shutdownattractionicontrigger ) )
                    {
                        var_14.shutdownattractionicontrigger thread scripts\common\anim::anim_single_solo( var_14, var_10.anime, var_14.shutdowngulagforalivecount );
                        continue;
                    }

                    var_3 thread scripts\common\anim::anim_single_solo( var_14, var_10.anime );
                }
            }
        }

        if ( var_10.ents.size > 0 )
        {
            foreach ( var_17 in var_10.ents )
                var_17 dontinterpolate();

            var_3 thread scripts\common\anim::anim_single( var_10.ents, var_10.anime );
        }

        var_3.disable_heli_lights dontinterpolate();
        var_3 scripts\common\anim::anim_single_solo( var_3.disable_heli_lights, var_10.anime );
        waitframe();
    }

    if ( var_2 )
    {
        var_20 = 5;
        playcinematicforall( "ch2_s5_exfil_teaser_polina_bink", 1, 1 );
        setomnvarforallclients( "ui_br_bink_overlay_state", 10 );
        wait( var_20 );
        isplayerinorgoingtogulag( var_3 );
        setomnvarforallclients( "ui_br_bink_overlay_state", 0 );
    }

    wait 1;

    foreach ( var_10 in var_3.v_end_pos )
    {
        foreach ( var_17 in var_10.ents )
        {
            if ( isdefined( var_17 ) )
            {
                if ( isdefined( var_17.linkedents ) )
                    scripts\engine\utility::array_delete( var_17.linkedents );

                var_17 delete();
            }
        }
    }

    boltdeleteonnote();

    foreach ( var_7 in level.players )
    {
        if ( isdefined( var_7 ) && isdefined( var_7.player_rig ) )
        {
            if ( isdefined( var_7.sessionstate ) && var_7.sessionstate == "spectator" )
                var_7 setspectatedefaults( var_3.origin, var_3.angles );
            else
                var_7 setorigin( var_3.origin );

            var_7.player_rig delete();
        }
    }

    var_3.disable_heli_lights delete();
}

forced_aitypes( var_0, var_1 )
{
    return var_0.pers["score"] > var_1.pers["score"];
}

_id_12C13()
{
    wait 25;

    foreach ( var_1 in level.players )
        var_1 setplayermusicstate( "" );
}

intro_safehouse_edit_loadout( var_0 )
{
    level.current_volume_enemy = 1;
    level notify( "brSpawnPlayersEnding" );

    foreach ( var_2 in level.players )
    {
        var_2 predictstreampos( var_0.origin );
        var_2 scripts\mp\utility\player::hidehudenable();
        var_2 setcinematicmotionoverride( "disabled" );
        var_2 setclientomnvar( "ui_br_squad_eliminated_active", 0 );

        if ( isdefined( var_2.sessionstate ) )
        {
            if ( var_2.sessionstate == "intermission" )
                var_2 scripts\mp\utility\player::updatesessionstate( "spectator" );

            if ( var_2.sessionstate == "spectator" )
            {
                var_2 setspectatedefaults( var_0.disable_heli_lights.origin, var_0.disable_heli_lights.angles );
                var_2 spawn( var_0.disable_heli_lights.origin, var_0.disable_heli_lights.angles );
                continue;
            }

            var_2 setorigin( var_0.origin + ( 0, 0, 100 ) );
        }
    }
}

intro_safehouse_loot( var_0 )
{
    var_1 = var_0.winners;
    var_2 = undefined;

    foreach ( var_4 in var_1 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        if ( isdefined( var_4.sessionstate ) && var_4.sessionstate == "playing" )
        {
            var_2 = var_4.origin;
            break;
        }
    }

    var_6 = [];
    var_7 = 0;

    foreach ( var_11, var_4 in var_1 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        if ( !isplayer( var_4 ) )
            continue;

        if ( isdefined( var_4.sessionstate ) && var_4.sessionstate != "playing" )
        {
            var_4.forcespawnorigin = var_2;
            var_4 scripts\mp\playerlogic::spawnplayer( 0 );
        }

        var_4 playershow( 1 );
        var_4 watch_for_players_entering_area_earlier();
        var_4 watch_for_ashes_achievement();
        var_4.plotarmor = 1;
        var_4.oobimmunity = 1;
        var_4.shutdownattractionicontrigger = undefined;
        var_4.shutdowngulagforalivecount = undefined;
        var_9 = var_4 scripts\mp\teams::lookupcurrentoperator( var_4.team );
        var_10 = scripts\mp\teams::getoperatorgender( var_9 );
        var_4._id_135D9 = var_7;
        var_7++;

        if ( !isdefined( var_4.animname ) || var_4.animname != var_4.completesecretstashquest )
            var_4.animname = var_4.completesecretstashquest;

        var_4 thread waterentitydamagewatcher();
        var_4 create_player_rig( var_4.animname, "viewhands_base_iw8", var_0 );
        level thread intro_ride( var_4 );
        var_6[var_6.size] = var_4.player_rig;
    }

    return var_6;
}

update_winning_players_omnvar( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_1 = -1;
    var_2 = 0;

    foreach ( var_6, var_4 in var_0 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        var_5 = 8 * var_2;
        var_1 = var_1 & ~( 255 << var_5 );
        var_1 = var_1 | var_4 getentitynumber() << var_5;
        var_2++;
    }

    setomnvarforallclients( "ui_br_winners", var_1 );
}

get_base_focus_fire_multipler( var_0 )
{
    var_1 = spawn( "script_model", self.origin );
    var_1 setmodel( "tag_origin" );
    var_1.risk_flagspawnminradius = 1;
    var_1.completesecretstashquest = "player0";
    var_1.origin = var_0.origin;
    var_1.angles = var_0.angles;
    var_1 create_player_rig( var_1.completesecretstashquest, "viewhands_base_iw8", var_0 );
    var_1 linkto( var_1.player_rig, "tag_player", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    level thread intro_ride( var_1, 1 );
    var_0.winners[0] = var_1;
}

watch_for_players_entering_area_earlier()
{
    if ( scripts\cp_mp\utility\player_utility::isinvehicle( 1 ) )
        scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_ejectalloccupants( self.vehicle );

    if ( istrue( self.usingascender ) )
        scripts\cp_mp\auto_ascender::br_pickupdenyweaponpickupap();

    if ( isdefined( self.remoteuav ) )
        self.remoteuav scripts\mp\killstreaks\remoteuav::remoteuav_leave();

    if ( isdefined( self.currentturret ) )
        scripts\cp_mp\killstreaks\manual_turret::manualturret_endplayeruse( self.currentturret );

    if ( isdefined( self.usingremote ) )
    {
        var_0 = vehicle_getarray();

        foreach ( var_2 in var_0 )
        {
            if ( isdefined( var_2.owner ) && var_2.owner == self )
            {
                if ( isdefined( var_2.helperdronetype ) )
                    var_2 scripts\cp_mp\killstreaks\helper_drone::helperdroneexplode( 1 );
            }
        }
    }
}

watch_for_ashes_achievement()
{
    if ( !isplayer( self ) )
        return;

    scripts\mp\utility\player::_freezecontrols( 1 );
    self disableoffhandweapons();
    self allowmelee( 0 );
    self allowads( 0 );
    self allowfire( 0 );
    self disableweaponswitch();
    scripts\common\utility::allow_vehicle_use( 0 );
    self skydive_interrupt();
}

watch_for_attack()
{
    if ( !isplayer( self ) )
        return;

    scripts\mp\utility\player::_freezecontrols( 0 );
    self enableoffhandweapons();
    self allowmelee( 1 );
    self allowads( 1 );
    self allowfire( 1 );
    self enableweaponswitch();
    scripts\common\utility::allow_vehicle_use( 1 );
}

intro_ride( var_0, var_1 )
{
    var_2 = var_0.player_rig;
    var_3 = isplayer( var_0 );

    if ( !isdefined( var_1 ) )
        var_0 waittill( "disconnect" );
    else
        wait 0.1;

    if ( !isdefined( var_2 ) )
        return;

    playfxontag( scripts\engine\utility::getfx( "player_disconnect" ), var_2, "tag_player" );
}

waterentitydamagewatcher()
{
    if ( istrue( self.isjuggernaut ) )
        return;

    var_0 = undefined;
    var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        if ( var_3.classname != "rifle" )
            continue;

        var_0 = var_3;

        if ( isdefined( var_0 ) )
            break;
    }

    if ( !nullweapon( self.currentweapon ) )
    {
        self clearaccessory();
        self takeallweapons();
    }
    else
        waitframe();

    if ( !isdefined( var_0 ) )
        var_0 = scripts\mp\class::delay_show_balloon( "iw8_ar_mike4", "none", "none", 1 );

    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0, undefined, undefined, 1 );
    self.pers["primaryWeapon"] = createheadicon( var_0 );
    self.primaryweapon = createheadicon( var_0 );
    self.primaryweaponobj = var_0;
    self.secondaryweapon = undefined;
    self.secondaryweaponobj = undefined;

    if ( self getweaponammoclip( var_0 ) < 5 )
        self setweaponammoclip( var_0, 5 );

    var_5 = self switchtoweapon( var_0 );
}

_id_122B8( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "exfil5":
            isplayeronintelchallenge( var_1 );
            break;
        default:
            exfil_sequence( var_1 );
            break;
    }
}

get_battle_station_combat_action_default( var_0, var_1 )
{
    var_2 = maxtagradiussq( var_0, var_1 );
    var_2.winners = var_0;
    var_2.disable_heli_lights = var_2 get_allykilled_alias();
    return var_2;
}

maxtagradiussq( var_0, var_1 )
{
    var_2 = maxtagsvisible( var_0, var_1 );

    if ( !isdefined( var_2[0].angles ) )
        var_2[0].angles = ( 0, 0, 0 );

    return var_2[0];
}

maxtagsvisible( var_0, var_1 )
{
    if ( level.script == "mp_br_mechanics" )
        var_2 = scripts\engine\utility::getstructarray( "br_ending_spot", "targetname" );
    else if ( level.script == "mp_br_quarry" )
        var_2 = timeout_consec_kills();
    else if ( scripts\cp_mp\utility\game_utility::sat_piece() )
        var_2 = timeoflastexecute();
    else if ( level.script == "mp_don4" )
        var_2 = timeoutradialunfill();
    else if ( level.script == "mp_wz_island" )
        var_2 = toggle_trap();
    else
        var_2 = timeoutvfxname();

    return _id_1267A( var_2, var_0, var_1 );
}

_id_1267A( var_0, var_1, var_2 )
{
    var_1 = scripts\engine\utility::array_removeundefined( var_1 );

    if ( var_1.size > 0 )
        var_3 = get_center_of_array( var_1 );
    else
        var_3 = var_2;

    var_0 = sortbydistance( var_0, var_3 );
    return var_0;
}

findavailableteam( var_0, var_1 )
{
    var_2 = tablesort( var_0, var_1, 20000 );

    foreach ( var_4 in var_2 )
        scripts\cp_mp\vehicles\vehicle::_id_13209( var_4 );
}

filtervehiclespawnstructsfunc()
{
    foreach ( var_1 in level.claymore_crate_update_hint_logic_alt.winners )
    {
        if ( isdefined( var_1.setteamplunderhud ) )
        {
            scripts\mp\utility\outline::outlinedisable( var_1.setteamplunderhud, var_1 );
            var_1.setteamplunderhud = undefined;
        }
    }
}

timeoutvfxname()
{
    var_0 = [];
    var_0[0] = get_corpse_array( ( -35516, -26964, -290.492 ), ( 0, -37.2493, 0 ), 1 );
    var_0[1] = get_corpse_array( ( -24507.4, -31751.5, -118 ), ( 0, 24.7373, 0 ) );
    var_0[2] = get_corpse_array( ( -18475.3, -38031.3, 1390 ), ( 0, 21.3294, 0 ) );
    var_0[3] = get_corpse_array( ( -22962.6, -26693.8, -133.431 ), ( 0, -79.9927, 0 ), 1 );
    var_0[4] = get_corpse_array( ( -21665.5, -27275.8, -148.989 ), ( 0, -36.6941, 0 ), 1 );
    var_0[5] = get_corpse_array( ( -21726, -25961.2, -146 ), ( 0, -108.126, 0 ), 1 );
    var_0[6] = get_corpse_array( ( -12285.8, -40588.5, 518.07 ), ( 0, -148.112, 0 ), 1 );
    var_0[7] = get_corpse_array( ( -36409.6, -14177.9, -286.708 ), ( 0, -15.7255, 0 ), 1 );
    var_0[8] = get_corpse_array( ( -30525.8, -17654.2, -234.947 ), ( 0, -127.959, 0 ), 1 );
    var_0[9] = get_corpse_array( ( -17170.3, -31131.8, 264.201 ), ( 0, -174.161, 0 ), 1 );
    var_0[10] = get_corpse_array( ( -28797.3, -17400, -241.606 ), ( 0, 16.8587, 0 ) );
    var_0[11] = get_corpse_array( ( -18155.4, -27275.3, -224.811 ), ( 0, -121.999, 0 ), 1 );
    var_0[12] = get_corpse_array( ( -9975.39, -38284.4, 344.1 ), ( 0, -46.4665, 0 ), 1 );
    var_0[13] = get_corpse_array( ( -29281.2, -13754.2, -145.391 ), ( 0, -11.8112, 0 ) );
    var_0[14] = get_corpse_array( ( -17821.6, -23448.4, -262 ), ( 0, 62.3774, 0 ), 1 );
    var_0[15] = get_corpse_array( ( -18619.8, -20889.8, -257.189 ), ( 0, -71.9892, 0 ), 1 );
    var_0[16] = get_corpse_array( ( -14480.9, -25405.9, -288.831 ), ( 0, 154.786, 0 ), 1 );
    var_0[17] = get_corpse_array( ( -9256.33, -33580.9, 158.984 ), ( 0, 146.051, 0 ), 1 );
    var_0[18] = get_corpse_array( ( -8492.02, -34971.8, 166.312 ), ( 0, 161.494, 0 ), 1 );
    var_0[19] = get_corpse_array( ( -16599, -22468.6, -278.939 ), ( 0, 154.273, 0 ), 1 );
    var_0[20] = get_corpse_array( ( -11999.8, -28038.4, -31.998 ), ( 0, 5.45263, 0 ), 1 );
    var_0[21] = get_corpse_array( ( -32056.9, -9169.36, -306.919 ), ( 0, 71.9528, 0 ) );
    var_0[22] = get_corpse_array( ( -23530.6, -14806.7, -69.1128 ), ( 0, -153.028, 0 ), 1 );
    var_0[23] = get_corpse_array( ( -27480.3, -10672.5, -69.3776 ), ( 0, -3.16859, 0 ), 1 );
    var_0[24] = get_corpse_array( ( -4660.23, -38889.8, 608.219 ), ( 0, 63.5175, 0 ), 1 );
    var_0[25] = get_corpse_array( ( -10475.2, -27452, -31.9999 ), ( 0, 118.642, 0 ), 1 );
    var_0[26] = get_corpse_array( ( -20693.1, -15175.3, -304 ), ( 0, -66.6904, 0 ) );
    var_0[27] = get_corpse_array( ( -16776.3, -18894, -338.316 ), ( 0, -15.0922, 0 ), 1 );
    var_0[28] = get_corpse_array( ( -26751, -7621.31, 40.6807 ), ( 0, 58.4382, 0 ) );
    var_0[29] = get_corpse_array( ( -13668.5, -18519.2, -368 ), ( 0, -143.119, 0 ) );
    var_0[30] = get_corpse_array( ( -22473.8, -10149.8, -301.138 ), ( 0, -70.3961, 0 ), 1 );
    var_0[31] = get_corpse_array( ( -11184.8, -21061.9, -315.854 ), ( 0, 5.70909, 0 ), 1 );
    var_0[32] = get_corpse_array( ( -30018.7, -4590.08, -316.327 ), ( 0, 23.8697, 0 ) );
    var_0[33] = get_corpse_array( ( -4140.38, -30726.9, 278.381 ), ( 0, -144.114, 0 ) );
    var_0[34] = get_corpse_array( ( -34822.4, -1184.25, -263.947 ), ( 0, -71.6069, 0 ), 1 );
    var_0[35] = get_corpse_array( ( -26229.5, -4015.4, -313.889 ), ( 0, -117.77, 0 ), 1 );
    var_0[36] = get_corpse_array( ( -30027.8, -1782.43, -313.225 ), ( 0, 175.937, 0 ) );
    var_0[37] = get_corpse_array( ( -27619.2, -2302.54, -313.891 ), ( 0, -8.77301, 0 ), 1 );
    var_0[38] = get_corpse_array( ( -7118.65, -19301.2, -144 ), ( 0, -5.73525, 0 ), 1 );
    var_0[39] = get_corpse_array( ( -10491.1, -14985.5, -360 ), ( 0, -103.058, 0 ), 1 );
    var_0[40] = get_corpse_array( ( -14283.6, -11003.1, -315.39 ), ( 0, 7.08201, 0 ) );
    var_0[41] = get_corpse_array( ( -23169, -3966.54, -321.134 ), ( 0, -83.3339, 0 ), 1 );
    var_0[42] = get_corpse_array( ( -8787.73, -15589.1, -367.949 ), ( 0, 100.158, 0 ), 1 );
    var_0[43] = get_corpse_array( ( -817.503, -25527.6, -256.485 ), ( 0, -66.9498, 0 ), 1 );
    var_0[44] = get_corpse_array( ( -14242.2, -8993.57, -285.128 ), ( 0, 40.3822, 0 ) );
    var_0[45] = get_corpse_array( ( 4555.72, -36115.3, -200.848 ), ( 0, -156.66, 0 ), 1 );
    var_0[46] = get_corpse_array( ( 1627.87, -28799.2, 312 ), ( 0, 150.838, 0 ), 1 );
    var_0[47] = get_corpse_array( ( -9101.03, -10035.7, -320 ), ( 0, 33.7296, 0 ) );
    var_0[48] = get_corpse_array( ( -6042.41, -13135.6, -363.999 ), ( 0, -134.727, 0 ), 1 );
    var_0[49] = get_corpse_array( ( 3185.75, -25611.3, -288.702 ), ( 0, 93.1862, 0 ), 1 );
    var_0[50] = get_corpse_array( ( 1792.7, -23147, -290.615 ), ( 0, -151.835, 0 ), 1 );
    var_0[51] = get_corpse_array( ( -35463.8, 7869.36, 52.9549 ), ( 0, -93.1204, 0 ), 1 );
    var_0[52] = get_corpse_array( ( -716.066, -18775.2, 934 ), ( 0, -148.79, 0 ) );
    var_0[53] = get_corpse_array( ( 1588.6, -20401.1, -285 ), ( 0, -58.1805, 0 ) );
    var_0[54] = get_corpse_array( ( 12452, -35755.6, -484 ), ( 0, -28.7822, 0 ), 1 );
    var_0[55] = get_corpse_array( ( 4648.29, -19224.9, -286.002 ), ( 0, 28.824, 0 ), 1 );
    var_0[56] = get_corpse_array( ( -21706.1, 6555.31, -279.84 ), ( 0, 5.8398, 0 ), 1 );
    var_0[57] = get_corpse_array( ( -16018.1, 4086.84, -318.486 ), ( 0, 3.79374, 0 ), 1 );
    var_0[58] = get_corpse_array( ( -25374.2, 10918.1, -320 ), ( 0, 120.887, 0 ), 1 );
    var_0[59] = get_corpse_array( ( -12119.8, 2981.18, -329.815 ), ( 0, 105.554, 0 ), 1 );
    var_0[60] = get_corpse_array( ( -14767.3, 5096.92, -400.009 ), ( 0, 131.701, 0 ), 1 );
    var_0[61] = get_corpse_array( ( 8177.97, -19326, -286.002 ), ( 0, 91.7841, 0 ), 1 );
    var_0[62] = get_corpse_array( ( 15726.9, -35325.4, 318.345 ), ( 0, 151.377, 0 ), 1 );
    var_0[63] = get_corpse_array( ( 11454.7, -22581.5, -214.023 ), ( 0, -92.045, 0 ), 1 );
    var_0[64] = get_corpse_array( ( -21126.1, 11662.1, -317.002 ), ( 0, -174.747, 0 ), 1 );
    var_0[65] = get_corpse_array( ( -7293.09, 3009.49, -317.508 ), ( 0, -152.562, 0 ), 1 );
    var_0[66] = get_corpse_array( ( 17629.6, -32800.1, 15.9988 ), ( 0, 7.32444, 0 ), 1 );
    var_0[67] = get_corpse_array( ( 504.818, -3834.63, -449 ), ( 0, 66.6309, 0 ), 1 );
    var_0[68] = get_corpse_array( ( -25415.2, 15191.1, -325.003 ), ( 0, -84.1954, 0 ), 1 );
    var_0[69] = get_corpse_array( ( 13957.3, -21816.1, -194 ), ( 0, -75.6819, 0 ), 1 );
    var_0[70] = get_corpse_array( ( -10176, 6713.5, -400 ), ( 0, 75.3382, 0 ), 1 );
    var_0[71] = get_corpse_array( ( -15327.9, 10742.1, -400 ), ( 0, 32.2232, 0 ), 1 );
    var_0[72] = get_corpse_array( ( 8420.99, -11753.6, 306 ), ( 0, 83.4712, 0 ), 1 );
    var_0[73] = get_corpse_array( ( -22216, 14718, -64.0002 ), ( 0, -82.0633, 0 ), 1 );
    var_0[74] = get_corpse_array( ( -17022, 11976.4, -322.43 ), ( 0, 105.663, 0 ), 1 );
    var_0[75] = get_corpse_array( ( -30924.8, 19829.7, 205 ), ( 0, -69.3892, 0 ), 1 );
    var_0[76] = get_corpse_array( ( -2024.99, 3060.21, -330.017 ), ( 0, -158.048, 0 ), 1 );
    var_0[77] = get_corpse_array( ( -28136.9, 19575.5, -448.227 ), ( 0, -98.4958, 0 ), 1 );
    var_0[78] = get_corpse_array( ( -12771.2, 11772.2, -326.973 ), ( 0, 19.9583, 0 ), 1 );
    var_0[79] = get_corpse_array( ( 22131, -32223, -440 ), ( 0, 119.727, 0 ), 1 );
    var_0[80] = get_corpse_array( ( -5075.7, 7706.88, -323.004 ), ( 0, 133.054, 0 ), 1 );
    var_0[81] = get_corpse_array( ( -22334.3, 18697.4, 688.005 ), ( 0, 140.553, 0 ), 1 );
    var_0[82] = get_corpse_array( ( -25425.5, 20658.8, -448 ), ( 0, 0.274191, 0 ), 1 );
    var_0[83] = get_corpse_array( ( 23625.3, -31238.1, -563.054 ), ( 0, -52.2092, 0 ), 1 );
    var_0[84] = get_corpse_array( ( -33327.4, 24789.2, 12.4296 ), ( 0, -44.4776, 0 ), 1 );
    var_0[85] = get_corpse_array( ( 21118.3, -22709.8, -232 ), ( 0, 42.769, 0 ) );
    var_0[86] = get_corpse_array( ( -28418.1, 23715.5, -447.994 ), ( 0, -89.5397, 0 ), 1 );
    var_0[87] = get_corpse_array( ( 16769.7, -13392.7, 356.076 ), ( 0, -37.8018, 0 ) );
    var_0[88] = get_corpse_array( ( -13952.5, 17259.8, -324 ), ( 0, -76.2444, 0 ), 1 );
    var_0[89] = get_corpse_array( ( 24205.4, -25029.5, -328.008 ), ( 0, 169.376, 0 ), 1 );
    var_0[90] = get_corpse_array( ( 12118.5, -3994.79, -340.649 ), ( 0, -23.2087, 0 ), 1 );
    var_0[91] = get_corpse_array( ( -17899.8, 21527.3, -450.34 ), ( 0, -8.05977, 0 ), 1 );
    var_0[92] = get_corpse_array( ( 22217.9, -18422.9, 632 ), ( 0, 162.28, 0 ), 1 );
    var_0[93] = get_corpse_array( ( 21407.1, -16363.3, 1916.75 ), ( 0, -1.0712, 0 ), 1 );
    var_0[94] = get_corpse_array( ( -2832.02, 13488.4, -319.985 ), ( 0, -0.230498, 0 ), 1 );
    var_0[95] = get_corpse_array( ( 3266.46, 9488.52, -317.067 ), ( 0, 97.6153, 0 ), 1 );
    var_0[96] = get_corpse_array( ( 22117.5, -13790.4, 256.102 ), ( 0, 135.758, 0 ), 1 );
    var_0[97] = get_corpse_array( ( 24850.9, -18555.2, -208.2 ), ( 0, -76.8969, 0 ), 1 );
    var_0[98] = get_corpse_array( ( -23053.6, 27499.5, -460.201 ), ( 0, 83.541, 0 ), 1 );
    var_0[99] = get_corpse_array( ( -8326.54, 20049.9, -257.261 ), ( 0, 110.381, 0 ), 1 );
    var_0[100] = get_corpse_array( ( 19238.7, -6573.38, -40 ), ( 0, -88.569, 0 ) );
    var_0[101] = get_corpse_array( ( -36685.3, 33440.3, 1474.01 ), ( 0, -73.7051, 0 ), 1 );
    var_0[102] = get_corpse_array( ( 26569.7, -16938.2, -221.571 ), ( 0, 92.2376, 0 ), 1 );
    var_0[103] = get_corpse_array( ( 26412.2, -13112.5, -264 ), ( 0, 55.7859, 0 ), 1 );
    var_0[104] = get_corpse_array( ( 20248.8, -2154.65, -506.989 ), ( 0, 116.839, 0 ) );
    var_0[105] = get_corpse_array( ( -6577.92, 23388.3, -448.004 ), ( 0, -101.867, 0 ), 1 );
    var_0[106] = get_corpse_array( ( 18069.7, 1558.6, -590.448 ), ( 0, -85.7224, 0 ), 1 );
    var_0[107] = get_corpse_array( ( -10855.2, 27363.9, -259.411 ), ( 0, 148.092, 0 ), 1 );
    var_0[108] = get_corpse_array( ( -2919.92, 22409.8, -446.75 ), ( 0, -78.7055, 0 ), 1 );
    var_0[109] = get_corpse_array( ( -16866.8, 30593, -225.8 ), ( 0, -75.0401, 0 ), 1 );
    var_0[110] = get_corpse_array( ( 37954.1, -37722.9, -577.993 ), ( 0, 69.8195, 0 ), 1 );
    var_0[111] = get_corpse_array( ( 35023.3, -24338.2, -566 ), ( 0, 53.0156, 0 ), 1 );
    var_0[112] = get_corpse_array( ( 16187.4, 8712.66, -332.163 ), ( 0, -84.2018, 0 ), 1 );
    var_0[113] = get_corpse_array( ( -25609.6, 36743.4, 348.439 ), ( 0, -160.438, 0 ) );
    var_0[114] = get_corpse_array( ( -14068.2, 31959.7, -250.623 ), ( 0, -153.916, 0 ), 1 );
    var_0[115] = get_corpse_array( ( 29348.7, -8361.65, -424.006 ), ( 0, -81.6393, 0 ), 1 );
    var_0[116] = get_corpse_array( ( 8670.39, 18913.1, -303.729 ), ( 0, 105.535, 0 ), 1 );
    var_0[117] = get_corpse_array( ( 35020.4, -16139.2, -572.017 ), ( 0, 58.7604, 0 ), 1 );
    var_0[118] = get_corpse_array( ( 19630.8, 10158.6, -451.09 ), ( 0, -142.492, 0 ), 1 );
    var_0[119] = get_corpse_array( ( 43465.3, -36148.1, 51.093 ), ( 0, 112.905, 0 ) );
    var_0[120] = get_corpse_array( ( -19560, 39017.6, -640 ), ( 0, 105.902, 0 ) );
    var_0[121] = get_corpse_array( ( 3395.98, 28640.1, 1.42773 ), ( 0, 135.948, 0 ), 1 );
    var_0[122] = get_corpse_array( ( -12456.8, 38252.8, 0.642883 ), ( 0, 136.198, 0 ) );
    var_0[123] = get_corpse_array( ( 34810.3, -3657.19, -488 ), ( 0, -139.433, 0 ) );
    var_0[124] = get_corpse_array( ( 48307, -38482.1, 2272 ), ( 0, 54.6218, 0 ), 1 );
    var_0[125] = get_corpse_array( ( 17534.5, 19736.7, 318.301 ), ( 0, -103.234, 0 ), 1 );
    var_0[126] = get_corpse_array( ( 49054.6, -37186.3, 2272.02 ), ( 0, 62.8379, 0 ), 1 );
    var_0[127] = get_corpse_array( ( -26149.3, 47192.9, 2703.16 ), ( 0, 36.4515, 0 ) );
    var_0[128] = get_corpse_array( ( 50932.9, -41318, 1347 ), ( 0, -109.525, 0 ), 1 );
    var_0[129] = get_corpse_array( ( 44159.8, -13820.7, -87.1293 ), ( 0, -7.88874, 0 ) );
    var_0[130] = get_corpse_array( ( 51090.6, -34587.3, 1343.9 ), ( 0, -9.93786, 0 ), 1 );
    var_0[131] = get_corpse_array( ( 32681, 7595.22, -497.554 ), ( 0, -48.5794, 0 ), 1 );
    var_0[132] = get_corpse_array( ( 35336.5, 3905.92, -551.754 ), ( 0, -23.8152, 0 ), 1 );
    var_0[133] = get_corpse_array( ( 52357.4, -33339, 1258.09 ), ( 0, -20.541, 0 ), 1 );
    var_0[134] = get_corpse_array( ( -520.246, 39710.8, 2783 ), ( 0, -72.5011, 0 ), 1 );
    var_0[135] = get_corpse_array( ( 45634.6, -11566.6, -58.2778 ), ( 0, -151.105, 0 ), 1 );
    var_0[136] = get_corpse_array( ( 50376.7, -21886.4, -395.252 ), ( 0, -23.787, 0 ) );
    var_0[137] = get_corpse_array( ( 51570.2, -24783.1, -113.531 ), ( 0, 104.684, 0 ), 1 );
    var_0[138] = get_corpse_array( ( 39824, 1114.83, -424.993 ), ( 0, 138.361, 0 ), 1 );
    var_0[139] = get_corpse_array( ( 25390.7, 20043.1, 1343.21 ), ( 0, 135.63, 0 ), 1 );
    var_0[140] = get_corpse_array( ( 52294.1, -25802.7, -83.0376 ), ( 0, -19.67, 0 ), 1 );
    var_0[141] = get_corpse_array( ( -11742.3, 47596, 1790.51 ), ( 0, -161.796, 0 ), 1 );
    var_0[142] = get_corpse_array( ( 44198.1, -4238.47, 266.547 ), ( 0, -102.295, 0 ) );
    var_0[143] = get_corpse_array( ( 48747.6, -12179.9, 14.8108 ), ( 0, -111.192, 0 ), 1 );
    var_0[144] = get_corpse_array( ( 46453.4, -6647.04, 208.457 ), ( 0, -15.0621, 0 ), 1 );
    var_0[145] = get_corpse_array( ( 12849.3, 34747.5, 2458.5 ), ( 0, -39.4017, 0 ), 1 );
    var_0[146] = get_corpse_array( ( 52493.1, -17205.6, -391.658 ), ( 0, 19.0522, 0 ), 1 );
    var_0[147] = get_corpse_array( ( 54470.9, -21095.7, -394.817 ), ( 0, -68.4661, 0 ) );
    var_0[148] = get_corpse_array( ( -24417, 56523.2, 2659.76 ), ( 0, -129.922, 0 ), 1 );
    var_0[149] = get_corpse_array( ( 37257.1, 13799.8, 232 ), ( 0, 22.0809, 0 ), 1 );
    var_0[150] = get_corpse_array( ( 23294, 29633.7, 1019.7 ), ( 0, 17.9623, 0 ), 1 );
    var_0[151] = get_corpse_array( ( -9892.05, 53353.9, 2428.22 ), ( 0, -25.4412, 0 ) );
    var_0[152] = get_corpse_array( ( 49428.4, 1843.77, 19.9863 ), ( 0, 175.256, 0 ), 1 );
    var_0[153] = get_corpse_array( ( 3411.24, 49881.5, 1032 ), ( 0, 83.1958, 0 ), 1 );
    var_0[154] = get_corpse_array( ( 57090, -11008.2, -433.158 ), ( 0, -94.4655, 0 ), 1 );
    var_0[155] = get_corpse_array( ( 20175.4, 39040, 957.372 ), ( 0, 82.8313, 0 ), 1 );
    var_0[156] = get_corpse_array( ( -8255.86, 57148.3, 1071.37 ), ( 0, -11.2614, 0 ), 1 );
    var_0[157] = get_corpse_array( ( 51848.1, 3726.24, 29.3418 ), ( 0, 172.199, 0 ), 1 );
    var_0[158] = get_corpse_array( ( 50898.1, 6776.73, 29.7878 ), ( 0, -8.3196, 0 ), 1 );
    var_0[159] = get_corpse_array( ( -17676, 62373.4, 1908.92 ), ( 0, -4.78614, 0 ) );
    var_0[160] = get_corpse_array( ( 12324.8, 47493.6, 1036 ), ( 0, -44.8196, 0 ), 1 );
    var_0[161] = get_corpse_array( ( 29716.1, 34472.4, 435.436 ), ( 0, -133.228, 0 ), 1 );
    var_0[162] = get_corpse_array( ( 37269.7, 27514, 190.688 ), ( 0, -36.7275, 0 ), 1 );
    var_0[163] = get_corpse_array( ( 46679.8, 17932.4, -352.184 ), ( 0, 157.463, 0 ), 1 );
    var_0[164] = get_corpse_array( ( 53649.7, 7546.33, 29.3552 ), ( 0, -107.59, 0 ), 1 );
    var_0[165] = get_corpse_array( ( 57918.4, 650.832, 41.0137 ), ( 0, 106.07, 0 ), 1 );
    var_0[166] = get_corpse_array( ( 7073.74, 57285.5, 1036 ), ( 0, 164.547, 0 ), 1 );
    var_0[167] = get_corpse_array( ( 27957.2, 43805.1, 1753.23 ), ( 0, -142.754, 0 ), 1 );
    var_0[168] = get_corpse_array( ( 20050.9, 52735.7, 1917.76 ), ( 0, 137.974, 0 ), 1 );
    var_0[169] = get_corpse_array( ( 43887.3, 31928.7, -198.527 ), ( 0, -93.8224, 0 ), 1 );
    var_0[170] = get_corpse_array( ( 44717.5, 39263.5, -42.8776 ), ( 0, -102.018, 0 ), 1 );
    var_0[171] = get_corpse_array( ( 37958.5, 47398, 944.177 ), ( 0, -119.853, 0 ), 1 );
    return var_0;
}

timeoutradialunfill()
{
    var_0 = [];
    var_0[0] = get_corpse_array( ( -35516, -26964, -290.492 ), ( 0, -37.2493, 0 ), 1 );
    var_0[1] = get_corpse_array( ( -24507.4, -31751.5, -118 ), ( 0, 24.7373, 0 ), 1 );
    var_0[2] = get_corpse_array( ( -18335, -38528, 1426 ), ( 0, 21.3294, 0 ), 1 );
    var_0[3] = get_corpse_array( ( -22962.6, -26693.8, -133.431 ), ( 0, -79.9927, 0 ), 1 );
    var_0[4] = get_corpse_array( ( -21665.5, -27275.8, -148.989 ), ( 0, -36.6941, 0 ), 1 );
    var_0[5] = get_corpse_array( ( -21726, -25961.2, -146 ), ( 0, -108.126, 0 ), 1 );
    var_0[6] = get_corpse_array( ( -17034.3, -31571.8, 264.201 ), ( 0, -174.161, 0 ), 1 );
    var_0[7] = get_corpse_array( ( -36409.6, -14177.9, -286.708 ), ( 0, -15.7255, 0 ), 1 );
    var_0[8] = get_corpse_array( ( -30525.8, -17654.2, -234.947 ), ( 0, -127.959, 0 ), 1 );
    var_0[9] = get_corpse_array( ( -28797.3, -17400, -241.606 ), ( 0, 16.8587, 0 ), 1 );
    var_0[10] = get_corpse_array( ( -18155.4, -27275.3, -224.811 ), ( 0, -121.999, 0 ), 1 );
    var_0[11] = get_corpse_array( ( -10441.3, -39384.6, 348.396 ), ( 0, -75.0314, 0 ) );
    var_0[12] = get_corpse_array( ( -29281.2, -13754.2, -145.391 ), ( 0, -11.8112, 0 ), 1 );
    var_0[13] = get_corpse_array( ( -17821.6, -23448.4, -262 ), ( 0, 62.3774, 0 ), 1 );
    var_0[14] = get_corpse_array( ( -18619.8, -20889.8, -257.189 ), ( 0, -71.9892, 0 ), 1 );
    var_0[15] = get_corpse_array( ( -9256.33, -33580.9, 158.984 ), ( 0, 146.051, 0 ), 1 );
    var_0[16] = get_corpse_array( ( -8492.02, -34971.8, 166.312 ), ( 0, 161.494, 0 ), 1 );
    var_0[17] = get_corpse_array( ( -14337.1, -25432.4, -288.003 ), ( 0, 18.2365, 0 ) );
    var_0[18] = get_corpse_array( ( -16599, -22468.6, -278.939 ), ( 0, 154.273, 0 ), 1 );
    var_0[19] = get_corpse_array( ( -11999.8, -28038.4, -31.998 ), ( 0, 5.45263, 0 ), 1 );
    var_0[20] = get_corpse_array( ( -32056.9, -9169.36, -306.919 ), ( 0, 71.9528, 0 ), 1 );
    var_0[21] = get_corpse_array( ( -23530.6, -14806.7, -69.1128 ), ( 0, -153.028, 0 ), 1 );
    var_0[22] = get_corpse_array( ( -27480.3, -10672.5, -69.3776 ), ( 0, -3.16859, 0 ), 1 );
    var_0[23] = get_corpse_array( ( -4660.23, -38889.8, 608.219 ), ( 0, 63.5175, 0 ), 1 );
    var_0[24] = get_corpse_array( ( -10475.2, -27452, -31.9999 ), ( 0, 118.642, 0 ), 1 );
    var_0[25] = get_corpse_array( ( -20693.1, -15175.3, -304 ), ( 0, -66.6904, 0 ), 1 );
    var_0[26] = get_corpse_array( ( -16776.3, -18894, -338.316 ), ( 0, -15.0922, 0 ), 1 );
    var_0[27] = get_corpse_array( ( -13668.5, -18519.2, -368 ), ( 0, -143.119, 0 ), 1 );
    var_0[28] = get_corpse_array( ( -22473.8, -10149.8, -301.138 ), ( 0, -70.3961, 0 ), 1 );
    var_0[29] = get_corpse_array( ( -11184.8, -21061.9, -315.854 ), ( 0, 5.70909, 0 ), 1 );
    var_0[30] = get_corpse_array( ( -26223.1, -7239.33, 36.2852 ), ( 0, -142.791, 0 ) );
    var_0[31] = get_corpse_array( ( -30018.7, -4590.08, -316.327 ), ( 0, 23.8697, 0 ), 1 );
    var_0[32] = get_corpse_array( ( -4140.38, -30726.9, 278.381 ), ( 0, -144.114, 0 ), 1 );
    var_0[33] = get_corpse_array( ( -34822.4, -1184.25, -263.947 ), ( 0, -71.6069, 0 ), 1 );
    var_0[34] = get_corpse_array( ( -30043.8, -1902.43, -313.225 ), ( 0, 175.937, 0 ), 1 );
    var_0[35] = get_corpse_array( ( -26229.5, -4015.4, -313.889 ), ( 0, -117.77, 0 ), 1 );
    var_0[36] = get_corpse_array( ( -27619.2, -2302.54, -313.891 ), ( 0, -8.77301, 0 ), 1 );
    var_0[37] = get_corpse_array( ( -7118.65, -19301.2, -144 ), ( 0, -5.73525, 0 ), 1 );
    var_0[38] = get_corpse_array( ( -10491.1, -14985.5, -360 ), ( 0, -103.058, 0 ), 1 );
    var_0[39] = get_corpse_array( ( -14483.6, -10859.1, -315.39 ), ( 0, 7.08201, 0 ), 1 );
    var_0[40] = get_corpse_array( ( -23169, -3966.54, -321.134 ), ( 0, -83.3339, 0 ), 1 );
    var_0[41] = get_corpse_array( ( -8787.73, -15589.1, -367.949 ), ( 0, 100.158, 0 ), 1 );
    var_0[42] = get_corpse_array( ( -817.503, -25527.6, -256.485 ), ( 0, -66.9498, 0 ), 1 );
    var_0[43] = get_corpse_array( ( -14242.2, -8993.57, -285.128 ), ( 0, 40.3822, 0 ), 1 );
    var_0[44] = get_corpse_array( ( 4555.72, -36115.3, -200.848 ), ( 0, -156.66, 0 ), 1 );
    var_0[45] = get_corpse_array( ( 1627.87, -28799.2, 312 ), ( 0, 150.838, 0 ), 1 );
    var_0[46] = get_corpse_array( ( -9101.03, -10035.7, -320 ), ( 0, 33.7296, 0 ), 1 );
    var_0[47] = get_corpse_array( ( -6042.41, -13135.6, -363.999 ), ( 0, -134.727, 0 ), 1 );
    var_0[48] = get_corpse_array( ( 3185.75, -25611.3, -288.702 ), ( 0, 93.1862, 0 ), 1 );
    var_0[49] = get_corpse_array( ( 1792.7, -23147, -290.615 ), ( 0, -151.835, 0 ), 1 );
    var_0[50] = get_corpse_array( ( -35463.8, 7869.36, 52.9549 ), ( 0, -93.1204, 0 ), 1 );
    var_0[51] = get_corpse_array( ( -716.066, -18775.2, 934 ), ( 0, -148.79, 0 ), 1 );
    var_0[52] = get_corpse_array( ( 1588.6, -20401.1, -285 ), ( 0, -58.1805, 0 ), 1 );
    var_0[53] = get_corpse_array( ( 12452, -35755.6, -484 ), ( 0, -28.7822, 0 ), 1 );
    var_0[54] = get_corpse_array( ( 4648.29, -19224.9, -286.002 ), ( 0, 28.824, 0 ), 1 );
    var_0[55] = get_corpse_array( ( -21706.1, 6555.31, -279.84 ), ( 0, 5.8398, 0 ), 1 );
    var_0[56] = get_corpse_array( ( -16018.1, 4086.84, -318.486 ), ( 0, 3.79374, 0 ), 1 );
    var_0[57] = get_corpse_array( ( -25374.2, 10918.1, -320 ), ( 0, 120.887, 0 ), 1 );
    var_0[58] = get_corpse_array( ( -12119.8, 2981.18, -329.815 ), ( 0, 105.554, 0 ), 1 );
    var_0[59] = get_corpse_array( ( -14767.3, 5096.92, -400.009 ), ( 0, 131.701, 0 ), 1 );
    var_0[60] = get_corpse_array( ( 8177.97, -19326, -286.002 ), ( 0, 91.7841, 0 ), 1 );
    var_0[61] = get_corpse_array( ( 15726.9, -35325.4, 318.345 ), ( 0, 151.377, 0 ), 1 );
    var_0[62] = get_corpse_array( ( 11454.7, -22581.5, -214.023 ), ( 0, -92.045, 0 ), 1 );
    var_0[63] = get_corpse_array( ( -20678.1, 11742.1, -320.114 ), ( 0, -174.747, 0 ), 1 );
    var_0[64] = get_corpse_array( ( -7293.09, 3009.49, -317.508 ), ( 0, -152.562, 0 ), 1 );
    var_0[65] = get_corpse_array( ( 17629.6, -32800.1, 15.9988 ), ( 0, 7.32444, 0 ), 1 );
    var_0[66] = get_corpse_array( ( 504.818, -3834.63, -449 ), ( 0, 66.6309, 0 ), 1 );
    var_0[67] = get_corpse_array( ( -25415.2, 15191.1, -325.003 ), ( 0, -84.1954, 0 ), 1 );
    var_0[68] = get_corpse_array( ( 13957.3, -21816.1, -194 ), ( 0, -75.6819, 0 ), 1 );
    var_0[69] = get_corpse_array( ( -10176, 6713.5, -400 ), ( 0, 75.3382, 0 ), 1 );
    var_0[70] = get_corpse_array( ( -15327.9, 10742.1, -400 ), ( 0, 32.2232, 0 ), 1 );
    var_0[71] = get_corpse_array( ( 8420.99, -11753.6, 306 ), ( 0, 83.4712, 0 ), 1 );
    var_0[72] = get_corpse_array( ( -22216, 14718, -64.0002 ), ( 0, -82.0633, 0 ), 1 );
    var_0[73] = get_corpse_array( ( -17022, 11976.4, -322.43 ), ( 0, 105.663, 0 ), 1 );
    var_0[74] = get_corpse_array( ( -30924.8, 19829.7, 205 ), ( 0, -69.3892, 0 ), 1 );
    var_0[75] = get_corpse_array( ( -2024.99, 3060.21, -330.017 ), ( 0, -158.048, 0 ), 1 );
    var_0[76] = get_corpse_array( ( -12771.2, 11772.2, -326.973 ), ( 0, 19.9583, 0 ), 1 );
    var_0[77] = get_corpse_array( ( -22206.3, 18001.4, 688.005 ), ( 0, 140.553, 0 ), 1 );
    var_0[78] = get_corpse_array( ( 22131, -32223, -440 ), ( 0, 119.727, 0 ), 1 );
    var_0[79] = get_corpse_array( ( -3427.7, 6818.88, -323.004 ), ( 0, 133.054, 0 ), 1 );
    var_0[80] = get_corpse_array( ( -25425.5, 20658.8, -448 ), ( 0, 0.274191, 0 ), 1 );
    var_0[81] = get_corpse_array( ( 23625.3, -31238.1, -563.054 ), ( 0, -52.2092, 0 ), 1 );
    var_0[82] = get_corpse_array( ( -33327.4, 24789.2, 12.4296 ), ( 0, -44.4776, 0 ), 1 );
    var_0[83] = get_corpse_array( ( 21118.3, -22709.8, -232 ), ( 0, 42.769, 0 ), 1 );
    var_0[84] = get_corpse_array( ( -28418.1, 23715.5, -447.994 ), ( 0, -89.5397, 0 ), 1 );
    var_0[85] = get_corpse_array( ( 16769.7, -13392.7, 356.076 ), ( 0, -37.8018, 0 ), 1 );
    var_0[86] = get_corpse_array( ( -13952.5, 17259.8, -324 ), ( 0, -76.2444, 0 ), 1 );
    var_0[87] = get_corpse_array( ( 24205.4, -25029.5, -328.008 ), ( 0, 169.376, 0 ), 1 );
    var_0[88] = get_corpse_array( ( 11918.5, -3474.79, -347.198 ), ( 0, 336.788, 0 ) );
    var_0[89] = get_corpse_array( ( -17899.8, 21527.3, -450.34 ), ( 0, -8.05977, 0 ), 1 );
    var_0[90] = get_corpse_array( ( 22217.9, -18422.9, 632 ), ( 0, 162.28, 0 ), 1 );
    var_0[91] = get_corpse_array( ( 20216.9, -14855.9, 4440 ), ( 0, -105.534, 0 ) );
    var_0[92] = get_corpse_array( ( -2832.02, 13488.4, -319.985 ), ( 0, -0.230498, 0 ), 1 );
    var_0[93] = get_corpse_array( ( 3266.46, 9488.52, -317.067 ), ( 0, 97.6153, 0 ), 1 );
    var_0[94] = get_corpse_array( ( 22117.5, -13790.4, 256.102 ), ( 0, 135.758, 0 ), 1 );
    var_0[95] = get_corpse_array( ( 24850.9, -18555.2, -208.2 ), ( 0, -76.8969, 0 ), 1 );
    var_0[96] = get_corpse_array( ( -23053.6, 27499.5, -460.201 ), ( 0, 83.541, 0 ), 1 );
    var_0[97] = get_corpse_array( ( -8326.54, 20049.9, -257.261 ), ( 0, 110.381, 0 ), 1 );
    var_0[98] = get_corpse_array( ( 19238.7, -6573.38, -40 ), ( 0, -88.569, 0 ), 1 );
    var_0[99] = get_corpse_array( ( -36685.3, 33440.3, 1474.01 ), ( 0, -73.7051, 0 ), 1 );
    var_0[100] = get_corpse_array( ( 26569.7, -16938.2, -221.571 ), ( 0, 92.2376, 0 ), 1 );
    var_0[101] = get_corpse_array( ( 26412.2, -13112.5, -264 ), ( 0, 55.7859, 0 ), 1 );
    var_0[102] = get_corpse_array( ( 20248.8, -2154.65, -506.989 ), ( 0, 116.839, 0 ), 1 );
    var_0[103] = get_corpse_array( ( -6577.92, 23388.3, -448.004 ), ( 0, -101.867, 0 ), 1 );
    var_0[104] = get_corpse_array( ( 18069.7, 1558.6, -590.448 ), ( 0, -85.7224, 0 ), 1 );
    var_0[105] = get_corpse_array( ( 33871.9, -25305.2, -566 ), ( 0, -31.8678, 0 ) );
    var_0[106] = get_corpse_array( ( -2919.92, 22409.8, -446.75 ), ( 0, -78.7055, 0 ), 1 );
    var_0[107] = get_corpse_array( ( -16866.8, 30593, -225.8 ), ( 0, -75.0401, 0 ), 1 );
    var_0[108] = get_corpse_array( ( 37954.1, -37722.9, -577.993 ), ( 0, 69.8195, 0 ), 1 );
    var_0[109] = get_corpse_array( ( -10855.2, 28227.9, -286 ), ( 0, 148.092, 0 ), 1 );
    var_0[110] = get_corpse_array( ( 6617.88, 17297.6, -289.993 ), ( 0, -64.9318, 0 ) );
    var_0[111] = get_corpse_array( ( 16187.4, 8712.66, -332.163 ), ( 0, -84.2018, 0 ), 1 );
    var_0[112] = get_corpse_array( ( -14068.2, 31959.7, -250.623 ), ( 0, -153.916, 0 ), 1 );
    var_0[113] = get_corpse_array( ( 29348.7, -8361.65, -424.006 ), ( 0, -81.6393, 0 ), 1 );
    var_0[114] = get_corpse_array( ( 35020.4, -16139.2, -572.017 ), ( 0, 58.7604, 0 ), 1 );
    var_0[115] = get_corpse_array( ( 19630.8, 10158.6, -451.09 ), ( 0, -142.492, 0 ), 1 );
    var_0[116] = get_corpse_array( ( 43465.3, -36148.1, 51.093 ), ( 0, 112.905, 0 ), 1 );
    var_0[117] = get_corpse_array( ( -19560, 39017.6, -640 ), ( 0, 105.902, 0 ), 1 );
    var_0[118] = get_corpse_array( ( 3395.98, 28640.1, 1.42773 ), ( 0, 135.948, 0 ), 1 );
    var_0[119] = get_corpse_array( ( -12456.8, 38252.8, 0.642883 ), ( 0, 136.198, 0 ), 1 );
    var_0[120] = get_corpse_array( ( 30374.5, 1918, -584 ), ( 0, 240.147, 0 ), 1 );
    var_0[121] = get_corpse_array( ( 34810.3, -3657.19, -488 ), ( 0, -139.433, 0 ), 1 );
    var_0[122] = get_corpse_array( ( 48307, -38482.1, 2272 ), ( 0, 54.6218, 0 ), 1 );
    var_0[123] = get_corpse_array( ( 17534.5, 19736.7, 318.301 ), ( 0, -103.234, 0 ), 1 );
    var_0[124] = get_corpse_array( ( 49054.6, -37186.3, 2272.02 ), ( 0, 62.8379, 0 ), 1 );
    var_0[125] = get_corpse_array( ( -26149.3, 47192.9, 2703.16 ), ( 0, 36.4515, 0 ), 1 );
    var_0[126] = get_corpse_array( ( 50932.9, -41318, 1347 ), ( 0, -109.525, 0 ), 1 );
    var_0[127] = get_corpse_array( ( -27964, 48715, 2554 ), ( 0, 116.668, 0 ) );
    var_0[128] = get_corpse_array( ( 44159.8, -13820.7, -87.1293 ), ( 0, -7.88874, 0 ), 1 );
    var_0[129] = get_corpse_array( ( 51090.6, -34587.3, 1343.9 ), ( 0, -9.93786, 0 ), 1 );
    var_0[130] = get_corpse_array( ( 32681, 7595.22, -497.554 ), ( 0, -48.5794, 0 ), 1 );
    var_0[131] = get_corpse_array( ( 35392.5, 3953.92, -537.668 ), ( 0, -23.8152, 0 ), 1 );
    var_0[132] = get_corpse_array( ( 52357.4, -33339, 1258.09 ), ( 0, -20.541, 0 ), 1 );
    var_0[133] = get_corpse_array( ( 45354.6, -11966.6, -80.277 ), ( 0, -151.105, 0 ), 1 );
    var_0[134] = get_corpse_array( ( -520.246, 39710.8, 2783 ), ( 0, -72.5011, 0 ), 1 );
    var_0[135] = get_corpse_array( ( 50376.7, -21886.4, -395.252 ), ( 0, -23.787, 0 ), 1 );
    var_0[136] = get_corpse_array( ( 51570.2, -24783.1, -113.531 ), ( 0, 104.684, 0 ), 1 );
    var_0[137] = get_corpse_array( ( 39824, 1114.83, -424.993 ), ( 0, 138.361, 0 ), 1 );
    var_0[138] = get_corpse_array( ( 52294.1, -25802.7, -83.0376 ), ( 0, -19.67, 0 ), 1 );
    var_0[139] = get_corpse_array( ( 44324.8, -4273.61, 263.415 ), ( 0, -177.943, 0 ) );
    var_0[140] = get_corpse_array( ( 46453.4, -6647.04, 208.457 ), ( 0, -15.0621, 0 ), 1 );
    var_0[141] = get_corpse_array( ( 49114.5, -11366.7, 9.90356 ), ( 0, 70.9343, 0 ) );
    var_0[142] = get_corpse_array( ( 12849.3, 34747.5, 2458.5 ), ( 0, -39.4017, 0 ), 1 );
    var_0[143] = get_corpse_array( ( -24761.1, 54243.7, 2632.83 ), ( 0, -110.996, 0 ) );
    var_0[144] = get_corpse_array( ( 52493.1, -17205.6, -391.658 ), ( 0, 19.0522, 0 ), 1 );
    var_0[145] = get_corpse_array( ( 54022.2, -21039.7, -397.627 ), ( 0, -67.3496, 0 ) );
    var_0[146] = get_corpse_array( ( -24417, 56523.2, 2659.76 ), ( 0, -129.922, 0 ), 1 );
    var_0[147] = get_corpse_array( ( 37257.1, 13799.8, 232 ), ( 0, 22.0809, 0 ), 1 );
    var_0[148] = get_corpse_array( ( 23294, 29633.7, 1027.7 ), ( 0, 17.9623, 0 ), 1 );
    var_0[149] = get_corpse_array( ( -9892.05, 53353.9, 2428.22 ), ( 0, -25.4412, 0 ), 1 );
    var_0[150] = get_corpse_array( ( 49428.4, 1843.77, 19.9863 ), ( 0, 175.256, 0 ), 1 );
    var_0[151] = get_corpse_array( ( 3411.24, 49881.5, 1032 ), ( 0, 83.1958, 0 ), 1 );
    var_0[152] = get_corpse_array( ( 57090, -11008.2, -433.158 ), ( 0, -94.4655, 0 ), 1 );
    var_0[153] = get_corpse_array( ( 20175.4, 39040, 957.372 ), ( 0, 82.8313, 0 ), 1 );
    var_0[154] = get_corpse_array( ( -8255.86, 57148.3, 1071.37 ), ( 0, -11.2614, 0 ), 1 );
    var_0[155] = get_corpse_array( ( 51848.1, 3726.24, 29.3418 ), ( 0, 172.199, 0 ), 1 );
    var_0[156] = get_corpse_array( ( 50898.1, 6776.73, 29.7878 ), ( 0, -8.3196, 0 ), 1 );
    var_0[157] = get_corpse_array( ( -17676, 62373.4, 1908.92 ), ( 0, -4.78614, 0 ), 1 );
    var_0[158] = get_corpse_array( ( 12324.8, 47493.6, 1036 ), ( 0, -44.8196, 0 ), 1 );
    var_0[159] = get_corpse_array( ( 29716.1, 34472.4, 587.436 ), ( 0, -133.228, 0 ), 1 );
    var_0[160] = get_corpse_array( ( 37269.7, 27514, 190.688 ), ( 0, -36.7275, 0 ), 1 );
    var_0[161] = get_corpse_array( ( 46679.8, 17932.4, -352.184 ), ( 0, 157.463, 0 ), 1 );
    var_0[162] = get_corpse_array( ( 53649.7, 7546.33, 29.3552 ), ( 0, -107.59, 0 ), 1 );
    var_0[163] = get_corpse_array( ( 32652.2, 34860.1, 587.138 ), ( 0, -18.5619, 0 ) );
    var_0[164] = get_corpse_array( ( 57918.4, 650.832, 41.0137 ), ( 0, 106.07, 0 ), 1 );
    var_0[165] = get_corpse_array( ( 7073.74, 57285.5, 1036 ), ( 0, 164.547, 0 ), 1 );
    var_0[166] = get_corpse_array( ( 28049.2, 43607.1, 1769.23 ), ( 0, -142.754, 0 ), 1 );
    var_0[167] = get_corpse_array( ( 20050.9, 52735.7, 1917.76 ), ( 0, 137.974, 0 ), 1 );
    var_0[168] = get_corpse_array( ( 43887.3, 31928.7, -198.527 ), ( 0, -93.8224, 0 ), 1 );
    var_0[169] = get_corpse_array( ( 38241.2, 38003.4, 555.227 ), ( 0, -33.0121, 0 ) );
    return var_0;
}

toggle_trap()
{
    var_0 = [];
    var_0[1] = get_corpse_array( ( 6724, -9417, 2069 ), ( 7, 280, 0 ), 1 );
    return var_0;
}

timeout_consec_kills()
{
    var_0 = [];
    var_0[var_0.size] = get_corpse_array( ( 29786.7, 41132.6, 749.673 ), ( 0, -132.937, 0 ) );
    var_0[var_0.size] = get_corpse_array( ( 31330.7, 43775.2, 685 ), ( 0, -111.923, 0 ) );
    var_0[var_0.size] = get_corpse_array( ( 37671.1, 42532.2, 857.039 ), ( 0, -169.422, 0 ) );
    var_0[var_0.size] = get_corpse_array( ( 40311.2, 44060.2, 1326.98 ), ( 0, 169.247, 0 ) );
    return var_0;
}

timeoflastexecute()
{
    var_0 = [];
    var_0[0] = get_corpse_array( ( -3899, 2190, 693 ), ( 0, 159, 0 ) );
    var_0[1] = get_corpse_array( ( -786, -11590, 184 ), ( 0, 0, 0 ) );
    var_0[2] = get_corpse_array( ( 1548, -5824, 698 ), ( 0, 235, 0 ) );
    var_0[3] = get_corpse_array( ( 5215, -3926, 144 ), ( 0, 270, 0 ) );
    var_0[4] = get_corpse_array( ( -4054, -2949, 628 ), ( 0, 270, 0 ) );
    var_0[5] = get_corpse_array( ( 848, -2529, 1360 ), ( 0, 270, 0 ) );
    var_0[6] = get_corpse_array( ( -32, 84, 1760 ), ( 0, 50, 0 ) );
    var_0[7] = get_corpse_array( ( 3660, 2998, 192 ), ( 0, 30, 0 ) );
    var_0[8] = get_corpse_array( ( -1234, 3890, 1072 ), ( 0, 90, 0 ) );
    var_0[9] = get_corpse_array( ( 1154, 3796, 949 ), ( 0, 320, 0 ) );
    var_0[10] = get_corpse_array( ( -4967, 4679, 616 ), ( 0, 90, 0 ) );
    var_0[11] = get_corpse_array( ( -2274, 6468, 880 ), ( 0, 130, 0 ) );
    var_0[12] = get_corpse_array( ( -1398, 10000, 656 ), ( 0, 45, 0 ) );
    var_0[13] = get_corpse_array( ( 1756, 9261, 664 ), ( 0, 95, 0 ) );
    var_0[14] = get_corpse_array( ( 489, 7480, 837 ), ( 0, 285, 0 ) );
    var_0[15] = get_corpse_array( ( -1448, -2097, 1262 ), ( 0, 181, 0 ) );
    var_0[16] = get_corpse_array( ( -4485, 5703, 152 ), ( 0, 200, 0 ) );
    return var_0;
}

get_corpse_array( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.origin = var_0;
    var_3.angles = var_1;
    return var_3;
}

#using_animtree("script_model");

get_allykilled_alias()
{
    var_0 = spawn( "script_model", self.origin );
    var_0 setmodel( "tag_origin" );
    var_0 useanimtree( #animtree );
    var_0.animname = "endingCam";
    return var_0;
}

intro_heli_add_player( var_0 )
{
    self notify( "ending_fade_in" );
    self endon( "ending_fade_in" );
    self endon( "disconnect" );
    var_1 = var_0 * 20;
    var_2 = 1;
    var_3 = 1.0 / var_1;
    self setclientomnvar( "ui_world_fade", var_2 );

    for ( var_4 = 0; var_4 < var_1; var_4++ )
    {
        waitframe();
        var_2 = var_2 - var_3;
        var_2 = max( var_2, 0 );
        self setclientomnvar( "ui_world_fade", var_2 );
    }
}

intro_heli_animate_player( var_0 )
{
    self notify( "ending_fade_out" );
    self endon( "ending_fade_out" );
    self endon( "disconnect" );
    var_1 = var_0 * 20;
    var_2 = 0;
    var_3 = 1.0 / var_1;
    self setclientomnvar( "ui_world_fade", var_2 );

    for ( var_4 = 0; var_4 < var_1; var_4++ )
    {
        waitframe();
        var_2 = var_2 + var_3;
        var_2 = min( var_2, 1 );
        self setclientomnvar( "ui_world_fade", var_2 );
    }
}

create_player_rig( var_0, var_1, var_2, var_3 )
{
    self.animname = var_0;
    var_4 = var_2.origin;

    if ( !isdefined( var_4 ) )
        var_4 = ( 0, 0, 0 );

    var_5 = spawn( "script_model", var_4 );
    var_5.player = self;
    self.player_rig = var_5;
    self.player_rig setmodel( var_1 );
    self.player_rig hide();
    self.player_rig.animname = var_0;
    self.player_rig useanimtree( #animtree );
    self.player_rig._id_135D9 = self._id_135D9;
    self.player_rig.cinematic_motion_override = scripts\mp\utility\infilexfil::handlecinematicmotionnotetrack;
    self.player_rig.dof_func = scripts\mp\utility\infilexfil::handledofnotetrack;

    if ( !isdefined( var_2.watchweapondrop ) )
        var_2.watchweapondrop = [];

    if ( isplayer( self ) )
    {
        self playerlinktodelta( self.player_rig, "tag_player", 1.0, 0, 0, 0, 0, 1 );
        var_2.watchweapondrop[var_2.watchweapondrop.size] = self.player_rig;
    }
    else
        self.player_rig._id_135D9 = 0;

    self notify( "rig_created" );
}

remove_player_rig()
{
    if ( isdefined( self ) )
        self unlink();

    if ( isdefined( self.player_rig ) )
        self.player_rig delete();
}

get_center_of_array( var_0 )
{
    var_1 = ( 0, 0, 0 );

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
        var_1 = ( var_1[0] + var_0[var_2].origin[0], var_1[1] + var_0[var_2].origin[1], var_1[2] + var_0[var_2].origin[2] );

    if ( var_0.size != 0 )
        return ( var_1[0] / var_0.size, var_1[1] / var_0.size, var_1[2] / var_0.size );

    return undefined;
}

exfil_sequence( var_0 )
{
    thread exfil_heli_landing( 5, var_0 );

    if ( !getdvarint( "scr_br_ending_placement" ) )
    {
        self._id_12DC2 = matchdata_br_onmatchstart();
        unloadinfiltransient( self._id_12DC2 );
        setomnvarforallclients( "ui_br_end_game_splash_type", 18 );
        var_1 = getdvarfloat( "scr_br_end_transient_wait", 6.0 );
        wait( var_1 );
    }

    var_2 = _id_1275E( "veh8_mil_air_blima_scriptmodel" );
    var_2 hidepart( "tag_main_rotor_blade_01" );
    var_2 hidepart( "tag_main_rotor_blade_02" );
    var_2 hidepart( "tag_main_rotor_blade_03" );
    var_2 hidepart( "tag_main_rotor_blade_04" );
    var_2 hidepart( "tag_tail_rotor_blade_01" );
    var_2 hidepart( "tag_tail_rotor_blade_02" );
    var_2 hidepart( "tag_tail_rotor_blade_03" );
    var_2 hidepart( "tag_tail_rotor_blade_04" );
    self.isspreadweapon = var_2;
    exfil_smoke_vfx();
    var_3 = [ "head_mp_helicopter_crew", "j_spine4" ];
    var_4 = [ var_3 ];
    var_5 = "body_pilot_helicopter_british";
    var_6 = _id_1275E( var_5, undefined, var_4 );
    self._id_12037 = var_6;
    self.winners = scripts\engine\utility::array_removeundefined( self.winners );

    if ( self.winners.size == 0 )
        get_base_focus_fire_multipler( self );

    thread scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "exfilStart", self.winners );
    var_7 = _id_1275E( "equipment_fast_rope_wm_01_infil_heli_l" );
    self.rope = var_7;
    self.disable_heli_lights = get_allykilled_alias();
    var_8 = [];
    var_8[0] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender0" );

    if ( self.winners.size > 1 )
        var_8[1] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender1" );

    if ( self.winners.size > 2 )
        var_8[2] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender2" );

    if ( self.winners.size > 3 )
        var_8[3] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender3" );

    self.br_practice_match = var_8;
    self.v_end_pos = [];
    var_9 = 0;
    self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene1" );
    self.v_end_pos[var_9] ammo_crate_think( [], ::exfil_spawnfunc );
    self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh010 );
    self.v_end_pos[var_9] ammo_cache_used( var_6, %br_exfil_co_sh010 );
    self.v_end_pos[var_9] ammo_cache_used( var_7, %br_exfil_rope_sh010 );
    self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh010 );
    self.v_end_pos[var_9] ammo_cache_think( "chopperExfil_gas", self.origin, self.angles );
    var_9++;
    self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene2" );
    self.v_end_pos[var_9] ammo_crate_think( self.winners, ::exfil_spawning_logic );
    self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh020 );

    if ( !isdefined( level.scr_notetrack["veh8_mil_air_blima_scriptmodel"] ) || !isdefined( level.scr_notetrack["veh8_mil_air_blima_scriptmodel"]["any"]["guy0_aboard"] ) )
    {
        scripts\common\anim::addnotetrack_customfunction( "veh8_mil_air_blima_scriptmodel", "guy0_aboard", ::exit_laser_panel_anim_sequence );
        scripts\common\anim::addnotetrack_customfunction( "veh8_mil_air_blima_scriptmodel", "guy1_aboard", ::exit_laststand_usability );
        scripts\common\anim::addnotetrack_customfunction( "veh8_mil_air_blima_scriptmodel", "guy2_aboard", ::exit_level );
        scripts\common\anim::addnotetrack_customfunction( "veh8_mil_air_blima_scriptmodel", "slamtoblack", ::exit_open );
    }

    self.v_end_pos[var_9] ammo_cache_used( var_6, %br_exfil_pilot_sh020 );
    self.v_end_pos[var_9] ammo_cache_used( var_7, %br_exfil_rope_sh020 );
    self.v_end_pos[var_9] ammo_cache_used( var_8[0], %br_exfil_ascender0_sh020 );

    if ( self.winners.size > 1 )
        self.v_end_pos[var_9] ammo_cache_used( var_8[1], %br_exfil_ascender1_sh020 );

    if ( self.winners.size > 2 )
        self.v_end_pos[var_9] ammo_cache_used( var_8[2], %br_exfil_ascender2_sh020 );

    if ( self.winners.size > 3 )
        self.v_end_pos[var_9] ammo_cache_used( var_8[3], %br_exfil_ascender3_sh020 );

    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh020, %br_exfil_guy0_sh020_fem );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh020, %br_exfil_guy1_sh020_fem );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh020, %br_exfil_guy2_sh020_fem );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh020, %br_exfil_guy3_sh020_fem );
    self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh020 );
    var_9++;
    self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene2.5" );
    self.v_end_pos[var_9] ammo_crate_think( self.winners, ::exfil_speed );
    self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh025 );
    self.v_end_pos[var_9] ammo_cache_used( var_6, %br_exfil_pilot_sh025 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh025 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh025 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh025 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh025 );
    self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh025 );
    var_9++;
    self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene3" );
    self.v_end_pos[var_9] ammo_crate_think( self.winners, ::exfil_spots_objs_settings );
    self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh030 );
    self.v_end_pos[var_9] ammo_cache_used( var_6, %br_exfil_pilot_sh030 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh030, %br_exfil_guy0_sh030_fem, %br_exfil_guy0_sh030_jugg );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh030, %br_exfil_guy1_sh030_fem, %br_exfil_guy1_sh040_jugg );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh030, %br_exfil_guy2_sh030_fem, %br_exfil_guy2_sh050_jugg );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh030, %br_exfil_guy3_sh030_fem, %br_exfil_guy3_sh060_jugg );
    self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh030 );

    if ( self.winners.size >= 2 )
    {
        var_9++;
        self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene4" );
        self.v_end_pos[var_9] ammo_crate_think( [ var_6 ], ::exfilallyturning );
        self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh040 );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh040, %br_exfil_guy0_sh040_fem, %br_exfil_guy0_sh030_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh040, %br_exfil_guy1_sh040_fem, %br_exfil_guy1_sh040_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh040, %br_exfil_guy2_sh040_fem, %br_exfil_guy2_sh050_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh040, %br_exfil_guy3_sh040_fem, %br_exfil_guy3_sh060_jugg );
        self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh040 );
    }

    if ( self.winners.size >= 3 )
    {
        var_9++;
        self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene5" );
        self.v_end_pos[var_9] ammo_crate_think( [], ::exfilchopper );
        self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh050 );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh050, %br_exfil_guy0_sh050_fem, %br_exfil_guy0_sh030_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh050, %br_exfil_guy1_sh050_fem, %br_exfil_guy1_sh040_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh050, %br_exfil_guy2_sh050_fem, %br_exfil_guy2_sh050_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh050, %br_exfil_guy3_sh050_fem, %br_exfil_guy3_sh060_jugg );
        self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh050 );
    }

    if ( self.winners.size == 4 )
    {
        var_9++;
        self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene6" );
        self.v_end_pos[var_9] ammo_crate_think( [], ::exfill_chopper_dialogue );
        self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh060 );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh060, %br_exfil_guy0_sh060_fem, %br_exfil_guy0_sh030_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh060, %br_exfil_guy1_sh060_fem, %br_exfil_guy1_sh040_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh060, %br_exfil_guy2_sh060_fem, %br_exfil_guy2_sh050_jugg );
        self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh060, %br_exfil_guy3_sh060_fem, %br_exfil_guy3_sh060_jugg );
        self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh060 );
    }

    var_9++;
    self.v_end_pos[var_9] = get_all_doors_ai_should_open( "scene7" );
    self.v_end_pos[var_9] ammo_crate_think( [], ::exfill_vehicle );
    self.v_end_pos[var_9] ammo_cache_used( var_2, %br_exfil_blima_sh070 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh070 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh070 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh070 );
    self.v_end_pos[var_9] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh070 );
    self.v_end_pos[var_9] ammo_cache_delete( %br_exfil_cam_sh070 );
}

isplayeronintelchallenge( var_0 )
{
    thread exfil_heli_landing( 5, var_0 );

    if ( !getdvarint( "scr_br_ending_placement" ) )
    {
        self._id_12DC2 = matchdata_br_onmatchstart();
        unloadinfiltransient( self._id_12DC2 );
        setomnvarforallclients( "ui_br_end_game_splash_type", 18 );
        var_1 = getdvarfloat( "scr_br_end_transient_wait", 6.0 );
        wait( var_1 );
    }

    var_2 = _id_1275E( "veh8_mil_air_blima_scriptmodel" );
    var_2 hidepart( "tag_main_rotor_blade_01" );
    var_2 hidepart( "tag_main_rotor_blade_02" );
    var_2 hidepart( "tag_main_rotor_blade_03" );
    var_2 hidepart( "tag_main_rotor_blade_04" );
    var_2 hidepart( "tag_tail_rotor_blade_01" );
    var_2 hidepart( "tag_tail_rotor_blade_02" );
    var_2 hidepart( "tag_tail_rotor_blade_03" );
    var_2 hidepart( "tag_tail_rotor_blade_04" );
    self.isspreadweapon = var_2;
    exfil_smoke_vfx();
    var_3 = [ "head_mp_helicopter_crew", "j_spine4" ];
    var_4 = [ var_3 ];
    var_5 = "body_pilot_helicopter_british";
    var_6 = _id_1275E( var_5, undefined, var_4 );
    self._id_12037 = var_6;
    var_7 = _id_1275E( "body_mp_rus_s4polina_02" );
    self._id_11AF9 = var_7;
    var_8 = [ "lm_rus_s4_sandbag_lrg_01_vm", "J_prop_2" ];
    var_9 = [ "me_fabric_canopy_01", "J_prop_3" ];
    var_10 = [ var_8, var_9 ];
    var_11 = _id_1275E( "generic_prop_x5", undefined, var_10 );
    self._id_11C06 = var_11;
    var_3 = _id_1275E( "head_mp_rus_s4polina_01" );
    var_7.head = var_3;
    var_12 = _id_1275E( "vm_moscar32_01_comp" );
    var_7.rifle = var_12;
    var_7.head hide();
    var_7.rifle hide();
    var_7 hide();
    var_11.linkedents[0] hide();
    var_11.linkedents[1] hide();
    var_11 hide();
    self.winners = scripts\engine\utility::array_removeundefined( self.winners );

    if ( self.winners.size == 0 )
        get_base_focus_fire_multipler( self );

    thread scripts\mp\gametypes\br_gametypes.gsc::_id_1209E( "exfilStart", self.winners );
    var_13 = _id_1275E( "equipment_fast_rope_wm_01_infil_heli_l" );
    self.rope = var_13;
    self.disable_heli_lights = get_allykilled_alias();
    var_14 = [];
    var_14[0] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender0" );

    if ( self.winners.size > 1 )
        var_14[1] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender1" );

    if ( self.winners.size > 2 )
        var_14[2] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender2" );

    if ( self.winners.size > 3 )
        var_14[3] = _id_1275E( "misc_wm_ascender", "misc_wm_ascender3" );

    self.br_practice_match = var_14;
    self.v_end_pos = [];
    var_15 = 0;
    self.v_end_pos[var_15] = get_all_doors_ai_should_open( "scene1" );
    self.v_end_pos[var_15] ammo_crate_think( [], ::exfil_spawnfunc );
    self.v_end_pos[var_15] ammo_cache_used( var_2, %br_exfil_blima_sh010 );
    self.v_end_pos[var_15] ammo_cache_used( var_6, %br_exfil_co_sh010 );
    self.v_end_pos[var_15] ammo_cache_used( var_13, %br_exfil_rope_sh010 );
    self.v_end_pos[var_15] ammo_cache_delete( %br_exfil_cam_sh010 );
    self.v_end_pos[var_15] ammo_cache_think( "chopperExfil_gas", self.origin, self.angles );
    var_15++;
    self.v_end_pos[var_15] = get_all_doors_ai_should_open( "scene2" );
    self.v_end_pos[var_15] ammo_crate_think( self.winners, ::exfil_spawning_logic );
    self.v_end_pos[var_15] ammo_cache_used( var_2, %br_exfil_blima_sh020 );
    self.v_end_pos[var_15] ammo_cache_used( var_6, %br_exfil_pilot_sh020 );
    self.v_end_pos[var_15] ammo_cache_used( var_13, %br_exfil_rope_sh020 );
    self.v_end_pos[var_15] ammo_cache_used( var_14[0], %br_exfil_ascender0_sh020 );

    if ( self.winners.size > 1 )
        self.v_end_pos[var_15] ammo_cache_used( var_14[1], %br_exfil_ascender1_sh020 );

    if ( self.winners.size > 2 )
        self.v_end_pos[var_15] ammo_cache_used( var_14[2], %br_exfil_ascender2_sh020 );

    if ( self.winners.size > 3 )
        self.v_end_pos[var_15] ammo_cache_used( var_14[3], %br_exfil_ascender3_sh020 );

    if ( self.winners.size > 1 )
        self.v_end_pos[var_15] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh020, %br_exfil_guy0_sh020_fem );

    if ( self.winners.size > 2 )
        self.v_end_pos[var_15] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh020, %br_exfil_guy1_sh020_fem );

    if ( self.winners.size > 3 )
        self.v_end_pos[var_15] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh020, %br_exfil_guy2_sh020_fem );

    switch ( self.winners.size )
    {
        case 1:
            self.v_end_pos[var_15] ammo_crate_spawn( self.winners[0], %br_exfil_guy0_sh020_killed, %br_exfil_guy0_sh020_killed );

            if ( !isdefined( level.scr_notetrack[self.winners[0].animname] ) || !isdefined( level.scr_notetrack[self.winners[0].animname]["any"]["slomo_in"] ) )
            {
                scripts\common\anim::addnotetrack_customfunction( self.winners[0].animname, "slomo_in", ::isplayermatched );
                scripts\common\anim::addnotetrack_customfunction( self.winners[0].animname, "slomo_out", ::isplayeronground );
                scripts\common\anim::addnotetrack_customfunction( self.winners[0].animname, "death_end", ::isplayerinsiderectangularzone );
                scripts\common\anim::addnotetrack_customfunction( self.winners[0].animname, "weapon_off", ::isplayerloading );
            }

            break;
        case 2:
            self.v_end_pos[var_15] ammo_crate_spawn( self.winners[1], %br_exfil_guy1_sh020_killed, %br_exfil_guy1_sh020_killed );

            if ( !isdefined( level.scr_notetrack[self.winners[1].animname] ) || !isdefined( level.scr_notetrack[self.winners[1].animname]["any"]["slomo_in"] ) )
            {
                scripts\common\anim::addnotetrack_customfunction( self.winners[1].animname, "slomo_in", ::isplayermatched );
                scripts\common\anim::addnotetrack_customfunction( self.winners[1].animname, "slomo_out", ::isplayeronground );
                scripts\common\anim::addnotetrack_customfunction( self.winners[1].animname, "death_end", ::isplayerinsiderectangularzone );
                scripts\common\anim::addnotetrack_customfunction( self.winners[1].animname, "weapon_off", ::isplayerloading );
            }

            break;
        case 3:
            self.v_end_pos[var_15] ammo_crate_spawn( self.winners[2], %br_exfil_guy2_sh020_killed, %br_exfil_guy2_sh020_killed );

            if ( !isdefined( level.scr_notetrack[self.winners[2].animname] ) || !isdefined( level.scr_notetrack[self.winners[2].animname]["any"]["slomo_in"] ) )
            {
                scripts\common\anim::addnotetrack_customfunction( self.winners[2].animname, "slomo_in", ::isplayermatched );
                scripts\common\anim::addnotetrack_customfunction( self.winners[2].animname, "slomo_out", ::isplayeronground );
                scripts\common\anim::addnotetrack_customfunction( self.winners[2].animname, "death_end", ::isplayerinsiderectangularzone );
                scripts\common\anim::addnotetrack_customfunction( self.winners[2].animname, "weapon_off", ::isplayerloading );
            }

            break;
        case 4:
            self.v_end_pos[var_15] ammo_crate_spawn( self.winners[3], %br_exfil_guy3_sh020_killed, %br_exfil_guy3_sh020_killed );

            if ( !isdefined( level.scr_notetrack[self.winners[3].animname] ) || !isdefined( level.scr_notetrack[self.winners[3].animname]["any"]["slomo_in"] ) )
            {
                scripts\common\anim::addnotetrack_customfunction( self.winners[3].animname, "slomo_in", ::isplayermatched );
                scripts\common\anim::addnotetrack_customfunction( self.winners[3].animname, "slomo_out", ::isplayeronground );
                scripts\common\anim::addnotetrack_customfunction( self.winners[3].animname, "death_end", ::isplayerinsiderectangularzone );
                scripts\common\anim::addnotetrack_customfunction( self.winners[3].animname, "weapon_off", ::isplayerloading );
            }

            break;
    }

    self.v_end_pos[var_15] ammo_cache_delete( %br_exfil_cam_sh020 );
}

isplayerloading( var_0 )
{
    var_0.player scripts\mp\utility\infilexfil::givegunless();
}

isplayermatched( var_0 )
{
    setslowmotion( 1.0, 0.25, 0.1 );
}

isplayeronground( var_0 )
{
    setslowmotion( 0.25, 1.0, 0.1 );
}

isplayerinsiderectangularzone( var_0 )
{
    level.claymore_crate_update_hint_logic_alt.disable_heli_lights notify( "single anim", "end" );
}

isplayerinorgoingtogulag( var_0 )
{
    setomnvarforallclients( "ui_world_fade", 1 );
    level.claymore_crate_update_hint_logic_alt.disable_heli_lights notify( "single anim", "end" );
}

isplayerinsiderectangularzonebasedonent( var_0 )
{
    boltnumber( 4.8, 130, 4, 8 );
}

matchdata_br_onmatchstart()
{
    switch ( level.script )
    {
        case "mp_donetsk":
            return "mp_infil_br_donetsk_ending_chopper_tr";
        case "mp_donetsk2":
            return "mp_infil_br_donetsk2_ending_chopper_tr";
        case "mp_don3":
            return "mp_infil_br_don3_ending_chopper_tr";
        case "mp_br_quarry":
            return "mp_infil_br_quarry_ending_chopper_tr";
        case "mp_br_mechanics":
            return "mp_infil_br_mechanics_ending_chopper_tr";
        case "mp_kstenod":
            return "mp_infil_br_kstenod_ending_chopper_tr";
        case "mp_escape2":
            return "mp_infil_br_escape2_ending_chopper_tr";
        case "mp_escape2_pm":
            return "mp_infil_br_escape2_pm_ending_chopper_tr";
        case "mp_escape3":
            return "mp_infil_br_escape3_ending_chopper_tr";
        case "mp_don4":
            return "mp_infil_br_don4_ending_chopper_tr";
        case "mp_don4_pm":
            return "mp_infil_br_don4_ending_chopper_tr";
        case "mp_wz_island":
            return "mp_infil_br_don4_ending_chopper_tr";
        case "mp_br_tut2":
            return "mp_infil_br_quarry_ending_chopper_tr";
    }

    return "";
}

exfil_heli_landing( var_0, var_1 )
{
    var_2 = self.origin + ( 0, 0, 1000 );
    var_3 = vectornormalize( var_2 - var_1 );
    var_4 = var_2 + var_3 * 3000;
    var_5 = spawn( "script_model", var_4 );
    var_5 playsound( "br_exfil_incoming_heli_lr" );
    var_5 moveto( var_2, var_0 );
    wait( var_0 );
    var_5 delete();
}

exfil_objective()
{
    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 0 )
        return;

    var_0 = "mus_br_exfil_intro_3player_pm_intro";
    var_1 = "br_exfil_part1_3person_lr";

    if ( level.claymore_crate_update_hint_logic_alt.istrialslevel == "exfil5" )
    {
        var_0 = "mus_br_exfil_intro_3player_pm_intro";
        var_1 = "br_exfil_part1_3person_lr";

        switch ( level.claymore_crate_update_hint_logic_alt.winners.size )
        {
            case 1:
                var_0 = "mus_br_exfil_intro_1player_polina_intro";
                var_1 = "br_exfil_part1_1person_polina_lr";
                break;
            case 2:
                var_0 = "mus_br_exfil_intro_2player_polina_intro";
                var_1 = "br_exfil_part1_2person_polina_lr";
                break;
            case 3:
                var_0 = "mus_br_exfil_intro_3player_polina_intro";
                var_1 = "br_exfil_part1_3person_polina_lr";
                break;
            case 4:
                var_0 = "mus_br_exfil_intro_4player_polina_intro";
                var_1 = "br_exfil_part1_4person_polina_lr";
                break;
        }

        soundsettimescalefactor( "br_exfil_fx_unres_2d", 0 );
        soundsettimescalefactor( "br_exfil_lfe_unres_2d", 0 );
        soundsettimescalefactor( "music_lr", 0 );
    }
    else
    {
        var_0 = "mus_br_exfil_intro_3player_pm_intro";
        var_1 = "br_exfil_part1_3person_lr";

        switch ( level.claymore_crate_update_hint_logic_alt.winners.size )
        {
            case 1:
                var_0 = "mus_br_exfil_intro_1player_pm_intro";
                var_1 = "br_exfil_part1_1person_lr";
                break;
            case 2:
                var_0 = "mus_br_exfil_intro_2player_pm_intro";
                var_1 = "br_exfil_part1_2person_lr";
                break;
            case 3:
                var_0 = "mus_br_exfil_intro_3player_pm_intro";
                var_1 = "br_exfil_part1_3person_lr";
                break;
            case 4:
                var_0 = "mus_br_exfil_intro_4player_pm_intro";
                var_1 = "br_exfil_part1_4person_lr";
                break;
        }
    }

    foreach ( var_3 in level.players )
    {
        var_3 playlocalsound( var_1 );
        var_3 playlocalsound( var_0 );
    }

    waitframe();
    setmusicstate( "" );

    foreach ( var_3 in level.players )
        var_3 setsoundsubmix( "mp_br_exfil_fade", 4 );
}

exfil_regroup_spot()
{
    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 0 )
        return;

    var_0 = "br_exfil_main_3player_pm";

    switch ( level.claymore_crate_update_hint_logic_alt.winners.size )
    {
        case 1:
            var_0 = "br_exfil_main_1player_pm";
            break;
        case 2:
            var_0 = "br_exfil_main_2player_pm";
            break;
        case 3:
            var_0 = "br_exfil_main_3player_pm";
            break;
        case 4:
            var_0 = "br_exfil_main_4player_pm";
            break;
    }

    setmusicstate( var_0 );
}

exfil_spawners_triggered( var_0 )
{
    if ( isdefined( var_0 ) )
        wait( var_0 );

    if ( level.claymore_crate_update_hint_logic_alt.istrialslevel != "exfil5" )
    {
        foreach ( var_2 in level.players )
            var_2 playlocalsound( "br_exfil_end_part_lr" );
    }
}

exfil_spawnfunc( var_0 )
{
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();
    thread exfil_objective();

    if ( !scripts\mp\gametypes\br_public.gsc::respawntokenenabled() )
        setomnvarforallclients( "ui_br_end_game_splash_type", 17 );

    if ( isdefined( level.claymore_crate_use ) )
    {
        level.claymore_crate_update_hint_logic_alt._id_12037 show();

        foreach ( var_2 in level.players )
            var_2.player_rig unlink();
    }

    boltnumber( 2.8, 200 );
}

exfil_spawning_logic( var_0 )
{
    boltnumber( 2.8, 250 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( isdefined( level.claymore_crate_use ) )
    {
        foreach ( var_2 in level.claymore_crate_update_hint_logic_alt.br_practice_match )
            var_2 show();
    }

    foreach ( var_5 in var_0 )
    {
        if ( isdefined( var_5 ) )
            var_5 scripts\mp\utility\player::_id_1248D( "60", 1 );
    }
}

exfil_speed( var_0 )
{
    boltnumber( 2.8, 250 );

    if ( !isdefined( level.claymore_crate_use ) )
    {
        if ( level.claymore_crate_update_hint_logic_alt.winners.size < 4 )
        {
            if ( isdefined( level.claymore_crate_update_hint_logic_alt.rope ) )
                level.claymore_crate_update_hint_logic_alt.rope delete();
        }
    }

    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( isdefined( level.claymore_crate_use ) )
    {
        foreach ( var_2 in level.claymore_crate_update_hint_logic_alt.br_practice_match )
            var_2 hide();
    }
    else
    {
        foreach ( var_2 in level.claymore_crate_update_hint_logic_alt.br_practice_match )
            var_2 delete();
    }

    var_6 = [ "tag_guy0", "tag_guy2", "tag_guy4", "tag_guy5" ];

    foreach ( var_8 in var_0 )
    {
        if ( !isdefined( var_8 ) )
            continue;

        if ( !isdefined( var_8._id_135D9 ) )
            continue;

        var_8.player_rig linkto( level.claymore_crate_update_hint_logic_alt.isspreadweapon, var_6[var_8._id_135D9], ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_8.shutdownattractionicontrigger = level.claymore_crate_update_hint_logic_alt.isspreadweapon;
        var_8.shutdowngulagforalivecount = var_6[var_8._id_135D9];
    }

    foreach ( var_11 in level.claymore_crate_update_hint_logic_alt.watchweapondrop )
    {
        if ( !isdefined( var_11 ) )
            continue;

        if ( isdefined( var_11.player ) )
            continue;

        if ( !isdefined( var_11._id_135D9 ) )
            continue;

        var_11 linkto( level.claymore_crate_update_hint_logic_alt.isspreadweapon, var_6[var_11._id_135D9], ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_11.shutdownattractionicontrigger = level.claymore_crate_update_hint_logic_alt.isspreadweapon;
        var_11.shutdowngulagforalivecount = var_6[var_11._id_135D9];
    }

    existingkills( var_0 );
}

isplayervalidrespawntarget( var_0 )
{
    boltnumber( 4.8, 92, 100, 100 );
    boltdeletethread( 13 );
    level.claymore_crate_update_hint_logic_alt._id_11AF9 show();
    level.claymore_crate_update_hint_logic_alt._id_11AF9 hidepart( "j_helmet" );
    level.claymore_crate_update_hint_logic_alt._id_11AF9 hidepart( "j_head" );
    level.claymore_crate_update_hint_logic_alt._id_11AF9.head show();
    level.claymore_crate_update_hint_logic_alt._id_11AF9.rifle show();
    level.claymore_crate_update_hint_logic_alt._id_11C06 show();
    level.claymore_crate_update_hint_logic_alt._id_11C06.linkedents[0] show();

    if ( !isdefined( level.claymore_crate_use ) )
    {
        if ( level.claymore_crate_update_hint_logic_alt.winners.size < 4 )
        {
            if ( isdefined( level.claymore_crate_update_hint_logic_alt.rope ) )
                level.claymore_crate_update_hint_logic_alt.rope delete();
        }
    }

    if ( isdefined( level.claymore_crate_use ) )
    {
        foreach ( var_2 in level.claymore_crate_update_hint_logic_alt.br_practice_match )
            var_2 hide();
    }
    else
    {
        foreach ( var_2 in level.claymore_crate_update_hint_logic_alt.br_practice_match )
            var_2 delete();
    }
}

exfil_spots_objs_settings( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 setclienttriggeraudiozone( "br_exfil_heli_int", 0.05 );

    setomnvarforallclients( "ui_br_end_game_splash_type", 13 );
    boltdeletethread( 45 );
    boltnumber( 10, 18 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 1 )
        thread exfil_spawners_triggered( 1.266 );
}

exfilallyturning( var_0 )
{
    setomnvarforallclients( "ui_br_end_game_splash_type", 14 );
    boltdeletethread( 50 );
    boltnumber( 11, 30 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( isdefined( level.claymore_crate_use ) )
    {
        foreach ( var_2 in var_0 )
            var_2 hide();
    }
    else
        gulagfadetoblackspectatorsofplayer( var_0 );

    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 2 )
        thread exfil_spawners_triggered( 2.033 );
}

exfilchopper( var_0 )
{
    setomnvarforallclients( "ui_br_end_game_splash_type", 15 );
    boltdeletethread( 50 );
    boltnumber( 8, 14.5 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 3 )
        thread exfil_spawners_triggered( 2.0 );
}

exfill_chopper_dialogue( var_0 )
{
    setomnvarforallclients( "ui_br_end_game_splash_type", 16 );
    boltdeletethread( 55 );
    boltnumber( 3, 29 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();

    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 4 )
        thread exfil_spawners_triggered( 2.5 );
}

exfill_vehicle( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 clearclienttriggeraudiozone( 0.1 );

    boltdeletethread( 65 );
    boltnumber( 2.8, 500 );
    level.claymore_crate_update_hint_logic_alt.isspreadweapon thread executioncashmultiplier();
}

existingkills( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2 ) )
            var_2 scripts\mp\utility\player::_id_1248D( "30", 1 );
    }
}

exit_laser_panel_anim_sequence( var_0 )
{
    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 1 )
        _id_12A16();
}

exit_laststand_usability( var_0 )
{
    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 2 )
        _id_12A16();
}

exit_level( var_0 )
{
    if ( level.claymore_crate_update_hint_logic_alt.winners.size == 3 )
        _id_12A16();
}

exit_open( var_0 )
{
    if ( !isdefined( level.claymore_crate_use ) )
        setomnvarforallclients( "ui_world_fade", 1 );
}

_id_12A16()
{
    level.claymore_crate_update_hint_logic_alt.disable_heli_lights notify( "single anim", "end" );
}

exfil_smoke_vfx()
{
    if ( !isdefined( level.br_circle ) )
        return;

    if ( !isdefined( level.br_circle.dangercircleent ) )
        return;

    level.br_circle.dangercircleent brcirclemoveto( self.origin[0], self.origin[1], 9000, 0.05 );
}

gulagfadetoblackspectatorsofplayer( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2.linkedents ) )
            scripts\engine\utility::array_delete( var_2.linkedents );

        var_2 delete();
    }
}

executioncashmultiplier()
{
    self endon( "death" );
    wait 0.1;
    playfxontag( scripts\engine\utility::getfx( "chopperExfil_rotorwash" ), self, "tag_origin" );
}

exitdriver()
{
    level._effect["chopperExfil_rotorwash"] = loadfx( "vfx/iw8_br/gameplay/vfx_br_blima_rotor_infil.vfx" );
    level._effect["chopperExfil_gas"] = loadfx( "vfx/iw8_br/gameplay/circle/vfx_br_circle_gas_exfil_01.vfx" );
    level._effect["player_disconnect"] = loadfx( "vfx/iw8_br/gameplay/vfx_br_disconnect_player.vfx" );
}

isplayerusingtablet( var_0, var_1 )
{
    wait( var_0 );
    preloadcinematicforall( var_1, 1, 1 );
}

boltnumber( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_2 ) )
        var_2 = 100;

    if ( !isdefined( var_3 ) )
        var_3 = 100;

    foreach ( var_6 in level.players )
    {
        if ( !isdefined( var_6._id_121CB ) )
        {
            var_6._id_121CB = 1;
            var_6 enablephysicaldepthoffieldscripting();
        }

        if ( isdefined( var_4 ) )
        {
            var_6 setphysicaldepthoffield( var_0, var_1, var_2, var_3, var_4 );
            continue;
        }

        if ( isdefined( var_3 ) )
        {
            var_6 setphysicaldepthoffield( var_0, var_1, var_2, var_3 );
            continue;
        }

        if ( isdefined( var_2 ) )
        {
            var_6 setphysicaldepthoffield( var_0, var_1, var_2 );
            continue;
        }

        var_6 setphysicaldepthoffield( var_0, var_1 );
    }
}

boltdeletethread( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 setclientdvar( "QTSPTNLOL", var_0 );
}

boltdeleteonnote()
{
    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1._id_121CB ) )
        {
            var_1._id_121CB = undefined;
            var_1 disablephysicaldepthoffieldscripting();
        }
    }
}

_id_121C5()
{

}

get_all_doors_ai_should_open( var_0 )
{
    var_1 = spawnstruct();
    var_1.ents = [];
    var_1.players = [];
    var_1.disable_heli_lights = undefined;
    var_1.anime = var_0;
    var_1.v_end_pos = [];
    return var_1;
}

ammo_cache_used( var_0, var_1 )
{
    level.scr_anim[var_0.animname][self.anime] = var_1;
    level.scr_animname[var_0.animname][self.anime] = getanimname( var_1 );
    self.ents[self.ents.size] = var_0;
}

ammo_crate_think( var_0, var_1 )
{
    self.startfunc = var_1;
    self.van_initdamage = var_0;
}

ammo_crate_spawn( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_4 = undefined;

    if ( !isdefined( var_0.completesecretstashquest ) )
    {
        var_4 = "player" + var_0 getentitynumber();
        var_0.animname = var_4;
        var_0.completesecretstashquest = var_4;
    }
    else
        var_4 = var_0.completesecretstashquest;

    self.players[self.players.size] = var_0;
    var_5 = var_1;

    if ( isdefined( var_2 ) )
    {
        if ( isdefined( var_0.operatorcustomization ) && isdefined( var_0.operatorcustomization.gender ) && var_0.operatorcustomization.gender == "female" )
            var_5 = var_2;
    }

    if ( isdefined( var_3 ) )
    {
        if ( isdefined( var_0.isjuggernaut ) )
            var_5 = var_3;
    }

    level.scr_anim[var_4][self.anime] = var_5;
    level.scr_eventanim[var_4][self.anime] = getanimname( var_5 );
}

ammo_cache_delete( var_0 )
{
    self.disable_heli_lights = 1;
    level.scr_anim["endingCam"][self.anime] = var_0;
}

ammo_cache_think( var_0, var_1, var_2 )
{
    self.fx = var_0;
    self.loot_boxes = var_1;
    self.loop_emp_spark_vfx = var_2;
}

_id_1275E( var_0, var_1, var_2 )
{
    var_3 = spawn( "script_model", self.origin );
    var_3 setmodel( var_0 );

    if ( !isdefined( var_1 ) )
        var_1 = var_0;

    var_3.animname = var_1;
    var_3 useanimtree( #animtree );

    if ( isdefined( var_2 ) )
    {
        var_3.linkedents = [];

        foreach ( var_5 in var_2 )
        {
            var_6 = spawn( "script_model", self.origin );
            var_6 setmodel( var_5[0] );
            var_6 linkto( var_3, var_5[1], ( 0, 0, 0 ), ( 0, 0, 0 ) );
            var_3.linkedents[var_3.linkedents.size] = var_6;
        }
    }

    return var_3;
}

ammo_cache_setup( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawn( "script_model", self.origin );
    var_5 setmodel( var_0 );
    var_5 useanimtree( #animtree );

    if ( isdefined( var_4 ) )
        var_6 = var_4;
    else
        var_6 = var_0;

    var_5.animname = var_6;
    level.scr_anim[var_5.animname]["br_ending"] = var_2;

    if ( isdefined( var_3 ) )
        level.scr_animname[var_5.animname]["br_ending"] = var_3;

    if ( isdefined( var_1 ) )
    {
        var_5.linkedents = [];

        foreach ( var_8 in var_1 )
        {
            var_9 = spawn( "script_model", self.origin );
            var_9 setmodel( var_8[0] );
            var_9 linkto( var_5, var_8[1], ( 0, 0, 0 ), ( 0, 0, 0 ) );
            var_5.linkedents[var_5.linkedents.size] = var_9;
        }
    }

    self.pack.models[self.pack.models.size] = var_5;
    return var_5;
}
