// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_maxoutequipmentammo()
{

}

_maphint_cheesescriptableused()
{

}

_maphint_offerscriptableused()
{

}

init()
{
    register_script_model_animation();
    level thread register_subway_track();
    level thread register_maze_ai_spawners();
    level thread register_trap_room_objectives();
    level thread refreshsquadspawnareaomnvars();
    level thread relic_amped_reset_deathshield_on_revived();
    level thread puddle_fx();
    level thread init_locations();
    level._id_1254A = 1;
    level.jugg_assault3_check_size = [];
}

register_script_model_animation()
{
    level.cargo_truck_mg_initspawning = spawnstruct();
    level.cargo_truck_mg_initspawning._id_11F4D = getdvarfloat( "scr_bodycount_respawn_time_default", 5 );
    level.cargo_truck_mg_initspawning._id_11F4C = getdvarfloat( "scr_bodycount_respawn_time_add_per_circle", 2 );
    level.cargo_truck_mg_initspawning._id_129C6 = getdvarint( "scr_bodycount_starting_respawn_token_count", 1 );
    level.cargo_truck_mg_initspawning._id_129C3 = getdvar( "scr_bodycount_starting_loadout_weapon_1", "iw8_fists_mp" );
    level.cargo_truck_mg_initspawning._id_129C4 = getdvar( "scr_bodycount_starting_loadout_weapon_2", "iw8_sm_t9handling" );
    level.cargo_truck_mg_initspawning._id_129C2 = getdvar( "scr_bodycount_starting_loadout_lethal", "frag_grenade_mp" );
    level.cargo_truck_mg_initspawning.tutorial_lead_collected = getdvarint( "scr_bodycount_on_dogtag_pickup_health_refill", 1 );
    level.cargo_truck_mg_initspawning.tutorial_jumpfromplane = getdvarint( "scr_bodycount_on_dogtag_pickup_armor_refill", 1 );
    level.cargo_truck_mg_initspawning.tutorial_intro = getdvarint( "scr_bodycount_on_dogtag_pickup_ammo_refill", 1 );
    level.cargo_truck_mg_initspawning.tutorial_pullchute = getdvarint( "scr_bodycount_on_dogtag_pickup_speed_increase", 1 );
    level.cargo_truck_mg_initspawning.tutorial_playsound = getdvarfloat( "scr_bodycount_on_dogtag_pickup_overdrive_duration", 6 );

    if ( level.mapname == "mp_escape2" || level.mapname == "mp_escape3" )
        level.cargo_truck_mg_initspawning.ispointnearsoloascenderline = getdvarint( "scr_bodycount_exfil_extract_circle_index", 5 );
    else
        level.cargo_truck_mg_initspawning.ispointnearsoloascenderline = getdvarint( "scr_bodycount_exfil_extract_circle_index", 6 );

    level.cargo_truck_mg_initspawning.ispointinsidecircle = getdvarfloat( "scr_bodycount_exfil_delay_before_spawn", 90.0 );
    level.cargo_truck_mg_initspawning.isprogressionmismatch = getdvarfloat( "scr_bodycount_exfil_incoming_time", 20.0 );
    level.cargo_truck_mg_initspawning.isplunderextractionenabled = getdvarfloat( "scr_bodycount_exfil_chopper_fly_in_time", 15.0 );
    level.cargo_truck_mg_initspawning.isprophunt = getdvarfloat( "scr_bodycount_exfil_intro_splash_delay", 3.0 );
    level.cargo_truck_mg_initspawning.isredeploykeepweapons = getdvarint( "scr_bodycount_exfil_radius", 250 );
    level.cargo_truck_mg_initspawning.isplayinganim = getdvarint( "scr_bodycount_exfil_capture_time", 12.5 );
    level.cargo_truck_mg_initspawning._id_1320B = getdvarvector( "scr_bodycount_vehicle_impulse_vector", ( 0, 0, 0.5 ) );
    level.cargo_truck_mg_initspawning._id_1320A = getdvarfloat( "scr_bodycount_vehicle_impulse_magnitude", 150.0 );

    switch ( getdvarint( "scr_bodycount_circle_speed", 1 ) )
    {
        case 0:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 120, 90, 75, 60, 45, 30, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 150, 120, 120, 105, 105, 150, 10 ];
            break;
        case 2:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 120, 90, 60, 45, 45, 30, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 150, 120, 90, 90, 90, 150, 10 ];
            break;
        case 3:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 30, 10, 10, 10, 10, 30, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 20, 10, 10, 10, 10, 150, 10 ];
            break;
        case 4:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 90, 75, 60, 45, 45, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 135, 120, 105, 90, 150, 10 ];
            break;
        case 5:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 30, 10, 10, 10, 30, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 20, 10, 10, 10, 150, 10 ];
            break;
        case 1:
        default:
            level.cargo_truck_mg_initspawning.extra_delay = [ 0, 120, 90, 75, 60, 45, 45, 0 ];
            level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func = [ 1, 150, 135, 120, 105, 105, 150, 10 ];
            break;
    }

    setdvar( "scr_br_ending_enabled", 1 );
}

register_subway_track()
{
    _setdomflagiconinfo( "waypoint_captureneutral", "neutral", "MP_BR_INGAME/DOM_CAPTURE", 0 );
    _setdomflagiconinfo( "waypoint_capture", "enemy", "MP_BR_INGAME/DOM_CAPTURE", 0 );
    _setdomflagiconinfo( "waypoint_defend", "friendly", "MP_INGAME_ONLY/OBJ_DEFEND_CAPS", 0 );
    _setdomflagiconinfo( "waypoint_defending", "friendly", "MP_INGAME_ONLY/OBJ_DEFENDING_CAPS", 0 );
    _setdomflagiconinfo( "waypoint_contested", "contest", "MP_INGAME_ONLY/OBJ_CONTESTED_CAPS", 1 );
    _setdomflagiconinfo( "waypoint_taking", "friendly", "MP_INGAME_ONLY/OBJ_TAKING_CAPS", 1 );
    _setdomflagiconinfo( "waypoint_losing", "enemy", "MP_INGAME_ONLY/OBJ_LOSING_CAPS", 1 );
    level._effect["vfx_smk_signal_green"] = loadfx( "vfx/iw8_cp/prop/vfx_smk_signal_green" );
    scripts\mp\gametypes\br_dom_quest.gsc::_id_12442();
    level thread _id_12CB2();
}

_id_12CB2()
{
    level waittill( "br_dialog_initialized" );
    level.disableinitplayergameobjects = 0;
}

register_maze_ai_spawners()
{
    level.hvi_escort_exit = [];
    level.hvi_escort_exit[1] = hvi_escort_intro( 1, ::hvt_anim_and_close_doors );
    level.hvi_escort_exit[2] = hvi_escort_intro( 2, ::hurt_trigger_active );
    level.hvi_escort_exit[3] = hvi_escort_intro( 3, ::hunterswonending );
    level.hvi_escort_exit[4] = hvi_escort_intro( 4, ::humanspawninair );
    level.hvi_escort_exit[5] = hvi_escort_intro( 5, ::humanpowersenabled );
    level.hvi_escort_exit[6] = hvi_escort_intro( 6, ::hudsbredeploy );
    level.hvi_escort_exit[7] = hvi_escort_intro( 7, ::hurtplayersinbunker );
    level.hvi_escort_exit[8] = hvi_escort_intro( 8, ::hvi_patrol_exit );
    level.hvi_escort_exit[9] = hvi_escort_intro( 9, ::hudzombie );
}

refreshsquadspawnareaomnvars()
{
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "circleTimer", ::circletimer );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerWelcomeSplashes", ::_id_11A17 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "createC130PathStruct", ::get_focus_fire_icon_image );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "addToC130Infil", ::apc_rus_monitordriverturretreload );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "mapCenterFinalCircle", ::use_aitype );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "getFinalCircleCenter", ::use_aitype );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerGulagAutoWinWait", ::x1opsnpcs );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "triggerRespawnOverlay", ::_id_12E9D );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "assignSpectatorToSpectatePlayer", ::assignspectatortospectateplayer );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "markPlayerAsEliminatedOnKilled", ::ss_entergulag );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerNakedDropLoadout", ::zombieregenratescaleingas );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "dropOnPlayerDeath", ::droponplayerdeath );
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
    level thread _id_131BD();
    scripts\engine\scriptable::scriptable_addusedcallback( ::cargo_truck_mg_mp_init );
    scripts\engine\scriptable::_id_1219B( ::cargo_truck_mg_mp_init );
}

_id_11A17( var_0 )
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    wait 1;
    self waittill( "joining_Infil" );
    scripts\mp\hud_message::showsplash( "br_gametype_bodycount_welcome" );
    scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "gametype", self, 0 );
    scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "primary_objective", self, 0 );

    if ( istrue( self.revive_vo_time ) )
        level scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "deploy_squad_leader", self, 1, 0, 4.5 );
}

getgametypekillspermatchmaximum()
{
    self waittill( "game_ended" );

    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1 ) )
            onplayerdisconnect( var_1 );
    }

    foreach ( var_4 in level._id_128BE )
    {
        if ( isdefined( level._id_12618 ) )
        {
            [[ level._id_12618.squaddogtagscollected ]]( var_4.total, var_4.bistrexactive, var_4.is_kidnapping_player );
            [[ level._id_12618._id_128B1 ]]( var_4._id_11FCD );
        }
    }

    if ( istrue( level._id_135D1 ) && isdefined( level._id_12618 ) )
        [[ level._id_12618._id_135D1 ]]();
}

onplayerdisconnect( var_0 )
{
    var_1 = var_0 getentitynumber();

    if ( isdefined( level._id_119F0[var_1] ) )
    {
        var_2 = level._id_119F0[var_1];
        var_2.total = var_0 maxlootleadermarkcount();
        var_2.bistrexactive = var_0 manualturret_endturretuseonpush();
        var_2.is_kidnapping_player = var_0 maxtokensdropondeath();
        var_2._id_11FCD = var_0 maxkills();

        if ( !isdefined( var_0.power_wave_mode_reset_playerdata ) )
            var_2.vehicle_tracking_cp_post_spawn = 1;
        else
            var_2.vehicle_tracking_cp_post_spawn = var_0.power_wave_mode_reset_playerdata;

        if ( !isdefined( var_0.postspawn_vindia ) )
            var_2.jugg_canparachute = 0;
        else
            var_2.jugg_canparachute = var_0.postspawn_vindia;
    }
    else
    {
        var_2 = spawnstruct();
        var_2.total = var_0 maxlootleadermarkcount();
        var_2.bistrexactive = var_0 manualturret_endturretuseonpush();
        var_2.is_kidnapping_player = var_0 maxtokensdropondeath();
        var_2._id_11FCD = var_0 maxkills();

        if ( !isdefined( var_0.power_wave_mode_reset_playerdata ) )
            var_2.vehicle_tracking_cp_post_spawn = 1;
        else
            var_2.vehicle_tracking_cp_post_spawn = var_0.power_wave_mode_reset_playerdata;

        if ( !isdefined( var_0.postspawn_vindia ) )
            var_2.jugg_canparachute = 0;
        else
            var_2.jugg_canparachute = var_0.postspawn_vindia;
    }

    if ( isdefined( level._id_128BE[var_0.team] ) )
    {
        var_3 = level._id_128BE[var_0.team];
        var_3.total = var_3.total + var_2.total;
        var_3.bistrexactive = var_3.bistrexactive + var_2.bistrexactive;
        var_3.is_kidnapping_player = var_3.is_kidnapping_player + var_2.is_kidnapping_player;

        if ( var_2._id_11FCD > var_3._id_11FCD )
            var_3._id_11FCD = var_2._id_11FCD;
    }
    else
    {
        var_3 = spawnstruct();
        var_3.total = var_2.total;
        var_3.bistrexactive = var_2.bistrexactive;
        var_3.is_kidnapping_player = var_2.is_kidnapping_player;
        var_3._id_11FCD = var_2._id_11FCD;
    }

    level._id_119F0[var_1] = var_2;
    level._id_128BE[var_0.team] = var_3;

    if ( isdefined( level._id_12618 ) )
    {
        [[ level._id_12618.playerdogtagscollected ]]( var_0, var_2.total, var_2.bistrexactive, var_2.is_kidnapping_player );
        [[ level._id_12618._id_11984 ]]( var_0, var_2._id_11FCD );
        [[ level._id_12618.x1stash_detectplayers ]]( var_0, var_2.vehicle_tracking_cp_post_spawn );
        [[ level._id_12618.weapon_xp_iw8_sm_victor ]]( var_0, var_2.jugg_canparachute );
    }
}

cargo_truck_mg_mp_init( var_0, var_1, var_2, var_3, var_4 )
{
    switch ( var_0.type )
    {
        case "br_bodycount_dogtag":
            var_0.entity hvt_delayed_cig( var_3 );
            break;
        case "brloot_bodycount_dogtag":
            var_0 hvt_death_player_vo( var_3 );
            break;
        case "brloot_soa_pow_dogtag":
            var_0 hvt_death_player_vo( var_3 );
            break;
        case "brloot_bodycount_extra_life":
            var_3 prohibited_weapon_list();
            break;
    }
}

register_trap_room_objectives()
{
    if ( getdvarint( "scr_brbodycount_playtest", 0 ) )
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "allowLateJoiners" );

    level.circleposattime = ::extra_glow_sticks_init;
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "gulag" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "randomizeCircleCenter" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "planeSnapToOOB" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "useTokenToReviveTeammate" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "gulagWinnerRestoreLoadoutUseGulag" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "movingCircle" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "drogBagLoadout" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "match_start_VO" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "planeUseCircleRadius" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "circleEarlyStart" );
}

relic_amped_reset_deathshield_on_revived()
{
    level thread scripts\mp\gametypes\obj_dogtag.gsc::init();
    waittillframeend;
    level thread _id_11B0A();
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::onplayerspawned );
}

_id_11B0A()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_fade_done" );

    if ( !istrue( level.resettimeronkill ) )
    {
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onPlayerKilled", ::onplayerkilled );
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "dangerCircleTick", ::dangercircletick );
        level thread scripts\mp\gametypes\br_heavy_weapon_drop.gsc::init();
    }

    push_players_back_and_deal_damage();
    level._id_119F0 = [];
    level._id_128BE = [];

    foreach ( var_1 in level.players )
    {
        var_1 _id_1302B();
        var_2 = var_1 getentitynumber();
        level._id_119F0[var_2] = spawnstruct();
        level._id_119F0[var_2].total = var_1 maxlootleadermarkcount();
        level._id_119F0[var_2].bistrexactive = var_1 manualturret_endturretuseonpush();
        level._id_119F0[var_2].is_kidnapping_player = var_1 maxtokensdropondeath();
        level._id_119F0[var_2]._id_11FCD = var_1 maxkills();
        level._id_119F0[var_2].vehicle_tracking_cp_post_spawn = 0;
        level._id_119F0[var_2].jugg_canparachute = 0;

        if ( !isdefined( level._id_128BE[var_1.team] ) )
        {
            level._id_128BE[var_1.team] = spawnstruct();
            level._id_128BE[var_1.team].total = 0;
            level._id_128BE[var_1.team].bistrexactive = 0;
            level._id_128BE[var_1.team].is_kidnapping_player = 0;
            level._id_128BE[var_1.team]._id_11FCD = 0;
        }

        var_1 zombieregenratescaleingas();
    }

    level thread getgametypekillspermatchmaximum();
}

puddle_fx()
{
    wait 1;
    game["dialog"]["gametype"] = "gametype_powergrab";
    game["dialog"]["primary_objective"] = "powergrab_mode_desc";
    game["dialog"]["respawn_crate"] = "event_respawn_crate";
    game["dialog"]["exfil_enemy_50"] = "powergrab_enemy_50";
    game["dialog"]["exfil_enemy_start"] = "powergrab_enemy_capture";
    game["dialog"]["exfil_enemy_win"] = "powergrab_enemy_success";
    game["dialog"]["exfil_ready"] = "powergrab_exfil_standby";
    game["dialog"]["exfil_friendly_50"] = "powergrab_friendly_50";
    game["dialog"]["exfil_friendly_start"] = "powergrab_friendly_capture";
    game["dialog"]["exfil_friendly_win"] = "powergrab_friendly_success";
    game["dialog"]["no_respawns"] = "powergrab_respawn_0";
    game["dialog"]["dogtag_reward"] = "powergrab_unlock";
    game["dialog"]["collect_own_tags"] = "powergrab_your_tag";
    game["dialog"]["exfil_contested"] = "powergrab_zone_contest";
}

_keypadscriptableused_bunkeralt()
{

}

dangercircletick( var_0, var_1 )
{
    var_2 = var_1 * var_1;

    foreach ( var_4 in level.dogtags )
    {
        if ( distance2dsquared( var_4.origin, var_0 ) > var_2 )
            var_4 thread removetags();
    }

    foreach ( var_7 in level.jugg_assault3_check_size )
    {
        if ( !isdefined( var_7 ) )
            continue;

        if ( distance2dsquared( var_7.origin, var_0 ) > var_2 )
            var_7 thread jug_spawn_func();
    }

    foreach ( var_7 in level.playerexitcombatarea )
    {
        if ( !isdefined( var_7 ) )
            continue;

        if ( distance2dsquared( var_7.origin, var_0 ) > var_2 )
            var_7 scripts\mp\gametypes\br_heavy_weapon_drop.gsc::playerexecutionsdisable();
    }
}

ss_entergulag()
{
    return 0;
}

x1opsnpcs( var_0, var_1 )
{
    self endon( "disconnect" );

    if ( !isdefined( var_0 ) )
    {
        if ( level.cargo_truck_mg_initspawning._id_11F4D )
        {
            self.brtruck_initpostmain = 1;
            var_2 = level.cargo_truck_mg_initspawning._id_11F4D;
            wait 3;

            while ( istrue( self.killcam ) )
                waitframe();

            thread _id_12554( var_2 );
            thread scripts\mp\gametypes\br_spectate.gsc::spawnspectator( self, 0, 1 );
            wait( var_2 );
            self.brtruck_initpostmain = undefined;
            return 1;
        }
    }

    return 0;
}

_id_12E9D( var_0 )
{
    return 1;
}

assignspectatortospectateplayer( var_0, var_1 )
{
    var_0 notify( "assignSpectatorToSpectatePlayerWaitForTeam" );

    if ( istrue( level.current_volume_enemy ) )
        return 0;

    if ( !isdefined( var_1 ) || !isplayer( var_1 ) || !isalive( var_1 ) && !isdefined( var_1._id_12A76 ) )
        return 0;

    if ( var_0.team == var_1.team )
        return 0;

    if ( !scripts\mp\utility\teams::getteamdata( var_0.team, "aliveCount" ) )
        return 0;

    var_2 = scripts\mp\utility\teams::getfriendlyplayers( var_0.team, 1 );

    if ( var_2.size == 0 )
        return 0;

    thread branalytics_seteventdelayedstate( var_0 );
    return 1;
}

branalytics_seteventdelayedstate( var_0 )
{
    level endon( "brSpawnPlayersEnding" );
    var_0 endon( "assignSpectatorToSpectatePlayerWaitForTeam" );
    var_0 endon( "death_or_disconnect" );
    var_0 scripts\mp\gametypes\br_spectate.gsc::_id_119D9();
    var_0 setclientomnvar( "ui_show_spectateHud", var_0 getentitynumber() );
    wait 1.0;
    var_1 = scripts\mp\gametypes\br_spectate.gsc::movequestobjicon( var_0 );
    thread scripts\mp\gametypes\br_spectate.gsc::assignspectatortospectateplayer( var_0, var_1 );
}

onplayerspawned()
{
    thread _id_130AD();
}

onplayerkilled( var_0 )
{
    if ( self.postspawn_trucks <= 0 )
        self.attacker thread scripts\mp\utility\points::giveunifiedpoints( "br_gametype_bodycount_final_kill" );

    thread give_and_switch_to_primary_weapon();
}

_id_131BD()
{
    while ( !isdefined( level.vehicles ) || !isdefined( level.vehicles.damagecallbacks ) )
        wait 0.1;

    scripts\mp\vehicles\damage::set_post_mod_damage_callback( "atv", ::_id_13271 );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( "cargo_truck", ::_id_13271 );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( "jeep", ::_id_13271 );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( "tac_rover", ::_id_13271 );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( "little_bird", ::_id_13271 );
}

_id_13271( var_0 )
{
    if ( isdefined( var_0.direction_vec ) && isdefined( var_0.meansofdeath ) && isexplosivedamagemod( var_0.meansofdeath ) )
    {
        var_1 = level.cargo_truck_mg_initspawning._id_1320B;
        var_2 = level.cargo_truck_mg_initspawning._id_1320A;
        self _meth_87BF( var_0.direction_vec + var_1, var_2 );
    }

    return 1;
}

zombieregenratescaleingas()
{
    if ( !isdefined( self._id_1211C ) )
    {
        var_0 = getcompleteweaponname( level.cargo_truck_mg_initspawning._id_129C3 );
        var_1 = scripts\mp\class::delay_show_balloon( level.cargo_truck_mg_initspawning._id_129C4, "camo_01b", undefined, -1 );
        var_2 = getcompleteweaponname( level.cargo_truck_mg_initspawning._id_129C2 );
        var_3 = scripts\mp\equipment::getequipmentreffromweapon( var_2 );
        self giveweapon( var_0 );
        self giveweapon( var_1 );
        self switchtoweaponimmediate( var_1 );
        self assignweaponprimaryslot( var_1 );
        scripts\mp\gametypes\br_weapons.gsc::br_ammo_player_clear();
        scripts\mp\gametypes\br_weapons.gsc::br_ammo_give_type( self, "brloot_ammo_919", var_1.clipsize * 2 );
        scripts\mp\gametypes\br_weapons.gsc::br_ammo_update_weapons( self );
        self notify( "ammo_update" );
        scripts\mp\equipment::giveequipment( var_3, "primary" );
        scripts\mp\weapons::fixupplayerweapons( self, var_1 );
    }
    else
        zombienumhitstruck();

    scripts\mp\gametypes\br_armor.gsc::packsplashparambits( 150 );
}

_maphint_cheese2scriptableused()
{

}

spawndogtags( var_0, var_1, var_2 )
{
    level endon( "game_ended" );

    if ( isagent( var_0 ) )
        return;

    if ( isagent( var_1 ) )
        var_1 = var_1.owner;

    var_3 = 14;
    var_4 = ( 0, 0, 0 );
    var_5 = var_0.angles;

    if ( var_0 scripts\mp\gameobjects::touchingarbitraryuptrigger() )
    {
        var_5 = self getworldupreferenceangles();
        var_4 = anglestoup( var_5 );

        if ( var_4[2] < 0 )
            var_3 = -14;
    }

    var_6 = var_0.origin + ( 0, 0, var_3 );
    var_7 = spawn( "script_model", var_6 );
    var_7 setmodel( "military_dogtags_br_bodycount" );
    var_7 setotherent( var_0 );
    var_7 hudoutlineenable( "outline_depth_white" );
    var_7.team = var_0.team;
    eliminate_drone_internal();
    var_8 = "" + var_7 getentitynumber();
    var_7.projectilewaittilstucktimeout = var_8;
    level.dogtags[var_8] = var_7;
    var_7 setasgametypeobjective();
    var_7.victim = var_0;
    var_7.victimteam = var_0.team;
    var_7.attacker = var_1;
    var_7.attackerteam = var_1.team;
    var_7.ownerteam = var_0.team;
    var_7.spawntime = gettime();
    var_7 thread _id_12C57( var_0, var_2 );
    var_7.offset3d = ( 0, 0, 16 );
    var_7.curorigin = var_7.origin;
    var_7 scripts\mp\gameobjects::requestid( 1, 1 );
    var_7.type = "useObject";
    var_7.numtouching["axis"] = 0;
    var_7.numtouching["allies"] = 0;

    if ( isdefined( level.dogtags[var_8].objidnum ) )
    {
        if ( level.dogtags[var_8].objidnum != -1 )
        {
            var_9 = level.dogtags[var_8].objidnum;
            scripts\mp\objidpoolmanager::update_objective_state( var_9, "current" );
            scripts\mp\objidpoolmanager::update_objective_onentity( var_9, level.dogtags[var_8] );
            scripts\mp\objidpoolmanager::update_objective_setzoffset( var_9, 22 );
            scripts\mp\objidpoolmanager::update_objective_setbackground( var_9, 1 );
            scripts\mp\objidpoolmanager::objective_set_play_intro( level.dogtags[var_8].objidnum, 0 );
            scripts\mp\objidpoolmanager::objective_set_play_outro( level.dogtags[var_8].objidnum, 0 );
            level.dogtags[var_8] scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_dogtags_friendly", "waypoint_dogtags" );
            level.dogtags[var_8] scripts\mp\gameobjects::setvisibleteam( "any" );
            getbnetigrbattlepassxpmultiplier( var_9, 8858, 9843 );
            getscriptcachecontents( var_9, 0.5, 1.0 );
        }
    }

    playsoundatpos( var_6, "mp_killconfirm_tags_drop" );
}

eliminate_drone_internal()
{
    if ( level.dogtags.size > 60 )
    {
        var_0 = undefined;

        foreach ( var_2 in level.dogtags )
        {
            if ( !isdefined( var_0 ) || var_2.spawntime < var_0.spawntime )
                var_0 = var_2;
        }

        var_0 thread removetags();
    }
}

_id_12C57( var_0, var_1 )
{
    self endon( "death" );
    var_2 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, var_0, undefined, undefined, undefined, 1 );
    var_3 = var_2.origin;
    var_4 = abs( self.origin[2] - var_3[2] );
    var_5 = getdvarint( "NPOQPMP", 800 );
    var_6 = sqrt( 2 * var_4 / var_5 ) + 0.5;
    var_7 = trajectorycalculateinitialvelocity( self.origin, var_3, ( 0, 0, -1 * var_5 ), var_6 );
    self movegravity( var_7, var_6 );
    wait( var_6 );
    self.origin = var_3;

    if ( isdefined( var_2.phone ) )
    {
        self linkto( var_2.phone );
        self.phone = var_2.phone;
    }
}

hvt_delayed_cig( var_0 )
{
    if ( isdefined( var_0.owner ) )
        var_0 = var_0.owner;

    if ( getdvarint( "MLNNMOPQOP", 0 ) == 6 )
        var_0 scripts\cp\helicopter\chopper_boss::_id_11EFA( "t9_ch_global_collect_dog_tags_for_s3_5_event_wz", 1 );

    if ( var_0.pers["team"] == self.victimteam )
    {
        self playsound( "mp_killconfirm_tags_deny" );
        var_0 scripts\mp\rank::giverankxp( "tag_denied", 25 );
        var_0 scripts\mp\utility\stats::incpersstat( "denied", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "denied", var_0.pers["denied"] );
        var_0 thread hudglobalkillcountmax();
        scripts\mp\gametypes\obj_dogtag.gsc::allyonuse( var_0 );

        if ( var_0 == self.victim )
            level thread scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "collect_own_tags", var_0 );

        if ( isdefined( level.dogtagallyonusecb ) && !level.gameended )
            self thread [[ level.dogtagallyonusecb ]]( var_0 );

        var_0 progression_main();
    }
    else
    {
        self playsound( "mp_killconfirm_tags_pickup" );
        var_0 scripts\mp\utility\stats::incpersstat( "confirmed", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "confirmed", var_0.pers["confirmed"] );
        scripts\mp\gametypes\obj_dogtag.gsc::enemyonuse( var_0 );

        if ( isdefined( level.dogtagenemyonusecb ) && !level.gameended )
            self thread [[ level.dogtagenemyonusecb ]]( var_0 );

        var_0 scripts\cp\helicopter\chopper_boss::tv_station_intro_already_played();
        var_0 hudplunderstring();
        var_0 progression_update();
    }

    self.victim notify( "tag_removed" );
    thread removetags();
}

hvt_death_player_vo( var_0 )
{
    if ( isdefined( var_0.owner ) )
        var_0 = var_0.owner;

    if ( getdvarint( "MLNNMOPQOP", 0 ) == 6 )
        var_0 scripts\cp\helicopter\chopper_boss::_id_11EFA( "t9_ch_global_collect_dog_tags_for_s3_5_event_wz", 1 );

    var_1 = self.origin;
    playsoundatpos( var_1, "mp_killconfirm_tags_pickup" );
    var_0 scripts\mp\utility\stats::incpersstat( "confirmed", 1 );
    var_0 scripts\mp\persistence::statsetchild( "round", "confirmed", var_0.pers["confirmed"] );
    var_0 scripts\mp\gametypes\obj_dogtag.gsc::ontagpickupevent( "tag_collected" );
    var_0 scripts\cp\helicopter\chopper_boss::tv_station_intro_already_played();
    var_0 hudplunderstring();
}

removetags()
{
    playfx( level.conf_fx["vanish"], self.origin );
    self notify( "reset" );
    waitframe();

    if ( isdefined( self ) )
    {
        self notify( "death" );

        if ( isdefined( level.dogtags[self.projectilewaittilstucktimeout] ) )
        {
            if ( !isdefined( level.dogtags[self.projectilewaittilstucktimeout].skipminimapids ) )
            {
                level.dogtags[self.projectilewaittilstucktimeout] scripts\mp\gameobjects::releaseid();
                self notify( "deleted" );
            }

            level.dogtags[self.projectilewaittilstucktimeout] = undefined;
        }

        self delete();
    }
}

hvi_escort_intro( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.precache_hint_strings = var_0;
    var_2.logfriendlyfire = var_1;
    return var_2;
}

hudplunderstring()
{
    thread hudglobalkillcountmax();
    progression_speed();
    var_0 = maxlootleadermarkcount();

    for ( var_1 = 1; var_1 <= level.hvi_escort_exit.size; var_1++ )
    {
        if ( var_0 == level.hvi_escort_exit[var_1].precache_hint_strings )
        {
            self [[ level.hvi_escort_exit[var_1].logfriendlyfire ]]();
            self.postspawn_juggernaut = var_1;
            _id_1302B();
        }
    }
}

hudglobalkillcountmax()
{
    if ( !isdefined( self.vehicle ) )
    {
        if ( level.cargo_truck_mg_initspawning.tutorial_pullchute == 1 )
            thread water_stage();
    }

    scripts\mp\rank::giverankxp( "tag_collected", 25 );

    if ( level.cargo_truck_mg_initspawning.tutorial_intro == 1 )
        thread hudnumtoconsume();

    if ( level.cargo_truck_mg_initspawning.tutorial_lead_collected == 1 )
        self.health = self.maxhealth;

    if ( level.cargo_truck_mg_initspawning.tutorial_jumpfromplane == 1 )
    {
        self.br_armorhealth = self.br_maxarmorhealth;
        self setclientomnvar( "ui_br_armor_damage", 1 );
        scripts\mp\equipment\armor_plate::choppersupport_watchtargetrange( self.br_armorhealth );
    }

    thread waterentityarray();
}

hudnumtoconsume()
{
    self endon( "death_or_disconnect" );
    thread scripts\mp\equipment::givescavengerammo();
    scripts\mp\weapons::scavengergiveammo( self );
    waitframe();
    scripts\mp\weapons::scavengergiveammo( self );
}

hvt_anim_and_close_doors( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_UAV";
        return;
    }

    hurt_enabled( "uav" );
}

hurt_trigger_active( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_LEGENDARY_WEAPON_DROP";
        return;
    }

    scripts\mp\gametypes\br_pickups.gsc::br_forcegivecustompickupitem( self, "brloot_offhand_advancedlootdrop", 1 );
    thread scripts\mp\hud_message::showsplash( "br_body_count_legendary_weapon_drop" );
}

humanspawninair( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_CLUSTER_STRIKE";
        return;
    }

    hurt_enabled( "toma_strike" );
}

hudsbredeploy( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_ADVANCED_GAS_MASK";
        return;
    }

    thread scripts\mp\hud_message::showsplash( "br_body_count_rewarded_gas_mask" );
    scripts\mp\gametypes\br_pickups.gsc::br_forcegivecustompickupitem( self, "brloot_equip_gasmask_durable", 1 );
}

humanpowersenabled( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_ARMOR_SATCHEL";
        return;
    }

    scripts\mp\gametypes\br_pickups.gsc::br_forcegivecustompickupitem( self, "brloot_plate_pouch", 1 );
}

hurtplayersinbunker( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_PRECISION_AIRSTRIKE";
        return;
    }

    hurt_enabled( "precision_airstrike" );
}

hunterswonending( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_EXTRA_LIFE";
        return;
    }

    thread scripts\mp\hud_message::showsplash( "br_body_count_rewarded_extra_life" );
    prohibited_weapon_list();
}

hvi_patrol_exit( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_SPECIALIST";
        return;
    }

    thread scripts\mp\hud_message::showsplash( "br_body_count_rewarded_specialist" );
    scripts\mp\perks\perks::apc_rus_damagecancriticalhit();
}

hudzombie( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_0.label = &"BR_BODYCOUNT/NEXT_REWARD_ADVANCED_UAV";
        return;
    }

    hurt_enabled( "directional_uav" );
    level thread scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "dogtag_reward", self, undefined, undefined, 1 );
}

hurt_enabled( var_0 )
{
    var_1 = isdefined( self.streakdata.streaks[1] );
    scripts\mp\gametypes\br_pickups.gsc::little_bird_mg_enterendinternal( var_0, var_1, 1 );

    if ( !level.gameended )
        thread scripts\mp\hud_message::showkillstreaksplash( var_0 );
}

maxlootleadermarkcount()
{
    if ( !isdefined( self.postspawn_rescued_allies ) )
        self.postspawn_rescued_allies = 0;

    return self.postspawn_rescued_allies;
}

manualturret_endturretuseonpush()
{
    if ( !isdefined( self.postgamestate ) )
        self.postgamestate = 0;

    return self.postgamestate;
}

maxtokensdropondeath()
{
    if ( !isdefined( self.postspawn_sniper ) )
        self.postspawn_sniper = 0;

    return self.postspawn_sniper;
}

progression_speed()
{
    self.postspawn_rescued_allies = maxlootleadermarkcount();
    self.postspawn_rescued_allies++;
    _id_1302B();
}

progression_main()
{
    self.postgamestate = manualturret_endturretuseonpush();
    self.postgamestate++;
    _id_1302B();
}

progression_update()
{
    self.postspawn_sniper = maxtokensdropondeath();
    self.postspawn_sniper++;
    _id_1302B();
}

_id_1302B()
{
    var_0 = maxlootleadermarkcount();
    var_1 = maxkills();
    var_2 = med_transport_initdamage();
    var_3 = 0;
    var_3 = var_3 + var_0 * 100;
    var_3 = var_3 + var_1 * 10;
    var_3 = var_3 + var_2;
    self setclientomnvar( "ui_br_bodycount_reward_data", var_3 );
}

maxkills()
{
    if ( !isdefined( self.postspawn_juggernaut ) )
        self.postspawn_juggernaut = 0;

    return self.postspawn_juggernaut;
}

_loadout_setcopyloadoutomvnaronspawn()
{

}

init_locations()
{
    if ( level.mapname == "mp_don4" || level.mapname == "mp_don4_pm" )
    {
        register_bodycount_end_location( "airport", 1, ( -17654, 20472, 0 ) );
        register_bodycount_end_location( "array", 1, ( 27262, 19562, 0 ) );
        register_bodycount_end_location( "downtown", 1, ( 30451, -8704, 0 ) );
        register_bodycount_end_location( "factory", 1, ( -5201, 7260, 0 ) );
        register_bodycount_end_location( "farmland", 1, ( 46307, -11229, 0 ) );
        register_bodycount_end_location( "prom_east", 1, ( 10312, -23257, 0 ) );
        register_bodycount_end_location( "prom_west", 1, ( -19091, -33444, 0 ) );
        register_bodycount_end_location( "mine", 1, ( 34541, 41465, 0 ) );
        register_bodycount_end_location( "stadium", 1, ( 29411, 2720, 0 ) );
        register_bodycount_end_location( "summit", 1, ( -28903, 49517, 0 ) );
        register_bodycount_end_location( "tower", 1, ( 18376, -14868, 0 ) );
    }
    else if ( level.mapname == "mp_escape2" || level.mapname == "mp_escape3" )
    {
        register_bodycount_end_location( "bioweapon_lab", 1, ( -1585, 10202, 0 ) );
        register_bodycount_end_location( "chemical_engineering", 1, ( 589, 8411, 0 ) );
        register_bodycount_end_location( "harbor", 1, ( 3285, 953, 0 ) );
        register_bodycount_end_location( "staircase", 1, ( 2364, -2407, 0 ) );
        register_bodycount_end_location( "hq", 1, ( 102, -2075, 0 ) );
        register_bodycount_end_location( "prison_block", 1, ( -1301, 2339, 0 ) );
        register_bodycount_end_location( "control_center", 1, ( -2187, -3390, 0 ) );
        register_bodycount_end_location( "security_area", 1, ( -1259, -10892, 0 ) );
        register_bodycount_end_location( "tents", 1, ( -474, -5781, 0 ) );
    }
    else
        register_bodycount_end_location( "default", 1, ( 0, 0, 0 ) );
}

register_bodycount_end_location( var_0, var_1, var_2 )
{
    if ( !isdefined( level.cargo_truck_mg_initspawning.a_s_possible_locations ) )
        level.cargo_truck_mg_initspawning.a_s_possible_locations = [];

    var_1 = getdvarint( "scr_bodycount_location_weight_" + var_0, var_1 );

    if ( var_1 <= 0 )
        return;

    var_3 = spawnstruct();
    var_3.str_location = var_0;
    var_3.i_weight = var_1;
    var_3.v_location = var_2;
    level.cargo_truck_mg_initspawning.a_s_possible_locations[var_0] = var_3;
}

extra_glow_sticks_init()
{
    _id_1221B();
    level thread applyanglesoffset();

    if ( istrue( level.cargo_truck_mg_initspawning._id_1312C ) )
        level.extract_ismissionweapon = ( 0, 0, 0 );

    level.br_level.br_circledelaytimes = level.cargo_truck_mg_initspawning.extra_delay;
    level.br_level.br_circleclosetimes = level.cargo_truck_mg_initspawning.extra_bomb_explode_vfx_func;

    if ( level.mapname == "mp_escape2" || level.mapname == "mp_escape3" )
    {
        level.br_level.br_circleradii = [ 20000, 20000, 14000, 9500, 6500, 2000, 300, 0 ];
        level.br_level.br_circleminimapradii = [ 9000, 9000, 7750, 6500, 4500, 3500, 2500 ];
        level.br_level.circlesettingsassert = [ 0, 0, 0, 0, 0, 0, 0 ];
        level.br_level.circlesetup = [ 0, 0, 0, 0, 0, 0, 0 ];
    }
    else
    {
        level.br_level.br_circleradii = [ 72500, 72500, 50000, 32500, 17500, 7500, 2000, 300, 0 ];
        level.br_level.br_circleminimapradii = [ 10500, 10500, 10500, 9000, 8000, 6500, 5500, 5500 ];
        level.br_level.circlesettingsassert = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
        level.br_level.circlesetup = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
    }
}

_id_1221B()
{
    level.cargo_truck_mg_initspawning._id_120C1 = _id_12023();
    level.extract_ismissionweapon = level.cargo_truck_mg_initspawning._id_120C1.v_location;
    level.brtruck_initexternalfeatures = level.cargo_truck_mg_initspawning._id_120C1.str_location == "downtown";
}

_id_12023()
{
    if ( isdefined( level.cargo_truck_mg_initspawning._id_12A5F ) && level.cargo_truck_mg_initspawning._id_12A5F != "random" )
    {
        foreach ( var_2, var_1 in level.cargo_truck_mg_initspawning.a_s_possible_locations )
        {
            if ( level.cargo_truck_mg_initspawning._id_12A5F == var_2 )
                return var_1;
        }
    }

    if ( level.cargo_truck_mg_initspawning.a_s_possible_locations.size == 1 )
        return level.cargo_truck_mg_initspawning.a_s_possible_locations[0];

    var_3 = 0;

    foreach ( var_1 in level.cargo_truck_mg_initspawning.a_s_possible_locations )
        var_3 = var_3 + var_1.i_weight;

    var_6 = randomintrange( 0, var_3 );

    foreach ( var_1 in level.cargo_truck_mg_initspawning.a_s_possible_locations )
    {
        if ( var_6 < var_1.i_weight )
            return var_1;

        var_6 = var_6 - var_1.i_weight;
    }

    level.cargo_truck_mg_initspawning.a_s_possible_locations = scripts\engine\utility::array_randomize( level.cargo_truck_mg_initspawning.a_s_possible_locations );
    return level.cargo_truck_mg_initspawning.a_s_possible_locations[0];
}

applyanglesoffset()
{
    level endon( "game_ended" );
    level waittill( "calc_circle_centers" );
    level.br_level.circleradius[0] = level.br_level.circleradius[1];
    level.br_level.circleradius[level.cargo_truck_mg_initspawning.ispointnearsoloascenderline + 1] = level.br_level.circleradius[level.cargo_truck_mg_initspawning.ispointnearsoloascenderline + 2];
    level.br_level.circleradius[level.cargo_truck_mg_initspawning.ispointnearsoloascenderline] = level.br_level.circleradius[level.cargo_truck_mg_initspawning.ispointnearsoloascenderline + 2];
    level.cargo_truck_mg_initspawning._id_1313E = level.br_level.circleradius[level.cargo_truck_mg_initspawning.ispointnearsoloascenderline];
}

use_aitype()
{
    var_0 = getdvarvector( "br_final_circle_override", level.extract_ismissionweapon );
    return var_0;
}

get_focus_fire_icon_image()
{
    var_0 = ( level.br_level.circleradius[1][0], level.br_level.circleradius[1][1], 0 );
    var_1 = level.br_level.br_circleradii[1];
    var_2 = scripts\mp\gametypes\br_c130.gsc::createtestc130path( var_0, var_1 );
    return var_2;
}

apc_rus_monitordriverturretreload()
{
    thread seq3_has_seen_tiers();
}

seq3_has_seen_tiers()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = distance( self.vehicle_collision_update.startpt, self.vehicle_collision_update.invuln_to_veh_crush );
    var_1 = var_0 / scripts\mp\gametypes\br_c130.gsc::getc130speed() - 5;
    wait( var_1 );

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isdefined( var_3.br_infil_type ) && var_3.br_infil_type == "c130" && !isdefined( var_3.jumptype ) )
        {
            var_3.jumptype = "outOfBounds";
            var_3 notify( "halo_kick_c130" );
        }
    }
}

circletimer( var_0 )
{
    if ( var_0 >= 2 )
        level.cargo_truck_mg_initspawning._id_11F4D = level.cargo_truck_mg_initspawning._id_11F4D + level.cargo_truck_mg_initspawning._id_11F4C;

    if ( var_0 < level.cargo_truck_mg_initspawning.ispointnearsoloascenderline )
    {
        jug_trig_spawn( var_0 );
        return 0;
    }

    if ( var_0 == level.cargo_truck_mg_initspawning.ispointnearsoloascenderline )
    {
        if ( !level.brtruck_initexternalfeatures )
            level._id_11F58 = 7500;

        level thread scripts\mp\gametypes\br_quest_util.gsc::disallow_player_mantles();
        level thread scripts\mp\gametypes\br_quest_util.gsc::helidestroyvehiclestouchnotify();
        level thread isshuttingdown( level.cargo_truck_mg_initspawning.ispointinsidecircle );

        foreach ( var_2 in level.players )
        {
            if ( isalive( var_2 ) || istrue( var_2.brtruck_initpostmain ) )
            {
                if ( getdvarint( "MLNNMOPQOP", 0 ) == 6 )
                    var_2 scripts\cp\helicopter\chopper_boss::_id_11EFA( "t9_ch_global_reach_final_circle_for_s3_5_event_wz", 1 );
            }
        }

        return 0;
    }

    if ( var_0 == level.cargo_truck_mg_initspawning.ispointnearsoloascenderline + 1 )
    {
        level.br_circle.dangercircleui.origin = scripts\mp\gametypes\br_circle.gsc::getdangercircleorigin() + ( 0, 0, scripts\mp\gametypes\br_circle.gsc::getdangercircleradius() );
        scripts\mp\gametypes\br_circle.gsc::setstaticuicircles( 500, level.br_circle.safecircleui, level.br_circle.dangercircleui, 0 );
    }

    return 1;
}

push_players_back_and_deal_damage()
{
    var_0 = scripts\cp_mp\killstreaks\airdrop::getleveldata( "extra_life_crate" );
    var_0.capturestring = &"MP/GENERIC_LOOT_CRATE_CAPTURE";
    var_0.dummymodel = "military_carepackage_01_br_respawn";
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.minimapicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 0;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.activatecallback = ::juggheli_spawner_jammer5_4;
    var_0.capturecallback = ::juggmazedogtagrevive;
    var_0.destroyoncapture = 1;
}

jug_trig_spawn( var_0 )
{
    if ( var_0 == 2 )
        level thread _id_126E8();
}

_id_126E8()
{
    wait( randomintrange( 10, 20 ) );

    foreach ( var_1 in level.players )
        var_1 scripts\mp\hud_message::showsplash( "br_body_count_respawn_crate_event" );

    level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "respawn_crate" );
    var_3 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
    var_4 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
    var_5 = randomfloat( 120 );
    var_6 = scripts\engine\utility::ter_op( scripts\engine\utility::cointoss(), 1, -1 );

    for ( var_7 = 0; var_7 < 3; var_7++ )
    {
        var_8 = var_3 + anglestoforward( ( 0, var_5 + var_6 * var_7 * 120, 0 ) ) * ( var_4 * 0.65 );
        var_9 = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_8, var_4 * 0.35, 0.25, 0.75, 1 );

        while ( !scripts\mp\gametypes\br_circle.gsc::score_spawner_relative_to_objective( var_9 ) )
        {
            var_9 = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_3, var_4, 0.1, 0.9, 1 );
            waitframe();
        }

        var_9 = var_9 + ( 0, 0, 2000 );
        var_10 = scripts\cp_mp\killstreaks\airdrop::dropcrate( undefined, undefined, "extra_life_crate", var_9, ( 0, randomint( 360 ), 0 ) );
        level.jugg_assault3_check_size[level.jugg_assault3_check_size.size] = var_10;
        var_10 thread jug_trigger_spawn();
        var_10 thread jugg_addtoactivejugglist();
        wait( randomintrange( 3, 10 ) );
    }
}

juggheli_spawner_jammer5_4( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airdrop", "registerCrateForCleanup" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airdrop", "registerCrateForCleanup" ) ]]( self );
    }
}

juggmazedogtagrevive( var_0 )
{
    level.jugg_assault3_check_size = scripts\engine\utility::array_remove( level.jugg_assault3_check_size, self );
    self notify( "captured" );
    var_1 = easepower( "brloot_bodycount_extra_life", self.origin + ( 0, 0, 16 ) );
    scripts\mp\gametypes\br_pickups.gsc::_id_11E02( var_1 );

    if ( isdefined( self.objectiveiconid ) )
        objective_delete( self.objectiveiconid );

    playfx( level.conf_fx["vanish"], self.init_track.origin );
    self.init_track delete();
}

jug_trigger_spawn()
{
    var_0 = scripts\engine\utility::drop_to_ground( self.origin, 50, -3000, ( 0, 0, 1 ) );
    self.init_track = spawn( "script_model", var_0 + ( 0, 0, 3 ) );
    self.init_track setmodel( "scr_smoke_grenade" );
    wait 1.0;
    self.init_track playloopsound( "mp_flare_burn_lp" );
    self.init_track setscriptablepartstate( "smoke", "on" );
}

jugg_addtoactivejugglist()
{
    self setscriptablepartstate( "objective", "respawn" );
}

jug_spawn_func()
{
    self.init_track delete();
    playfx( level.conf_fx["vanish"], self.origin );
    level.jugg_assault3_check_size = scripts\engine\utility::array_remove( level.jugg_assault3_check_size, self );
    scripts\cp_mp\killstreaks\airdrop::hack_airport_combat_init();
}

_maphint_computerscriptableused()
{

}

isshuttingdown( var_0, var_1 )
{
    level endon( "game_ended" );
    level.cargo_truck_mg_initspawning.i_see_player_vehicle_watcher = spawnstruct();
    var_2 = level.cargo_truck_mg_initspawning._id_1313E;

    if ( isdefined( var_1 ) )
        var_2 = var_1;

    var_3 = level.cargo_truck_mg_initspawning.isredeploykeepweapons;
    var_4 = getgroundposition( var_2, 1 );

    if ( isdefined( var_0 ) )
    {
        var_5 = var_0 - level.cargo_truck_mg_initspawning.isprogressionmismatch;

        if ( var_5 > 0 )
            wait( var_5 );
        else
            wait 30;
    }

    scripts\mp\gametypes\br_publicevents.gsc::_id_12557( "br_body_count_exfil_incoming" );
    level thread issidehouseobjective( var_4 );
    var_6 = deregisterscriptableinstance( 700 );

    if ( var_6 < level.cargo_truck_mg_initspawning.isplunderextractionenabled )
        var_6 = level.cargo_truck_mg_initspawning.isplunderextractionenabled;

    var_5 = level.cargo_truck_mg_initspawning.isprogressionmismatch - var_6;
    wait( var_5 );
    var_7 = last_unresolved_collision_time();
    var_8 = undefined;

    if ( isdefined( var_7 ) )
    {
        var_8 = var_7 thread _id_119D6( var_2, undefined, 5000, 700, 0, 0 );
        var_8 thread juggerbear();
    }

    var_5 = level.cargo_truck_mg_initspawning.isplunderextractionenabled - level.cargo_truck_mg_initspawning.isprophunt;
    wait( var_5 );
    scripts\mp\gametypes\br_publicevents.gsc::_id_12557( "br_body_count_exfil_online" );

    foreach ( var_10 in level.players )
        var_10 scripts\mp\utility\lower_message::setlowermessageomnvar( 72, undefined, 10 );

    level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "exfil_ready" );
    wait( level.cargo_truck_mg_initspawning.isprophunt );
    level.cargo_truck_mg_initspawning.i_see_player_vehicle_watcher.trigger = spawn( "trigger_radius", var_4, 0, int( var_3 ), int( level.classify_players_based_on_laststand ) );
    var_12 = scripts\mp\gametypes\obj_dom.gsc::setupobjective( level.cargo_truck_mg_initspawning.i_see_player_vehicle_watcher.trigger, "neutral" );
    var_12.onuse = ::israndomshotgunloadouts;
    var_12.onbeginuse = ::isquestinstancealocale;
    var_12.onuseupdate = ::israndomsmgloadouts;
    var_12.onenduse = ::israndomarloadouts;
    var_12.oncontested = ::isquesttablet;
    var_12.onuncontested = ::israndomlmgloadouts;
    var_12.onunoccupied = ::israndomnoattachmentloadouts;
    var_12.onpinnedstate = ::israndomblueprintsloadouts;
    var_12.onunpinnedstate = ::israndompistolloadouts;
    var_12._id_12A14 = ::israndomcustomblueprintsloadouts;
    var_12.stompprogressreward = ::isspawningstopped;
    var_12.disablespawncamera = 1;
    var_12.id = "domFlag";
    var_12.pinobj = 0;
    var_12.lockupdatingicons = 1;
    var_12 scripts\mp\gameobjects::setcapturebehavior( "persistent" );
    var_13 = level.cargo_truck_mg_initspawning.isplayinganim;
    var_12 scripts\mp\gameobjects::setusetime( var_13 );
    var_12 isspecialcaseweapon();
    playencryptedcinematicforall( var_12.objidnum, 1 );
    level.cargo_truck_mg_initspawning.i_see_player_vehicle_watcher.isplayerindanger_think = var_12;
    level.objectivescaler = 1;

    foreach ( var_10 in level.players )
    {
        var_10 setclientomnvar( "ui_securing", 17 );
        var_10 setclientomnvar( "ui_securing_progress", 0 );
    }
}

issameteamagent( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2 ) && isdefined( var_2.team ) )
        {
            if ( var_2.team == var_0 )
            {
                var_2 setclientomnvar( "ui_securing", 18 );
                continue;
            }

            var_2 setclientomnvar( "ui_securing", 19 );
        }
    }
}

isselectable( var_0 )
{
    if ( var_0 == "contested" )
        self setclientomnvar( "ui_securing", 20 );
    else if ( var_0 == "friendly" )
        self setclientomnvar( "ui_securing", 18 );
    else
        self setclientomnvar( "ui_securing", 19 );
}

isspecialistbonus( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2 ) )
            var_2 setclientomnvar( "ui_securing_progress", var_0 );
    }
}

isprophuntgametype( var_0 )
{
    self notify( "exfil_newOwnerFeedback" );
    self endon( "exfil_newOwnerFeedback" );

    if ( isplayer( var_0 ) )
        var_1 = var_0.team;
    else
        var_1 = var_0;

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isdefined( var_1 ) )
        {
            if ( var_3.team == var_1 )
            {
                var_3 thread isselectable( "friendly" );
                var_3 thread scripts\mp\hud_message::showsplash( "br_body_count_friendly_team_exfil" );
                continue;
            }

            var_3 thread isselectable( "enemy" );
            var_3 thread scripts\mp\hud_message::showsplash( "br_body_count_enemy_team_exfil" );
        }
    }

    waittill_player_uses_assassination_contract( var_1, "exfil_friendly_start", "exfil_enemy_start" );
}

israndomshotgunloadouts( var_0 )
{
    var_1 = var_0.team;
    self.capturetime = gettime();
    self.doarmsraceopencachenags = 1;

    if ( self.touchlist[var_1].size == 0 && isdefined( self.oldtouchlist ) )
        self.touchlist = self.oldtouchlist;

    waittill_player_uses_assassination_contract( var_1, "exfil_friendly_win", "exfil_enemy_win" );
    isspecialistbonus( 1 );
    thread ispresstofirstspawnmode( var_1 );
}

isquestinstancealocale( var_0 )
{
    if ( !isdefined( self.tripledefenderkill ) || !self.tripledefenderkill )
    {
        self.tripledefenderkill = 1;
        thread isprophuntgametype( var_0 );
        var_1 = scripts\mp\utility\teams::getfriendlyplayers( var_0.team, 0 );

        foreach ( var_3 in var_1 )
            var_3 notify( "calloutmarkerping_warzoneKillQuestIcon" );
    }
}

israndomsmgloadouts( var_0, var_1, var_2, var_3 )
{
    if ( var_1 < 1.0 && !level.gameended && !istrue( self.doarmsraceopencachenags ) )
    {
        isspecialistbonus( var_1 );
        waittill_player_moves( var_1, var_0 );
    }

    if ( var_1 > 0.05 && var_2 && !istrue( self.didstatusnotify ) )
        self.didstatusnotify = 1;

    if ( self.disablespawncamera && var_1 > 0.5 )
    {
        self.disablespawncamera = 0;
        waittill_player_uses_assassination_contract( var_0, "exfil_friendly_50", "exfil_enemy_50" );
    }
}

israndomarloadouts( var_0, var_1, var_2 )
{
    scripts\mp\gametypes\obj_dom.gsc::dompoint_onuseend( var_0, var_1, var_2 );
}

isquesttablet()
{
    scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_contested" );
    scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, undefined );
    level thread scripts\mp\gametypes\br_public.gsc::brleaderdialog( "exfil_contested" );
    var_0 = scripts\mp\gameobjects::getownerteam();

    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2 ) && isdefined( var_0 ) )
            var_2 thread isselectable( "contested" );
    }
}

israndomlmgloadouts( var_0 )
{
    var_1 = scripts\mp\gameobjects::getownerteam();
    var_2 = undefined;
    var_3 = ispointpaststart2d();

    if ( var_3 <= 1 )
    {
        foreach ( var_5 in level.teamnamelist )
        {
            var_6 = self.teamprogress[var_5];

            if ( var_6 > 0 )
            {
                var_2 = var_5;
                break;
            }
        }

        if ( isdefined( var_2 ) )
        {
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_2 );
            issameteamagent( var_2 );
        }
        else if ( var_1 != "neutral" )
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_1 );
        else if ( var_0 != "none" )
            scripts\mp\objidpoolmanager::objective_set_progress_team( self.objidnum, var_0 );

        scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_defend", "waypoint_capture" );

        if ( var_0 == "none" || var_1 == "neutral" )
            self.didstatusnotify = 0;
    }
}

israndomnoattachmentloadouts()
{
    var_0 = scripts\mp\gameobjects::getownerteam();

    if ( var_0 == "neutral" )
        scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_captureneutral" );
    else
        scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_defend", "waypoint_capture" );

    self.didstatusnotify = 0;
}

israndomblueprintsloadouts( var_0 )
{
    if ( self.ownerteam != "neutral" && self.numtouching[self.ownerteam] && !self.stalemate )
        scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_defending", "waypoint_capture" );
}

israndompistolloadouts( var_0 )
{
    if ( self.ownerteam != "neutral" && !self.numtouching[self.ownerteam] && !self.stalemate )
        scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_defend", "waypoint_capture" );
}

israndomcustomblueprintsloadouts( var_0 )
{
    var_1 = scripts\mp\utility\teams::getenemyteams( var_0 );
    var_2 = undefined;

    foreach ( var_4 in var_1 )
    {
        var_5 = self.teamprogress[var_4];

        if ( var_5 > 0 )
            var_2 = var_5 / self.usetime;
    }

    if ( isdefined( var_2 ) )
    {
        isspecialistbonus( var_2 );

        if ( var_2 <= 0.008 )
            thread isprophuntgametype( self.claimteam );

        if ( !self.disablespawncamera && var_2 < 0.4 )
            self.disablespawncamera = 1;
    }
}

isspawningstopped( var_0 )
{
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "obj_prog_defend" );
    scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_defending", "waypoint_capture" );

    if ( isdefined( self.lastprogressteam ) )
    {
        thread isprophuntgametype( var_0 );
        self.lastprogressteam = undefined;
    }
}

waittill_player_moves( var_0, var_1 )
{
    if ( !isdefined( self.lastsfxplayedtime ) )
        self.lastsfxplayedtime = gettime();

    if ( self.lastsfxplayedtime + 995 < gettime() )
    {
        self.lastsfxplayedtime = gettime();
        var_2 = "";
        var_0 = int( floor( var_0 * 10 ) );
        var_2 = "mp_dom_capturing_tick_0" + var_0;
        self.visuals[0] playsoundtoteam( var_2, var_1 );
    }
}

ispresstofirstspawnmode( var_0 )
{
    waitframe();

    if ( istrue( level._id_12E94 ) )
        return;

    level._id_12E94 = 1;
    level._id_135D1 = 1;
    level thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"]["objective_completed"] );
    var_1 = [];

    if ( isdefined( var_0 ) && var_0 != "tie" )
        var_1 = scripts\mp\utility\teams::getteamdata( var_0, "players" );

    thread scripts\mp\music_and_dialog::_id_11AA3( var_1 );
}

issidehouseobjective( var_0 )
{
    var_1 = spawn( "script_model", var_0 - ( 0, 0, 3 ) );
    var_1 setmodel( "tag_origin" );
    wait 1.0;
    playfxontag( scripts\engine\utility::getfx( "vfx_smk_signal_green" ), var_1, "tag_origin" );
}

ispointpaststart2d()
{
    var_0 = 0;

    foreach ( var_3, var_2 in self.numtouching )
    {
        if ( var_2 > 0 && ( !isstring( var_3 ) || var_3 != "none" ) )
            var_0++;
    }

    return var_0;
}

isspecialcaseweapon()
{
    scripts\mp\objidpoolmanager::update_objective_setneutrallabel( self.objidnum, "BR_BODYCOUNT/EXFIL" );
}

_questtimerwait()
{

}

water_stage()
{
    if ( !isdefined( self.operatorcustomization ) || !isdefined( self.operatorcustomization.suit ) )
        return;

    if ( self.operatorcustomization.suit == "actionhero_mp" )
    {
        thread watch_for_next_sniper();
        return;
    }

    self.updatemlgspectatorinfo = self.operatorcustomization.suit;
    self.operatorcustomization.suit = "actionhero_mp";
    scripts\mp\utility\player::_setsuit( "actionhero_mp" );
    thread watch_for_next_sniper();
}

watch_for_next_sniper()
{
    self notify( "custom_suit_start" );
    self endon( "custom_suit_start" );
    scripts\engine\utility::_id_13403( level.cargo_truck_mg_initspawning.tutorial_playsound, "death" );
    self.operatorcustomization.suit = self.updatemlgspectatorinfo;
    scripts\mp\utility\player::_setsuit( self.updatemlgspectatorinfo );
    self.updatemlgspectatorinfo = undefined;
}

waterentityarray()
{
    self notify( "player_set_infinate_super_sprint" );
    self endon( "player_set_infinate_super_sprint" );
    self endon( "death_or_disconnect" );
    self refreshsprinttime();
    var_0 = 0;
    thread hudplunderstart();
    self.movespeedscaler = 1.2;
    scripts\mp\weapons::updatemovespeedscale();
    self lerpfovbypreset( "zombiedefault" );

    if ( !scripts\mp\gametypes\br_public.gsc::player_name_who_broke_stealth() )
    {
        scripts\mp\utility\perk::giveperk( "specialty_sprintmelee" );
        scripts\mp\utility\perk::giveperk( "specialty_sprintads" );
        scripts\mp\utility\perk::giveperk( "specialty_marathon" );
    }

    while ( var_0 < level.cargo_truck_mg_initspawning.tutorial_playsound )
    {
        if ( self issupersprinting() )
            self refreshsprinttime();

        wait 0.1;
        var_0 = var_0 + 0.1;
    }

    if ( !scripts\mp\gametypes\br_public.gsc::player_name_who_broke_stealth() )
    {
        scripts\mp\utility\perk::removeperk( "specialty_sprintmelee" );
        scripts\mp\utility\perk::removeperk( "specialty_sprintads" );
        scripts\mp\utility\perk::removeperk( "specialty_marathon" );
    }

    self.movespeedscaler = 1;
    scripts\mp\weapons::updatemovespeedscale();
    self lerpfovbypreset( "default_2seconds" );
}

hudplunderstart()
{
    self notify( "reset_timer" );
    waitframe();
    self setclientomnvar( "ui_privateevent_timer_type", 3 );
    var_0 = level.cargo_truck_mg_initspawning.tutorial_playsound;
    var_1 = gettime() + var_0 * 1000;
    self setclientomnvar( "ui_privateevent_timer", var_1 );
    scripts\engine\utility::_id_13404( level.cargo_truck_mg_initspawning.tutorial_playsound, "reset_timer", "death" );
    self setclientomnvar( "ui_privateevent_timer_type", 0 );
}

_id_130AD()
{
    if ( med_transport_initdamage() )
    {
        if ( !scripts\mp\gametypes\br_public.gsc::hasrespawntoken() )
            scripts\mp\gametypes\br_pickups.gsc::addrespawntoken( 1 );
    }
    else if ( scripts\mp\gametypes\br_public.gsc::hasrespawntoken() )
        scripts\mp\gametypes\br_pickups.gsc::removerespawntoken();
}

_id_12554( var_0 )
{
    waittillframeend;
    scripts\mp\utility\lower_message::setlowermessageomnvar( 9, int( gettime() + var_0 * 1000 ) );
    scripts\mp\gametypes\br_gulag.gsc::_id_123BF( 1 );
    thread playertracking( var_0 );
}

playertracking( var_0 )
{
    self endon( "disconnect" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    scripts\mp\gametypes\br_gulag.gsc::_id_123BF( 0 );
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
}

med_transport_initdamage()
{
    if ( !isdefined( self.postspawn_trucks ) )
        self.postspawn_trucks = level.cargo_truck_mg_initspawning._id_129C6;

    return self.postspawn_trucks;
}

prohibited_weapon_list()
{
    self.postspawn_trucks = med_transport_initdamage();
    self.postspawn_trucks++;

    if ( !isdefined( self.power_wave_mode_reset_playerdata ) )
        self.power_wave_mode_reset_playerdata = self.postspawn_trucks;
    else if ( self.postspawn_trucks > self.power_wave_mode_reset_playerdata )
        self.power_wave_mode_reset_playerdata = self.postspawn_trucks;

    _id_130AD();
    _id_1302B();
}

give_and_switch_to_primary_weapon()
{
    self.postspawn_trucks = med_transport_initdamage();
    self.postspawn_trucks--;

    if ( !isdefined( self.postspawn_vindia ) )
        self.postspawn_vindia = 1;
    else
        self.postspawn_vindia++;

    if ( self.postspawn_trucks < 0 )
        self.postspawn_trucks = 0;
}

moderemovefromteamlives( var_0, var_1 )
{
    var_2 = ( randomfloat( 1 ) - 0.5, randomfloat( 1 ) - 0.5, 0 );

    if ( !istrue( var_1 ) )
        var_2[2] = randomfloat( 1 ) - 0.5;

    var_3 = var_0 * vectornormalize( var_2 );
    return var_3;
}

_setdomflagiconinfo( var_0, var_1, var_2, var_3 )
{
    level.waypointcolors[var_0] = var_1;
    level.waypointbgtype[var_0] = 1;
    level.waypointstring[var_0] = var_2;
    level.waypointshader[var_0] = "ui_mp_br_mapmenu_icon_gulag_overtime_objective";
    level.waypointpulses[var_0] = var_3;
}

zombienumtoconsume()
{
    var_0 = spawnstruct();
    var_0._id_11B8E = [];
    var_0.bonus_target_hit = [];
    var_0.bonus_target_score = [];
    var_0.bonuskillstreakcharge = [];
    var_0.offhands = [];
    var_0.isdmztutorial = [];
    var_0.player_is_faux_dead = self.player_is_faux_dead;
    var_0.br_circleshowdelaydanger = scripts\mp\equipment::getequipmentslotammo( "health" );
    var_1 = [];
    var_2 = self getweaponslistprimaries();

    foreach ( var_4 in var_2 )
    {
        if ( !scripts\mp\utility\weapon::run_and_stop_group_after( var_4 ) && !issubstr( var_4.basename, "iw8_fists_mp" ) && !scripts\mp\utility\weapon::round_at_max( var_4.basename ) )
            var_1[var_1.size] = var_4;
    }

    foreach ( var_7 in var_1 )
    {
        var_8 = createheadicon( var_7 );

        if ( var_7.basename == "iw8_lm_dblmg_mp" || var_7.basename == "iw8_la_mike32_mp" )
        {
            var_0.bonus_target_hit[var_8] = self getweaponammoclip( var_7 );
            var_0.bonuskillstreakcharge[var_8] = self getweaponammostock( var_7 );
        }
        else
        {
            var_0.bonus_target_hit[var_8] = weaponclipsize( var_7 );
            var_0.bonuskillstreakcharge[var_8] = int( max( self getweaponammostock( var_7 ), weaponclipsize( var_7 ) ) );
        }

        if ( scripts\mp\utility\weapon::respawnplayers( var_7 ) )
            var_0.bonus_target_score[var_8] = weaponclipsize( var_7 );

        if ( getsubstr( var_8, 0, 4 ) == "alt_" )
            continue;

        var_0._id_11B8E[var_0._id_11B8E.size] = var_7;
    }

    var_10 = self getweaponslistoffhands();

    foreach ( var_12 in var_10 )
    {
        if ( var_12.basename == "bandage_br" )
            continue;

        var_13 = self getweaponammoclip( var_12 );

        if ( var_13 <= 0 )
            continue;

        var_0.offhands[var_0.offhands.size] = var_12;
        var_14 = createheadicon( var_12 );
        var_0.bonus_target_hit[var_14] = var_13;
    }

    foreach ( var_18, var_17 in self.equipment )
        var_0.isdmztutorial[var_17] = var_18;

    var_0.super = undefined;

    if ( isdefined( self.super ) && !self.super.usepercent )
        var_0.super = self.equipment["super"];

    if ( isdefined( self.streakdata.streaks[1] ) )
        var_0.set_look_at_ent = self.streakdata.streaks[1].streakname;

    if ( scripts\cp_mp\gasmask::hasgasmask( self ) )
    {
        var_0.gasmaskhealth = self.gasmaskhealth;
        var_0.make_all_doors_solid = self.make_all_doors_solid;
        var_0.make_chair_ai_spawner = self.make_chair_ai_spawner;
    }

    self._id_1211C = var_0;
}

zombienumhitstruck()
{
    self takeallweapons( 0, 1 );
    scripts\mp\gametypes\br_weapons.gsc::br_ammo_player_clear();
    self.equipment["primary"] = undefined;
    self.equipment["secondary"] = undefined;
    self.equipment["health"] = undefined;
    self.equipment["super"] = undefined;
    var_0 = 0;

    foreach ( var_2 in self._id_1211C._id_11B8E )
    {
        var_3 = createheadicon( var_2 );

        if ( var_3 == "iw8_lm_dblmg_mp" )
            scripts\mp\gametypes\br_weapons.gsc::br_forcegiveweapon( "brloot_weapon_lm_dblmg_lege", self );
        else
            scripts\cp_mp\utility\inventory_utility::_giveweapon( var_2 );

        if ( !var_0 )
        {
            self assignweaponprimaryslot( var_3 );
            scripts\cp_mp\utility\inventory_utility::_switchtoweapon( var_2 );
            var_0 = 1;
        }

        scripts\mp\weapons::fixupplayerweapons( self, var_3 );
    }

    var_5 = getcompleteweaponname( "iw8_fists_mp" );

    if ( self._id_1211C._id_11B8E.size < 2 )
        self giveweapon( var_5 );

    foreach ( var_7 in self._id_1211C.offhands )
    {
        var_8 = scripts\mp\equipment::getequipmentreffromweapon( var_7 );

        if ( !isdefined( var_8 ) )
            continue;

        var_9 = self._id_1211C.isdmztutorial[var_8];

        if ( !isdefined( var_9 ) )
            continue;

        scripts\mp\equipment::giveequipment( var_8, var_9 );
    }

    foreach ( var_3, var_12 in self._id_1211C.bonuskillstreakcharge )
    {
        self setweaponammostock( var_3, var_12 );
        var_2 = getcompleteweaponname( getweaponbasename( var_3 ) );
        var_13 = scripts\mp\gametypes\br_weapons.gsc::br_ammo_type_for_weapon( var_2 );

        if ( isdefined( var_13 ) )
        {
            self.br_ammo[var_13] = var_12;
            scripts\mp\gametypes\br_weapons.gsc::br_ammo_player_hud_update_ammotype( var_13 );
        }
    }

    foreach ( var_3, var_12 in self._id_1211C.bonus_target_hit )
        self setweaponammoclip( var_3, var_12 );

    foreach ( var_3, var_12 in self._id_1211C.bonus_target_score )
        self setweaponammoclip( var_3, var_12, "left" );

    waitframe();

    if ( isdefined( self._id_1211C.super ) )
    {
        var_16 = level.br_pickups.br_superreference[level.br_pickups.br_equipnametoscriptable[self._id_1211C.super]];
        scripts\mp\gametypes\br_pickups.gsc::forcegivesuper( var_16, 0 );
    }

    if ( isdefined( self._id_1211C.set_look_at_ent ) )
        scripts\mp\gametypes\br_pickups.gsc::little_bird_mg_enterendinternal( self._id_1211C.set_look_at_ent );

    self.player_is_faux_dead = self._id_1211C.player_is_faux_dead;
    self setclientomnvar( "ui_br_has_plate_pouch", istrue( self.player_is_faux_dead ) );

    if ( isdefined( self._id_1211C.br_circleshowdelaydanger ) && self._id_1211C.br_circleshowdelaydanger > 0 )
    {
        scripts\mp\equipment::giveequipment( "equip_armorplate", "health" );
        scripts\mp\equipment::setequipmentslotammo( "health", self._id_1211C.br_circleshowdelaydanger );
    }

    if ( isdefined( self._id_1211C.make_chair_ai_spawner ) )
        scripts\cp_mp\gasmask::init( self._id_1211C.gasmaskhealth, self._id_1211C.make_chair_ai_spawner );

    thread scripts\cp_mp\gestures::_id_12EE5();
    self._id_1211C = undefined;
    thread _id_13056();
    thread _id_11F6F();
}

_id_13056()
{
    self endon( "death" );
    wait 1;
    _id_1302B();
    self.postspawn_trucks = med_transport_initdamage();

    if ( self.postspawn_trucks == 0 )
        level thread scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( "no_respawns", self );
}

_id_11F6F()
{
    var_0 = maxlootleadermarkcount();

    if ( var_0 >= 8 )
        scripts\mp\perks\perks::apc_rus_damagecancriticalhit();
}

droponplayerdeath( var_0 )
{
    zombienumtoconsume();
    var_1 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
    scripts\mp\gametypes\br_pickups.gsc::init_patches( var_1 );
    scripts\mp\gametypes\br_pickups.gsc::init_preset_solutions( var_1 );
    scripts\mp\gametypes\br_pickups.gsc::init_placed_equipment( var_1 );
    scripts\mp\gametypes\br_pickups.gsc::init_player_characters( var_1 );
    scripts\mp\gametypes\br_pickups.gsc::failsafe_door_breach_frozen_player();
    playerdropplunderondeath( var_1, var_0 );

    if ( isdefined( var_0 ) )
        level thread spawndogtags( self, var_0, var_1 );

    return 1;
}

playerdropplunderondeath( var_0, var_1 )
{
    var_2 = 0.2;
    var_3 = 0.3;

    if ( isdefined( self.plundercount ) && self.plundercount > 0 )
        var_4 = self.plundercount;
    else
        var_4 = 0;

    var_5 = int( var_4 * var_2 + 0.5 );
    var_6 = int( var_4 * var_3 );
    scripts\mp\gametypes\br_plunder.gsc::playersetplundercount( var_5 );

    if ( var_6 <= 0 )
        return;

    scripts\mp\gametypes\br_plunder.gsc::init_reach_pipe_room( var_6, var_0 );
}

waittill_player_uses_assassination_contract( var_0, var_1, var_2 )
{
    foreach ( var_4 in level.teamnamelist )
    {
        if ( var_4 == var_0 )
        {
            level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( var_1, var_4 );
            continue;
        }

        level thread scripts\mp\gametypes\br_public.gsc::cpoperationcrateactivatecallback( var_2, var_4 );
    }
}

_id_119D6( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = var_0;
    var_7 = var_6 + ( 0, 0, 2500 );
    var_8 = lastactivateinstruct( var_7, var_1 );
    var_9 = ( 0, var_8, 0 );
    var_10 = undefined;
    var_11 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_10 = var_7 + -1 * anglestoforward( var_9 ) * var_2;
        var_11 = var_7 + anglestoforward( var_9 ) * var_2;
    }
    else
    {
        var_10 = var_7 + -1 * anglestoforward( var_9 ) * 5000;
        var_11 = var_7 + anglestoforward( var_9 ) * 5000;
    }

    var_12 = spawnheli( self, var_10, var_7, var_11, var_3, var_4, var_5 );
    return var_12;
}

last_unresolved_collision_time()
{
    var_0 = getarraykeys( level.teamdata );

    foreach ( var_2 in var_0 )
    {
        if ( level.teamdata[var_2]["alivePlayers"].size > 0 )
            return level.teamdata[var_2]["alivePlayers"][0];
    }

    return undefined;
}

lastactivateinstruct( var_0, var_1 )
{
    if ( isdefined( var_1 ) && isdefined( var_1.leave_pool_behind_after_deactivation ) )
        return var_1.leave_pool_behind_after_deactivation;

    var_2 = 10;
    var_3 = scripts\engine\trace::create_world_contents();

    for ( var_4 = 0; var_4 < 360; var_4 = var_4 + var_2 )
    {
        var_5 = ( 0, var_4, 0 );
        var_6 = var_0 + -1 * anglestoforward( var_5 ) * 5000;
        var_7 = var_0 + anglestoforward( var_5 ) * 5000;
        var_8 = scripts\engine\trace::sphere_trace( var_0, var_7, 100, undefined, var_3, 1 );

        if ( var_8["fraction"] == 1 )
        {
            if ( isdefined( var_1 ) )
                var_1.leave_pool_behind_after_deactivation = var_4;

            return var_4;
        }

        if ( var_4 % 3 == 0 )
            waitframe();
    }

    var_4 = randomfloat( 360 );

    if ( isdefined( var_1 ) )
        var_1.leave_pool_behind_after_deactivation = var_4;

    return var_4;
}

juggerbear()
{
    self endon( "death" );
    self endon( "leaving" );
    self setvehgoalpos( self.pathgoal, 1 );
    self settargetyaw( self.pavelow_boss_damage_func );
    var_0 = _id_12D25( self.pathgoal, self.hoverheight );
    var_1 = self.pathgoal[2] - var_0;
    self.level_light = deregisterscriptableinstance( var_1 );
    playersetattractionbesttime( 1, self.level_light );
    self waittill( "goal" );
    thread heliwatchgameendleave();
    thread playerplunderlose();
    helidescend( self.endpoint, var_0 );
    playerpurchasenags();
    helicleanupextract();
    thread playerpulloutofgulagwin();
}

spawnheli( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = vectortoangles( var_2 - var_1 );
    var_8 = 99;
    var_9 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( var_0, var_1, var_7, "veh_apache_plunder_mp", "veh8_mil_air_mindia8_plunder_x" );

    if ( !isdefined( var_9 ) )
        return;

    var_10 = var_2 * ( 1, 1, 0 );
    var_9.speed = 50;
    var_9.accel = 99999;
    var_9.health = 1000;
    var_9.maxhealth = var_9.health;
    var_9.team = var_0.team;
    var_9.owner = var_0;
    var_9.defendloc = var_2;
    var_9.lifeid = 0;
    var_9.flaresreservecount = var_8;
    var_9.pathgoal = var_2;
    var_9.vehicle_collision_init = var_3;
    var_9.endpoint = var_10;
    var_9.pavelow_boss_damage_func = var_7[1];
    var_9.canuse = var_6;
    var_9.hoverheight = var_4;
    var_9.vehiclename = "magma_plunder_chopper";

    if ( istrue( var_5 ) )
        var_9 setcandamage( 1 );
    else
        var_9 setcandamage( 0 );

    var_9 setmaxpitchroll( 10, 25 );
    var_9 vehicle_setspeed( var_9.speed, var_9.accel );
    var_9 sethoverparams( 50, 100, 50 );
    var_9 setturningability( 0.05 );
    var_9 setyawspeed( 45, 25, 25, 0.5 );
    var_9 setotherent( var_0 );
    var_9 thread scripts\mp\killstreaks\flares::flares_handleincomingstinger( undefined, undefined );
    return var_9;
}

deregisterscriptableinstance( var_0 )
{
    var_1 = descendpos( 5000, 100, 125 );
    var_2 = descendpos( var_0, 25.0, 31.25 );
    var_3 = var_1 + var_2;
    return var_3;
}

_id_12D25( var_0, var_1 )
{
    var_2 = undefined;

    if ( isdefined( var_1 ) )
        var_2 = var_1;
    else
        var_2 = 256;

    var_3 = tracegroundpoint( var_0, 100, [ self ] );
    var_4 = var_3[2];
    var_5 = var_4 + var_2;
    return var_5;
}

playersetattractionbesttime( var_0, var_1 )
{
    var_2 = gettime() + int( var_1 * 1000 );
    var_3 = level.teamdata[self.team]["alivePlayers"];

    foreach ( var_5 in var_3 )
    {
        var_5 scripts\mp\trials\trial_utility::_id_12360( "ui_br_plunder_extract_state", var_0 );
        var_5 scripts\mp\trials\trial_utility::_id_12360( "ui_br_plunder_extract_end_time", var_2 );
    }
}

heliwatchgameendleave()
{
    self endon( "death" );
    self endon( "leaving" );
    level waittill( "game_ended" );
    thread playerpulloutofgulagwin();
}

playerplunderlose()
{
    self endon( "death" );

    if ( !isdefined( self.vfxent ) )
        return;

    self.vfxent endon( "death" );
    wait 5;
    self.vfxent setscriptablepartstate( "smoke", "dissipate" );
    self.vfxent playsound( "smoke_canister_tail_dissipate" );
    wait 1;
    self.vfxent stoploopsound();
    wait 4.5;
    self.vfxent delete();
}

helidescend( var_0, var_1 )
{
    self endon( "death" );
    var_2 = var_0[0];
    var_3 = var_0[1];
    var_4 = ( var_2, var_3, var_1 );
    self setvehgoalpos( var_4, 1 );
    self settargetyaw( self.pavelow_boss_damage_func );
    self vehicle_setspeed( 25.0, 31.25 );
    thread playerplundereventcallbacks();
    thread playerplundereventomnvars();
    self waittill( "goal" );
    self sethoverparams( 1, 1 );
    wait 1;
    self sethoverparams( 25, 20, 10 );
}

playerpurchasenags()
{
    self endon( "game_ended" );
    thread playerplaygestureweaponanim();
    playersetattractionbesttime( 2, 300 );
    wait 300;
    self.isdepot = 0;
    heliusecleanup();
}

heliusecleanup()
{
    if ( isdefined( self.usable ) )
    {
        level.br_depots = scripts\engine\utility::array_remove( level.br_depots, self.usable );
        self.usable = undefined;
    }
}

playerplaygestureweaponanim( var_0 )
{
    scripts\engine\utility::waittill_either( "leaving", "death" );
    heliusecleanup();
}

helicleanupextract( var_0 )
{
    if ( isdefined( self.vfxent ) )
    {
        self.vfxent stoploopsound();
        self.vfxent delete();
    }

    if ( istrue( var_0 ) && isdefined( self.site ) )
        self.site setscriptablepartstate( self.site.type, self.site.allowobjectiveuseaftermatchstart );
}

playerpulloutofgulagwin()
{
    self endon( "death" );
    self notify( "leaving" );
    self.leaving = 1;
    self setvehgoalpos( self.pathgoal, 1 );
    self settargetyaw( self.pavelow_boss_damage_func );
    playersetattractionbesttime( 3, self.level_light );
    self waittill( "goal" );
    self vehicle_setspeed( self.speed, self.accel );
    self setvehgoalpos( self.vehicle_collision_init, 1 );
    self settargetyaw( self.pavelow_boss_damage_func );
    self waittill( "goal" );
    self stoploopsound();
    playersetattractionbesttime( 0, 0 );
    self notify( "heli_gone" );
    playerplunderdrop();
}

tracegroundpoint( var_0, var_1, var_2 )
{
    var_3 = -99999;
    var_4 = ( var_0[0], var_0[1], var_3 );
    var_5 = scripts\engine\trace::create_world_contents();
    var_6 = undefined;

    if ( isdefined( var_1 ) )
        var_6 = scripts\engine\trace::sphere_trace( var_0, var_4, var_1, var_2, var_5 );
    else
        var_6 = scripts\engine\trace::ray_trace( var_0, var_4, var_2, var_5 );

    return var_6["position"];
}

descendpos( var_0, var_1, var_2 )
{
    var_3 = var_0 * 0.0000157828;
    var_4 = 0.5 * var_2;
    var_5 = var_1;
    var_6 = -1 * var_3;
    var_7 = ( -1 * var_5 + sqrt( var_5 * var_5 - 4 * var_4 * var_6 ) ) / ( 2 * var_4 );
    var_7 = var_7 * 3600;
    var_7 = var_7 + 1.5;
    return var_7;
}

playerplundereventcallbacks()
{
    self endon( "leaving" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "touch", var_0 );

        if ( isdefined( var_0 ) && var_0 isattachmentvariantlocked() )
            var_0 dodamage( var_0.health, self.origin, var_0, var_0, "MOD_CRUSH" );
    }
}

playerplundereventomnvars()
{
    self endon( "leaving" );
    self endon( "death" );
    var_0 = 70;
    var_1 = -80;
    var_2 = 150;
    var_3 = 25;
    var_4 = -100;

    for (;;)
    {
        var_5 = getentarrayinradius( "script_vehicle", "classname", self.origin, getdvarfloat( "test_radius", 400 ) );

        if ( var_5.size <= 1 )
        {
            wait 0.5;
            continue;
        }

        var_6 = scripts\engine\trace::create_vehicle_contents();
        var_7 = anglestoforward( self.angles );
        var_8 = self.origin + var_7 * getdvarfloat( "test_f", var_2 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_m", var_3 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_b", var_4 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 isattachmentvariantlocked() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        waitframe();
    }
}

playerplunderdrop()
{
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

isattachmentvariantlocked()
{
    return isalive( self ) && ( scripts\common\vehicle::isvehicle() || isdefined( self.classname ) && self.classname == "script_vehicle" );
}

_luidecision()
{

}
