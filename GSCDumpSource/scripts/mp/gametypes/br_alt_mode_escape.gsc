// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !getdvarint( "scr_br_alt_mode_escape", 0 ) )
        return;

    adjustzoneactivationdelayforlargemaps();
    level.isdonetsksubmap = spawnstruct();
    level.isdonetsksubmap._id_133D0 = getdvarfloat( "scr_br_escape_incoming_time", 240.9 );
    level.isdonetsksubmap._id_133DA = getdvarfloat( "scr_br_escape_respawn_time", -1 );
    level.isdonetsksubmap._id_11CCC = getdvarfloat( "scr_br_escape_radio_safe_time", 10 ) + level.isdonetsksubmap._id_133D0;
    level.isdonetsksubmap._id_12C76 = getdvarfloat( "scr_br_escape_time_added_when_dropped", 20 );
    level.isdonetsksubmap._id_11CC8 = getdvarfloat( "scr_br_escape_radio_idle_time", 45 );
    level.isdonetsksubmap.rocket_fuel_x2 = getdvarint( "scr_br_alt_mode_escape_radio_reset_enable", 0 );
    level.isdonetsksubmap.role_interaction = getdvarint( "scr_br_alt_mode_escape_extended_version", 1 );
    level.isdonetsksubmap._id_11CC7 = getdvarint( "scr_br_alt_mode_escape_radio_delete_loot_radius", 128 );
    level.isdonetsksubmap.isvalidpos = getdvarint( "scr_br_alt_mode_escape_radio_xp_pickup", 900 );
    level.isdonetsksubmap.isvalidspectatetarget = getdvarint( "scr_br_alt_mode_escape_radio_xp_win", 15000 );
    level.isdonetsksubmap._id_11CC6 = getdvarint( "scr_br_alt_mode_escape_radio_circle_peek", 1 );
    level.isdonetsksubmap.processedscoreevent = getdvarint( "scr_br_alt_mode_escape_radio_incoming_respawn_time", 30 );
    level.isdonetsksubmap.kiosksearchradiusidealmin = getdvarint( "scr_br_alt_mode_escape_radio_fast_respawn_time", 10 );
    level.isdonetsksubmap._id_11CC9 = getdvarint( "scr_br_alt_mode_escape_radio_max_time_in_gas", 15 );
    level.isdonetsksubmap.kiosksearchradiusidealmax = getdvarint( "scr_br_alt_mode_escape_radio_fast_respawn_index", 5 );
    level.isdonetsksubmap.isenemyteamplayer = [];
    level.isdonetsksubmap.isenvironmentalscriptableinflictor = [];
    level.isdonetsksubmap.isenemyteamagent = [];
    level.isdonetsksubmap.isdragonsbreathweapon = [];
    level.isdonetsksubmap.vip_questthink_iconposition = 0;
    level.isdonetsksubmap._id_11CCB = -1;
    game["dialog"]["exit_strategy_chopper_inbound"] = "exit_strategy_chopper_inbound";
    game["dialog"]["escape_chopper_comms_online"] = "cp1_escape_chopper_comms_online";
    game["dialog"]["exit_strategy_teammate_pickup"] = "exit_strategy_teammate_pickup";
    game["dialog"]["escape_radio_picked_up_enemy"] = "escape_radio_picked_up_enemy";
    game["dialog"]["exit_strategy_less_than_4_min"] = "exit_strategy_less_than_4_min";
    game["dialog"]["exit_strategy_less_than_3_min"] = "exit_strategy_less_than_3_min";
    game["dialog"]["exit_strategy_less_than_2_min"] = "exit_strategy_less_than_2_min";
    game["dialog"]["exit_strategy_less_than_60_sec"] = "exit_strategy_less_than_60_sec";
    game["dialog"]["exit_strategy_less_than_45_sec"] = "exit_strategy_less_than_45_sec";
    game["dialog"]["exit_strategy_less_than_20_sec"] = "exit_strategy_less_than_20_sec";
    game["dialog"]["exit_strategy_less_than_10_sec"] = "exit_strategy_less_than_10_sec";
    game["dialog"]["exit_strategy_less_than_5_sec"] = "exit_strategy_less_than_5_sec";
    game["dialog"]["escape_radio_incoming"] = "escape_radio_incoming";
    game["dialog"]["escape_radio_spawned"] = "escape_radio_spawned";
    game["dialog"]["exit_strategy_radio_down"] = "exit_strategy_radio_down";
    game["dialog"]["exit_strategy_radio_strength"] = "exit_strategy_radio_strength";
    game["dialog"]["exit_strategy_radio_fixing"] = "exit_strategy_radio_fixing";
    game["dialog"]["gametype_exit_strategy"] = "gametype_exit_strategy";
    game["dialog"]["gametype_exfiltration"] = "gametype_exfiltration";
    game["dialog"]["exit_strategy_carrier_down"] = "exit_strategy_carrier_down";
    game["dialog"]["exit_strategy_carrier_hit"] = "exit_strategy_carrier_hit";
    game["dialog"]["exit_strategy_radio_carrier"] = "exit_strategy_radio_carrier";
    game["dialog"]["exit_strategy_survive"] = "exit_strategy_survive";
    game["dialog"]["exit_strategy_update_heading"] = "exit_strategy_update_heading";
    level.isdonetsksubmap._id_12CF8 = getdvarint( "scr_br_alt_mode_escape_win_timer", 300.9 );
    level.isdonetsksubmap._id_135DC = level.isdonetsksubmap._id_12CF8;
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::unset_relic_grounded );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "vehicle_spawn", "gameModeSupportsRespawn", ::vehicle_spawn_mp_gamemodesupportsrespawn );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "endGame", ::isdragonsbreath );

    if ( getdvarint( "scr_br_alt_mode_escape_skip_initial_circle", 0 ) )
    {
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "createC130PathStruct", ::get_focus_fire_icon_image );
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "addToC130Infil", ::apc_rus_monitordriverturretreload );
    }

    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDB( "dropBagDelay", 180 );
    level.completesmokinggunquest._id_11F55 = 1;
    level.completesmokinggunquest.delete_laser_entities = 1;
    level.completesmokinggunquest._id_13115 = 1;
    scripts\mp\gametypes\br_gametype_rebirth.gsc::cumulative_damage_to_chopper_boss();
    var_0 = 30;
    level.completesmokinggunquest.rebirthdelayoverride = var_0;
    level.nosuspensemusic = 1;
    level.traincolignorelist = 1;
    level.unset_relic_bang_and_boom = ::_id_123C5;
    level.lootchopper_oncrateuse["mayConsiderPlayerDead"] = scripts\mp\gametypes\br_gametype_rebirth.gsc::createpropspeclist;
    level.lootchopper_oncrateuse["triggerRespawnOverlay"] = scripts\mp\gametypes\br_gametype_rebirth.gsc::current_ally_volume;
    level.lootchopper_oncrateuse["playerNakedDropLoadout"] = scripts\mp\gametypes\br_gametype_rebirth.gsc::cs_flags_init;
    level.lootchopper_modifyweapondamage["mayConsiderPlayerDead"] = scripts\mp\gametypes\br.gsc::create_seatids_override;
    level.lootchopper_modifyweapondamage["triggerRespawnOverlay"] = scripts\mp\gametypes\br_gulag.gsc::_id_12E9E;
    level.lootchopper_modifyweapondamage["playerNakedDropLoadout"] = scripts\mp\gametypes\br.gsc::touchedmovingplatform;
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "mayConsiderPlayerDead", ::_waitforlui );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "triggerRespawnOverlay", ::_watchtoautoclosemenu );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerNakedDropLoadout", ::_watchforcircleclosure );
    thread add_head_icon_on_allies();
    thread ai_dropgren_weapontype();
    thread adjustuniqueitemposition();
    level._id_1254A = 1;
}

runpain( var_0 )
{
    if ( !isdefined( level.isdonetsksubmap.radio ) || !isdefined( level.isdonetsksubmap.radio.ownerteam ) )
        return 0;

    return var_0.team == level.isdonetsksubmap.radio.ownerteam;
}

activate_laser_shut_down_button( var_0 )
{
    foreach ( var_2 in scripts\mp\utility\teams::getteamdata( var_0.team, "players" ) )
    {
        var_3 = !isalive( var_2 );

        if ( var_2 != var_0 && var_3 )
        {
            var_2 notify( "force_stop_respawn" );
            var_2 scripts\mp\gametypes\br_gametype_rebirth.gsc::ctf_bot_defender_limit_for_team();
        }
    }
}

_waitforlui( var_0 )
{
    var_1 = "mayConsiderPlayerDead";

    if ( runpain( var_0 ) && isdefined( level.lootchopper_oncrateuse[var_1] ) )
    {
        if ( level.isdonetsksubmap.radio.owner == var_0 )
        {
            activate_laser_shut_down_button( var_0 );
            return [[ level.lootchopper_modifyweapondamage[var_1] ]]( var_0 );
        }
        else
            return [[ level.lootchopper_oncrateuse[var_1] ]]( var_0 );
    }
    else if ( isdefined( level.lootchopper_modifyweapondamage[var_1] ) )
        return [[ level.lootchopper_modifyweapondamage[var_1] ]]( var_0 );

    return undefined;
}

_watchtoautoclosemenu()
{
    return use_alt_computer_controls( "triggerRespawnOverlay" );
}

_watchforcircleclosure()
{
    return use_alt_computer_controls( "playerNakedDropLoadout" );
}

use_alt_computer_controls( var_0 )
{
    var_1 = self;

    if ( runpain( var_1 ) && level.isdonetsksubmap.radio.owner != var_1 && isdefined( level.lootchopper_oncrateuse[var_0] ) )
        return [[ level.lootchopper_oncrateuse[var_0] ]]();
    else if ( isdefined( level.lootchopper_modifyweapondamage[var_0] ) )
        return [[ level.lootchopper_modifyweapondamage[var_0] ]]();
}

add_head_icon_on_allies()
{
    if ( level.isdonetsksubmap._id_11CCB == -1 )
    {
        level waittill( "prematch_fade_done" );
        waitframe();

        if ( !istrue( level.br_circle_disabled ) )
        {
            while ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.safecircleent ) )
                waitframe();
        }

        level.isdonetsksubmap._id_11CCB = 0;
    }

    var_0 = isdying();
    level.isdonetsksubmap.radio = activestate( var_0 + ( 0, 0, 10 ) );
    level thread isequipmentselectable( level.isdonetsksubmap.radio );
    active_drones();
    scripts\mp\flags::gameflagwait( "br_ready_to_jump" );
    activeintelchallengekeys( 1 );
    level thread isdooropened( level.isdonetsksubmap.radio );
}

adjustzoneactivationdelayforlargemaps()
{
    if ( !getdvarint( "scr_br_alt_mode_escape_skip_initial_circle", 0 ) )
        return;

    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "randomizeCircleCenter" );
    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "planeSnapToOOB" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "planeUseCircleRadius" );
    scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "circleEarlyStart" );
}

get_focus_fire_icon_image()
{
    var_0 = ( level.br_level.circleradius[1][0], level.br_level.circleradius[1][1], 0 );
    var_1 = level.br_level.br_circleradii[1];
    var_2 = scripts\mp\gametypes\br_c130.gsc::createtestc130path( var_0, var_1 );
    return var_2;
}

apc_rus_monitordriverturretreload()
{
    thread seq3_has_seen_tiers();
}

seq3_has_seen_tiers()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = distance( self.vehicle_collision_update.startpt, self.vehicle_collision_update.invuln_to_veh_crush );
    var_1 = var_0 / scripts\mp\gametypes\br_c130.gsc::getc130speed() - 5;
    wait( var_1 );

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isdefined( var_3.br_infil_type ) && var_3.br_infil_type == "c130" && !isdefined( var_3.jumptype ) )
        {
            var_3.jumptype = "outOfBounds";
            var_3 notify( "halo_kick_c130" );
        }
    }
}

adjustuniqueitemposition()
{
    if ( !getdvarint( "scr_br_alt_mode_escape_skip_initial_circle", 0 ) )
        return;

    waittillframeend;
    level.br_level.br_circledelaytimes[1] = level.br_level.br_circledelaytimes[0];
    level.br_level.br_circledelaytimes[0] = 1;
    level.br_level.br_circleclosetimes[0] = 1;
    level.br_level.circlesettingsassert[0] = 1;
}

isexcessivescoreboosting( var_0 )
{
    level endon( "game_ended" );
    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "gametype_exfiltration", 0, var_0 );
    wait 1.5;
    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "gametype_exit_strategy", 0, var_0 );
}

isequipmentselectable( var_0 )
{
    level endon( "radio_debug_spawned" );

    if ( scripts\cp_mp\utility\game_utility::sat_piece() )
    {
        var_1 = [ 1000, 3000, 5000, 7000, 13000 ];
        var_2 = [ 0, 30, 90, 120, 180 ];
    }
    else
    {
        var_1 = [ 3000, 7000, 10000, 13000, 17500 ];
        var_2 = [ 0, 45, 90, 135, 180 ];
    }

    level.isdonetsksubmap._id_11CC5 = gettime() + level.isdonetsksubmap._id_133D0 * 1000;
    var_3 = level.isdonetsksubmap._id_133D0;
    var_4 = undefined;
    var_5 = -1;

    if ( level.isdonetsksubmap._id_133D0 > var_2[4] )
        var_5 = 4;
    else if ( level.isdonetsksubmap._id_133D0 > var_2[3] )
        var_5 = 3;
    else if ( level.isdonetsksubmap._id_133D0 > var_2[2] )
        var_5 = 2;
    else if ( level.isdonetsksubmap._id_133D0 > var_2[1] )
        var_5 = 1;
    else if ( level.isdonetsksubmap._id_133D0 > var_2[0] )
        var_5 = 0;

    if ( var_5 < 0 )
        wait 3;

    while ( var_5 >= 0 )
    {
        var_3 = var_3 - var_2[var_5];
        var_0 activate_trophy_protection( var_1[var_5] );
        scripts\mp\flags::gameflagwait( "br_ready_to_jump" );

        if ( var_5 == 0 )
        {
            activeairstrikes( var_2[1] );
            var_4 = scripts\engine\utility::play_loopsound_in_space( "iw8_nuke_alarm_lp", var_0.origin );
        }

        var_6 = activate_trap_from_interaction( var_3 );

        if ( !isdefined( var_6 ) )
            var_5 = 0;

        var_0 activate_trap_object();
        var_3 = var_2[var_5];
        var_5--;
    }

    var_0 activate_trap_object();

    if ( isdefined( var_4 ) )
        var_4 delete();

    level.isdonetsksubmap._id_11CCB = 1;
    level notify( "radio_landed" );
}

isdooropened( var_0 )
{
    level endon( "game_ended" );
    level endon( "radio_debug_spawned" );

    foreach ( var_2 in level.players )
    {
        if ( !var_2 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
            var_2 scripts\mp\hud_message::showsplash( "br_escape_radio_incoming" );
    }

    var_4 = 1;
    var_5 = 255;
    var_6 = level.isdonetsksubmap._id_133D0;
    var_7 = level.isdonetsksubmap._id_133D0;
    activeadvanceduavcount( var_4, var_5, var_6, 0 );
    activeairstrikes( var_7 );
    level waittill( "radio_landed" );

    foreach ( var_2 in level.players )
    {
        if ( !var_2 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
            var_2 scripts\mp\hud_message::showsplash( "br_escape_radio_on_ground" );
    }

    isflagcarrymode( "escape_radio_spawned", 0.75, 1 );
    active_drones();
    var_0 add_collision_to_hack_point( "on_ground" );
    var_0 activeparachuters();
    var_4 = 2;
    var_5 = 255;
    var_6 = level.isdonetsksubmap._id_12CF8;
    var_7 = level.isdonetsksubmap._id_135DC;
    activeadvanceduavcount( var_4, var_5, var_6 );
    activeairstrikes( var_7 );
    level activatefunc( var_0.origin );
}

activate_trap_from_interaction( var_0 )
{
    return level.isdonetsksubmap scripts\engine\utility::waittill_notify_or_timeout_return( "force_incoming", var_0 );
}

iseligibleforteamrevive()
{
    if ( !isdefined( level.br_level ) || !isdefined( level.br_level.br_circledelaytimes ) )
        return 0;

    var_0 = level.br_level.cleanupafterweaponswitch;

    if ( !isdefined( var_0 ) )
        var_0 = 0;

    var_1 = 0;

    if ( level.isdonetsksubmap.role_interaction )
        var_1 = getdvarint( "scr_br_escape_start_circles_remaining", 6 );
    else
        var_1 = getdvarint( "scr_br_escape_start_circles_remaining", 3 );

    var_2 = level.br_level.br_circledelaytimes.size - 1 - var_1 - var_0;
    return var_2;
}

mp_m_stack_patch( var_0 )
{
    var_1 = 0.0;

    for ( var_2 = 0; var_2 < level.br_level.br_circledelaytimes.size && var_2 < var_0; var_2++ )
        var_1 = var_1 + ( level.br_level.br_circledelaytimes[var_2] + level.br_level.br_circleclosetimes[var_2] );

    return var_1;
}

isdying()
{
    var_0 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
    var_1 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
    var_2 = spawn_maint_wave_1( var_0, var_1 );
    var_3 = scripts\mp\gametypes\br_quest_util.gsc::lastgunkilltime( "escape", var_2 );
    var_4 = undefined;
    var_5 = "none";

    if ( isdefined( var_3 ) )
    {
        var_4 = var_3.origin;
        var_5 = "chest";
    }
    else
    {
        var_6 = 0.0;
        var_7 = 1.0;
        var_8 = 1;
        var_9 = 1;
        var_10 = 1;
        var_11 = level.isdonetsksubmap._id_11CCC;
        var_4 = scripts\mp\gametypes\br_circle.gsc::oic_rewardammo( var_0, var_1, var_6, var_7, var_8, var_9, var_10, var_11 );

        if ( var_4 == var_0 )
        {
            var_12 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1 );
            var_4 = scripts\engine\utility::drop_to_ground( ( var_4[0], var_4[1], 4000 ), undefined, undefined, undefined, var_12 );
        }

        var_5 = "random";
    }

    logstring( "Escape Mode: Circle o:" + var_0 + " r:" + var_1 + " Radio o:" + var_4 + " t:" + var_5 );
    return var_4;
}

isfirstactivation( var_0 )
{
    var_1 = self.relic_squadlink_toofar_hud_logic;
    level endon( "game_ended" );
    level endon( "force_end" );
    level notify( "radio_state_change" );
    var_1 endon( "death" );
    var_2 = 0;

    foreach ( var_4 in level.players )
    {
        if ( var_4.team == var_0.team )
        {
            if ( var_4 == var_0 )
            {
                level thread scripts\mp\gametypes\br_quest_util.gsc::_id_1313A( var_0.origin, "revive" );
                var_4 thread active_fob_think( "escape_chopper_comms_online", 4 );
                var_4 scripts\mp\hud_message::showsplash( "br_escape_radio_picked_up_self" );
                var_4 thread active_neurotoxin_clouds( "exit_strategy_survive", 0.75, 0 );
            }
            else
            {
                if ( !var_4 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
                    var_4 thread active_fob_think( "escape_chopper_comms_online", 4 );

                var_4 scripts\mp\hud_message::showsplash( "br_escape_radio_picked_up_ally" );
                var_4 thread active_neurotoxin_clouds( "exit_strategy_teammate_pickup", 0.75, 0 );
                var_5 = scripts\mp\gametypes\br_vip_quest.gsc::_id_1331A( var_4, var_0, "exfil_respawn" );

                if ( var_5 && !var_2 )
                {
                    var_2 = 1;
                    var_0 thread scripts\mp\hud_message::showsplash( "br_squadmate_revived" );
                }
            }

            continue;
        }

        if ( !var_4 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
        {
            var_4 thread active_fob_think( "escape_chopper_comms_online", 4 );
            var_4 scripts\mp\hud_message::showsplash( "br_escape_radio_picked_up_enemy" );
            var_4 thread active_neurotoxin_clouds( "escape_radio_picked_up_enemy", 0.75, 0 );
        }
    }

    var_1 add_client_back_to_mask_after_delay();
    var_1 add_collision_to_hack_point( "picked_up", var_0 );
    var_1 activatemusictrigger();
    var_1.owner = var_0;
    var_1.usetimeoverride = var_1.ownerteam;
    var_1.ownerteam = var_1.owner.team;
    var_0 thread scripts\mp\rank::scoreeventpopup( "br_escape_radio_looted" );

    if ( level.isdonetsksubmap.isvalidpos > 0 )
        setteamscore( var_1.ownerteam, getteamscore( var_1.ownerteam ) + level.isdonetsksubmap.isvalidpos );

    level.isdonetsksubmap.vip_questthink_iconposition = gettime();
    active_drones();
    var_7 = 3;
    var_8 = var_0 getentitynumber();
    var_9 = level.isdonetsksubmap._id_12CF8;
    var_10 = level.isdonetsksubmap._id_135DC;
    activeadvanceduavcount( var_7, var_8, var_9, 0 );
    activeairstrikes( var_10 );
    var_1.owner thread isffprotectedaction();
    var_1.owner thread activeparachutersfactionvo( var_0 );
    var_1 notify( "escape_radio_picked_up" );
    var_0 actualstarttime( var_1 );
}

active_fob_think( var_0, var_1 )
{
    var_2 = self;
    var_2 endon( "disconnect" );
    level endon( "game_ended" );
    level endon( "cancel_escapeRadioPlayChopperDialog" );

    if ( isdefined( var_1 ) )
        wait( var_1 );

    var_3 = "dx_bra_" + game["dialog"][var_0];
    var_3 = tolower( var_3 );
    var_4 = lookupsoundlength( var_3, 1 ) / 1000;
    var_2 queuedialogforplayer( var_3, var_0, var_4 );
}

active_neurotoxin_clouds( var_0, var_1, var_2 )
{
    var_3 = self;
    var_3 endon( "disconnect" );
    level endon( "game_ended" );
    level endon( "radio_state_change" );

    if ( isdefined( var_1 ) )
        wait( var_1 );

    scripts\mp\gametypes\br_public.gsc::cpcpammoarmorcratecapturecallback( var_0, var_3, var_2 );
}

isflagcarrymode( var_0, var_1, var_2 )
{
    thread active_relic_bang_and_boom( var_0, var_1, var_2 );
}

active_relic_bang_and_boom( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    level endon( "radio_state_change" );

    if ( isdefined( var_1 ) )
        wait( var_1 );

    foreach ( var_4 in level.players )
        var_4 active_neurotoxin_clouds( var_0, undefined, var_2 );
}

actualstarttime( var_0 )
{
    var_1 = self;
    var_1 endon( "escape_radio_win_timer_wait" );
    level endon( "game_ended" );

    if ( isdefined( level.isdonetsksubmap.radio.waittime ) )
        add_ai_rider_to_decho( level.isdonetsksubmap.radio.waittime );
    else
        add_ai_rider_to_decho( level.isdonetsksubmap._id_135DC );
}

init_relic_bang_and_boom( var_0 )
{
    var_1 = self;
    level.isdonetsksubmap notify( "escape_radio_dropped" );
    level notify( "cancel_escapeRadioPlayChopperDialog" );
    level notify( "radio_state_change" );
    var_1 notify( "escape_radio_win_timer_wait" );
    var_1 endon( "escape_radio_win_timer_wait" );
    level endon( "game_ended" );
    thread isdroppablepickup();
    var_2 = activatemeleeblood();

    if ( var_2 <= 60 )
        level.isdonetsksubmap.radio.waittime = min( 60, var_2 + level.isdonetsksubmap._id_12C76 );
    else
        level.isdonetsksubmap.radio.waittime = min( level.isdonetsksubmap._id_12CF8, var_2 + level.isdonetsksubmap._id_12C76 );

    level.isdonetsksubmap._id_135DC = level.isdonetsksubmap.radio.waittime;
    level.isdonetsksubmap.radio add_client_back_to_mask_after_delay();
    active_cs_files();
    actorid( var_1 );
    var_3 = 2;
    var_4 = 255;
    var_5 = level.isdonetsksubmap._id_12CF8;
    var_6 = level.isdonetsksubmap.radio.waittime;
    activeadvanceduavcount( var_3, var_4, var_5, 0 );
    activeairstrikes( var_6 );
    level.isdonetsksubmap.radio freescriptable();
    level.isdonetsksubmap.radio = undefined;
    var_7 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_0, var_1.origin, var_1.angles, self, 0, 0, 10, 1 );
    level.isdonetsksubmap.radio = scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_escape_radio", var_7, 0, 1 );
    level.isdonetsksubmap.radio.keepinmap = 1;
    level.isdonetsksubmap.radio.hidden = 0;
    level.isdonetsksubmap.radio thread activatefunc( level.isdonetsksubmap.radio.origin );

    foreach ( var_1 in level.players )
    {
        if ( !var_1 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
            var_1 scripts\mp\hud_message::showsplash( "br_escape_radio_on_ground" );
    }

    isflagcarrymode( "exit_strategy_radio_down", 0.75, 1 );
    level.isdonetsksubmap.radio add_collision_to_hack_point( "on_ground" );
}

isdroppablepickup()
{
    if ( level.isdonetsksubmap.rocket_fuel_x2 != 1 )
        return;
    else
    {
        level endon( "radio_state_change" );
        level endon( "game_ended" );
        wait( level.isdonetsksubmap._id_11CC8 * 0.75 );
        isflagcarrymode( "exit_strategy_radio_strength", 0.0, 1 );
        wait( level.isdonetsksubmap._id_11CC8 * 0.25 );
        level.isdonetsksubmap.radio thread activate_upload_station_for_interact( 0 );
    }
}

actorid( var_0 )
{
    foreach ( var_0 in scripts\mp\utility\teams::getteamdata( var_0.team, "players" ) )
    {
        var_0 notify( "force_stop_respawn" );
        var_0 scripts\mp\gametypes\br_gametype_rebirth.gsc::createstreakinfo_ai_turret();
        var_0 scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "respawnInSeconds", 0 );
    }
}

activatedtime( var_0 )
{
    if ( level.isdonetsksubmap._id_11CC7 <= 0 )
        return;

    var_1 = canceljoins( undefined, undefined, var_0, level.isdonetsksubmap._id_11CC7 );

    if ( isdefined( var_1 ) )
    {
        foreach ( var_3 in var_1 )
        {
            if ( var_3.type == "br_loot_cache" || var_3.type == "br_loot_cache_lege" || var_3.type == "brloot_escape_radio" || var_3.type == "br_cargotrain" || var_3.type == "br_cargotrain_engine" )
                continue;

            if ( var_3 getscriptableisreserved() && !isdefined( var_3.createflagstart ) )
                continue;

            scripts\mp\gametypes\br_pickups.gsc::spawn_overwatch_soldiers_01( var_3 );
        }
    }
}

activatefunc( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "escape_radio_picked_up" );

    if ( level.isdonetsksubmap._id_11CC7 <= 0 )
        return;

    for (;;)
    {
        activatedtime( var_0 );
        wait 2;
    }
}

add_ai_rider_to_decho( var_0 )
{
    var_1 = self;
    var_1 endon( "escape_radio_win_timer_wait" );
    var_1 endon( "disconnect" );
    var_1 thread activate_upload_station( var_0 );
    var_1 thread actorloopanim( var_0 );
    activeclosingpool( level.isdonetsksubmap._id_12CF8 );
    activeairstrikes( var_0 );
    wait( var_0 );
    active_drones();
    activategastrap( var_1.team );
}

activatemeleeblood()
{
    return level.isdonetsksubmap._id_135DC - ( gettime() - level.isdonetsksubmap.vip_questthink_iconposition ) / 1000;
}

activate_upload_station( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    level endon( "force_end" );
    level.isdonetsksubmap endon( "escape_radio_dropped" );
    var_1 endon( "escape_radio_win_timer_wait" );
    var_1 endon( "disconnect" );
    var_2 = 10;
    var_3 = max( 0, var_0 - var_2 );
    wait( var_3 );

    while ( var_2 > 1 )
    {
        var_4 = scripts\mp\gamelogic::mp_oilrig_patches( var_2 );

        foreach ( var_6 in level.players )
            var_6 playlocalsound( var_4 );

        var_2 = var_2 - 1;
        wait 1;
    }
}

actorloopanim( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    level endon( "force_end" );
    level.isdonetsksubmap endon( "escape_radio_dropped" );
    var_1 endon( "escape_radio_win_timer_wait" );
    var_1 endon( "disconnect" );
    var_2 = [];

    if ( var_0 >= 240 )
        var_2 = [ 240, 180, 120, 60, 45, 20, 10, 5 ];
    else if ( var_0 >= 180 )
        var_2 = [ 180, 120, 60, 45, 20, 10, 5 ];
    else if ( var_0 >= 120 )
        var_2 = [ 120, 60, 45, 20, 10, 5 ];
    else if ( var_0 >= 60 )
        var_2 = [ 60, 45, 20, 10, 5 ];
    else if ( var_0 >= 45 )
        var_2 = [ 45, 20, 10, 5 ];
    else if ( var_0 >= 20 )
        var_2 = [ 20, 10, 5 ];
    else if ( var_0 >= 10 )
        var_2 = [ 10, 5 ];
    else if ( var_0 >= 5 )
        var_2 = [ 5 ];

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        var_4 = var_0 - var_2[var_3];
        var_0 = var_0 - var_4;
        wait( var_4 );

        if ( var_2[var_3] <= 60 )
        {
            scripts\mp\gametypes\br_public.gsc::brleaderdialog( "exit_strategy_less_than_" + var_2[var_3] + "_sec" );
            continue;
        }

        scripts\mp\gametypes\br_public.gsc::brleaderdialog( "exit_strategy_less_than_" + var_2[var_3] / 60 + "_min" );
    }
}

activestate( var_0 )
{
    var_1 = easepower( "brloot_escape_radio", var_0 );
    var_1.keepinmap = 1;
    var_2 = 1;
    var_3 = 255;
    var_4 = level.isdonetsksubmap._id_133D0;
    var_5 = level.isdonetsksubmap._id_133D0;
    activeadvanceduavcount( var_2, var_3, var_4, 0 );
    activeairstrikes( var_5 );
    var_1 activatemusictrigger();
    level.isdonetsksubmap.radio = var_1;
    return var_1;
}

actorropeplayscene()
{
    self notify( "_escapeRadioUpdateIconPosition" );
    self endon( "_escapeRadioUpdateIconPosition" );
    self endon( "escape_radio_icon_hide" );
    self endon( "death" );

    for (;;)
    {
        scripts\mp\objidpoolmanager::update_objective_position( self.icon, self.origin + ( 0, 0, 50 ) );
        waitframe();
    }
}

add_collision_to_hack_point( var_0, var_1 )
{
    var_2 = self;

    if ( var_0 == "picked_up" )
        var_2 adjustlootleadermarkcount( var_1, "ui_mp_br_mapmenu_icon_escape_objective_friendly", "ui_mp_br_mapmenu_icon_escape_objective_enemy" );
    else if ( var_0 == "on_ground" )
    {
        var_3 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

        if ( var_3 != -1 )
        {
            scripts\mp\objidpoolmanager::objective_add_objective( var_3, "current", var_2.origin + ( 0, 0, 50 ), "ui_mp_br_mapmenu_icon_escape_objective" );
            scripts\mp\objidpoolmanager::update_objective_setbackground( var_3, 1 );

            foreach ( var_5 in level.players )
            {
                if ( !var_5 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
                    objective_addclienttomask( var_3, var_5 );
            }

            objective_showtoplayersinmask( var_3 );
            var_2.icon = var_3;
            var_2 thread actorropeplayscene();
        }
        else
        {

        }
    }
}

add_client_back_to_mask_after_delay()
{
    var_0 = self;
    var_0 notify( "escape_radio_icon_hide" );

    if ( isdefined( var_0.icon ) )
    {
        scripts\mp\objidpoolmanager::returnobjectiveid( var_0.icon );
        var_0.icon = undefined;
    }

    if ( isdefined( var_0.loadout_updatebrammo ) )
    {
        scripts\mp\objidpoolmanager::returnobjectiveid( var_0.loadout_updatebrammo );
        var_0.loadout_updatebrammo = undefined;
    }

    if ( isdefined( var_0.is_scriptable_healthy ) )
    {
        scripts\mp\objidpoolmanager::returnobjectiveid( var_0.is_scriptable_healthy );
        var_0.is_scriptable_healthy = undefined;
    }
}

activate_trophy_protection( var_0 )
{
    var_1 = self;
    var_2 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_1.origin, var_0, 0.0, 0.4, 0, 0 );
    var_1 scripts\mp\gametypes\br_quest_util.gsc::get_minigun_path( 4, 8, 4, var_2 );
    var_1 scripts\mp\gametypes\br_quest_util.gsc::_id_12395( var_0 );

    foreach ( var_4 in level.players )
        var_1 scripts\mp\gametypes\br_quest_util.gsc::_id_12550( var_4 );
}

activate_trap_object()
{
    var_0 = self;

    foreach ( var_2 in level.players )
        var_0 scripts\mp\gametypes\br_quest_util.gsc::playertimestart( var_2 );
}

activeparachutersfactionvo( var_0 )
{
    if ( level.isdonetsksubmap._id_11CC6 != 1 )
        return;

    level endon( "game_ended" );
    level.isdonetsksubmap notify( "escape_circle_peek" );
    level.isdonetsksubmap endon( "escape_circle_peek" );

    if ( !isdefined( level._id_12BF1 ) || !isdefined( level._id_12BF1[var_0.team] ) || level._id_12BF1[var_0.team] == 0 )
        scripts\mp\gametypes\br_quest_util.gsc::_id_11C69( var_0.team );

    for (;;)
    {
        level waittill( "br_circle_set", var_1 );
        var_2 = level.br_circle.circleindex + 1;

        if ( var_1 >= var_2 )
        {
            if ( level._id_12BF1[var_0.team] + var_2 <= var_1 + 1 )
            {
                level._id_12BF1[var_0.team] = undefined;
                scripts\mp\gametypes\br_quest_util.gsc::_id_11C69( var_0.team );
            }
        }
    }
}

active_cs_files()
{
    level.isdonetsksubmap notify( "escape_circle_peek" );
}

activatemusictrigger()
{
    var_0 = self;
    var_0.hidden = 1;
    var_0 setscriptablepartstate( "brloot_escape_radio", "hidden" );
}

activeparachuters()
{
    var_0 = self;
    var_0.hidden = 0;
    var_0 setscriptablepartstate( "brloot_escape_radio", "visible" );
}

isdragonsbreath( var_0 )
{
    level thread active_drones();
    activategastrap( var_0 );
}

activategastrap( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = level.isdonetsksubmap.radio.ownerteam;

    var_1 = getarraykeys( level.teamdata );
    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        if ( var_4 == var_0 )
            setteamscore( var_4, getteamscore( var_4 ) + level.isdonetsksubmap.isvalidspectatetarget );

        if ( level.teamdata[var_4]["aliveCount"] > 0 )
            var_2[var_2.size] = var_4;
    }

    var_6 = scripts\mp\utility\script::quicksort( var_2, ::adrenaline_crate_player_at_max_ammo );

    for ( var_7 = 0; var_7 < var_6.size; var_7++ )
    {
        var_4 = var_6[var_7];
        var_8 = var_7 + 1;
        thread scripts\mp\gametypes\br.gsc::update_ai_volumes( var_4, var_8, 0, 1 );
    }

    foreach ( var_4, var_10 in level.teamdata )
    {
        if ( var_4 == var_0 )
            continue;

        var_11 = scripts\mp\utility\teams::getteamdata( var_4, "alivePlayers" );

        if ( var_11.size > 0 )
        {
            foreach ( var_13 in var_11 )
            {
                var_13 freezecontrols( 1 );
                var_13 playerhide();
            }
        }
    }

    thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"]["enemies_eliminated"] );
}

adrenaline_crate_player_at_max_ammo( var_0, var_1 )
{
    var_2 = getteamscore( var_0 );
    var_3 = getteamscore( var_1 );
    return var_2 >= var_3;
}

spawn_maint_wave_1( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2._id_121E3 = "getUnusedLootCacheArray";
    var_2._id_121DF = var_0;
    var_2._id_121E6 = var_1;
    var_2._id_121E7 = 0;
    var_2._id_121E1 = 1;
    var_2.mintime = level.isdonetsksubmap._id_11CCC;
    return var_2;
}

adjustlootleadermarkcount( var_0, var_1, var_2 )
{
    var_3 = self;
    var_4 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

    if ( var_4 != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_4, "current", var_3.origin, var_1 );
        scripts\mp\objidpoolmanager::update_objective_setbackground( var_4, 1 );
        var_5 = getdvarfloat( "scr_br_escape_friendly_icon_ping_rate", 0.0 );
        var_3 thread ai_excluder( var_0, var_4, var_5 );
        objective_removeallfrommask( var_4 );
        var_6 = scripts\mp\utility\teams::getteamdata( var_0.team, "players" );

        foreach ( var_8 in var_6 )
        {
            if ( !var_8 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
                objective_addclienttomask( var_4, var_8 );
        }

        objective_showtoplayersinmask( var_4 );
        var_3.loadout_updatebrammo = var_4;
    }

    var_10 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

    if ( var_10 != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_10, "current", var_3.origin, var_2 );
        scripts\mp\objidpoolmanager::update_objective_setbackground( var_10, 1 );
        var_5 = getdvarfloat( "scr_br_escape_enemy_icon_ping_rate", 0.0 );
        var_3 thread ai_excluder( var_0, var_10, var_5 );
        objective_removeallfrommask( var_10 );

        foreach ( var_8 in level.players )
        {
            if ( var_8 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() || var_8.team == var_0.team )
                objective_addclienttomask( var_10, var_8 );
        }

        objective_hidefromplayersinmask( var_10 );
        var_3.is_scriptable_healthy = var_10;
    }
}

ai_excluder( var_0, var_1, var_2 )
{
    var_3 = self;
    level.isdonetsksubmap endon( "escape_radio_dropped" );

    if ( var_2 <= 0.0 )
    {
        scripts\mp\objidpoolmanager::update_objective_setzoffset( var_1, 50 );
        scripts\mp\objidpoolmanager::update_objective_onentity( var_1, var_0 );
    }
    else
    {
        for (;;)
        {
            if ( isdefined( var_0 ) )
            {
                scripts\mp\objidpoolmanager::update_objective_position( var_1, var_0.origin + ( 0, 0, 50 ) );

                if ( var_0 scripts\cp_mp\utility\player_utility::isinvehicle() )
                {
                    wait 0.1;
                    continue;
                }

                wait( var_2 );
            }
        }
    }
}

dangercircletick( var_0, var_1, var_2 )
{
    if ( !isdefined( level.isdonetsksubmap ) )
        return;

    if ( !isdefined( level.isdonetsksubmap.radio ) )
        level.isdonetsksubmap.lower_airlock = undefined;
    else if ( istrue( level.isdonetsksubmap.radio.hidden ) )
        level.isdonetsksubmap.lower_airlock = undefined;
    else
    {
        var_3 = var_1 * var_1;
        var_4 = var_2 * var_2;
        var_5 = distance2dsquared( level.isdonetsksubmap.radio.origin, var_0 );

        if ( var_5 > var_3 )
        {
            level.isdonetsksubmap.radio thread activate_upload_station_for_interact( 1 );
            level.isdonetsksubmap.lower_airlock = undefined;
            return;
        }

        if ( var_5 > var_4 )
        {
            if ( !isdefined( level.isdonetsksubmap.lower_airlock ) )
                level.isdonetsksubmap.lower_airlock = 1;
            else
                level.isdonetsksubmap.lower_airlock = level.isdonetsksubmap.lower_airlock + 1;

            if ( level.isdonetsksubmap.lower_airlock == 5 )
                isflagcarrymode( "exit_strategy_radio_strength", 0.0, 1 );

            if ( level.isdonetsksubmap.lower_airlock >= level.isdonetsksubmap._id_11CC9 )
            {
                level.isdonetsksubmap.radio thread activate_upload_station_for_interact( 1 );
                level.isdonetsksubmap.lower_airlock = undefined;
                return;
            }

            return;
        }

        level.isdonetsksubmap.lower_airlock = undefined;
    }
}

activate_upload_station_for_interact( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "escape_radio_picked_up" );
    level notify( "radio_state_change" );

    foreach ( var_3 in level.players )
    {
        if ( !var_3 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
        {
            if ( var_0 )
            {
                var_3 scripts\mp\hud_message::showsplash( "br_escape_radio_lost_in_gas" );
                continue;
            }

            var_3 scripts\mp\hud_message::showsplash( "br_escape_radio_expired" );
        }
    }

    isflagcarrymode( "exit_strategy_radio_fixing", 0.75, 1 );
    active_drones();
    activeintelchallengekeys( 0 );
    var_1 add_client_back_to_mask_after_delay();
    var_1 freescriptable();
    level.isdonetsksubmap.radio = undefined;
    wait 5;

    if ( level.isdonetsksubmap._id_133DA != -1 )
        level.isdonetsksubmap._id_133D9 = level.isdonetsksubmap._id_133DA;
    else if ( level.br_circle.circleindex < level.isdonetsksubmap.kiosksearchradiusidealmax )
        level.isdonetsksubmap._id_133D9 = level.isdonetsksubmap.processedscoreevent;
    else
        level.isdonetsksubmap._id_133D9 = level.isdonetsksubmap.kiosksearchradiusidealmin;

    level.isdonetsksubmap._id_133D0 = level.isdonetsksubmap._id_133D9;
    level thread add_head_icon_on_allies();
}

isfeaturedisabled()
{
    var_0 = self;

    if ( !isdefined( level.isdonetsksubmap ) || !isdefined( level.isdonetsksubmap.radio ) )
        return;

    if ( isdefined( level.isdonetsksubmap.radio.icon ) )
    {
        objective_removeclientfrommask( level.isdonetsksubmap.radio.icon, var_0 );
        objective_showtoplayersinmask( level.isdonetsksubmap.radio.icon );
        return;
    }

    if ( isdefined( level.isdonetsksubmap.radio.ownerteam ) )
    {
        if ( var_0.team == level.isdonetsksubmap.radio.ownerteam && isdefined( level.isdonetsksubmap.radio.loadout_updatebrammo ) )
        {
            objective_removeclientfrommask( level.isdonetsksubmap.radio.loadout_updatebrammo, var_0 );
            objective_showtoplayersinmask( level.isdonetsksubmap.radio.loadout_updatebrammo );
        }

        if ( var_0.team != level.isdonetsksubmap.radio.ownerteam && isdefined( level.isdonetsksubmap.radio.is_scriptable_healthy ) )
        {
            objective_addclienttomask( level.isdonetsksubmap.radio.is_scriptable_healthy, var_0 );
            objective_hidefromplayersinmask( level.isdonetsksubmap.radio.is_scriptable_healthy );
        }
    }
}

isfeatureenabled()
{
    var_0 = self;

    if ( !isdefined( level.isdonetsksubmap ) || !isdefined( level.isdonetsksubmap.radio ) )
        return;

    if ( isdefined( level.isdonetsksubmap.radio.icon ) )
    {
        objective_addclienttomask( level.isdonetsksubmap.radio.icon, var_0 );
        objective_showtoplayersinmask( level.isdonetsksubmap.radio.icon );
        return;
    }

    if ( isdefined( level.isdonetsksubmap.radio.ownerteam ) )
    {
        if ( var_0.team == level.isdonetsksubmap.radio.ownerteam && isdefined( level.isdonetsksubmap.radio.loadout_updatebrammo ) )
        {
            objective_addclienttomask( level.isdonetsksubmap.radio.loadout_updatebrammo, var_0 );
            objective_showtoplayersinmask( level.isdonetsksubmap.radio.loadout_updatebrammo );
        }

        if ( var_0.team != level.isdonetsksubmap.radio.ownerteam && isdefined( level.isdonetsksubmap.radio.is_scriptable_healthy ) )
        {
            objective_removeclientfrommask( level.isdonetsksubmap.radio.is_scriptable_healthy, var_0 );
            objective_hidefromplayersinmask( level.isdonetsksubmap.radio.is_scriptable_healthy );
        }
    }
}

unset_relic_grounded( var_0 )
{
    var_0.hide_headicon = var_0.origin;

    if ( isdefined( level.isdonetsksubmap ) && isdefined( level.isdonetsksubmap.radio ) && isdefined( level.isdonetsksubmap.radio.owner ) && level.isdonetsksubmap.radio.owner == var_0 )
    {
        var_1 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();
        var_0 init_relic_bang_and_boom( var_1 );
    }
}

activeairstrikes( var_0 )
{
    var_1 = gettime() + var_0 * 1000;
    setomnvar( "ui_br_exfil_radio_end_time", int( var_1 ) );
}

activeintelchallengekeys( var_0 )
{
    activeadvanceduavcount( var_0 );
}

activecurrstate( var_0 )
{
    activeadvanceduavcount( undefined, var_0 );
}

activeclosingpool( var_0 )
{
    activeadvanceduavcount( undefined, undefined, var_0 );
}

activeadvanceduavcount( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( level.istempsfxent ) )
    {
        level.istempsfxent = spawnstruct();
        level.istempsfxent._id_11CCF = 0;
        level.istempsfxent._id_11CCE = 0;
        level.istempsfxent._id_11CCA = 255;
        level.istempsfxent.start_nuke_vault = 0;
    }

    if ( isdefined( var_3 ) )
        level.istempsfxent._id_11CCF = var_3;

    if ( isdefined( var_0 ) )
        level.istempsfxent._id_11CCE = var_0;

    if ( isdefined( var_1 ) )
        level.istempsfxent._id_11CCA = var_1;

    if ( isdefined( var_2 ) )
        level.istempsfxent.start_nuke_vault = var_2;

    var_4 = ( int( level.istempsfxent._id_11CCF ) & 1 ) << 22;
    var_4 = var_4 + ( ( int( level.istempsfxent._id_11CCE ) & 7 ) << 19 );
    var_4 = var_4 + ( ( int( level.istempsfxent._id_11CCA ) & 255 ) << 11 );
    var_4 = var_4 + ( int( level.istempsfxent.start_nuke_vault ) & 2047 );
    setomnvar( "ui_br_exfil_radio_state", var_4 );
}

active_drones()
{
    activeintelchallengekeys( 0 );
}

activenumber( var_0 )
{
    activeadvanceduavcount( undefined, undefined, undefined, var_0 );
}

isffprotectedaction()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    level.isdonetsksubmap endon( "escape_radio_dropped" );
    var_1 = 0;
    var_2 = 0;
    var_3 = 0;

    for (;;)
    {
        var_4 = istrue( var_0.round_robin_spawners ) || scripts\mp\utility\player::round_spawn_enemies( var_0 );

        if ( var_4 && !var_1 )
        {
            var_1 = 1;
            var_2 = gettime();

            if ( getdvarint( "scr_br_alt_mode_escape_reset_timer_when_invalid_state", 0 ) )
                var_5 = level.isdonetsksubmap._id_135DC;
            else
            {
                var_0 notify( "escape_radio_win_timer_wait" );
                level.isdonetsksubmap._id_12C9F = gettime() - level.isdonetsksubmap.vip_questthink_iconposition - var_3;
                level.isdonetsksubmap.radio.waittime = level.isdonetsksubmap._id_135DC - level.isdonetsksubmap._id_12C9F / 1000;
                var_5 = level.isdonetsksubmap.radio.waittime;
            }

            activenumber( 1 );
        }
        else if ( !var_4 && var_1 )
        {
            var_3 = var_3 + ( gettime() - var_2 );
            var_1 = 0;
            var_0 thread actualstarttime( level.isdonetsksubmap.radio );
            level.isdonetsksubmap._id_12C9F = undefined;
            activenumber( 0 );
        }

        waitframe();
    }
}

vehicle_spawn_mp_gamemodesupportsrespawn()
{
    return 1;
}

activate_switch_cooldown()
{
    if ( !isdefined( level.istempsfxent ) || !isdefined( level.istempsfxent._id_11CCE ) )
        return -1;

    var_0 = level.istempsfxent._id_11CCE;

    if ( var_0 == 1 && isdefined( level.isdonetsksubmap._id_11CC5 ) )
    {
        var_1 = max( 0, level.isdonetsksubmap._id_11CC5 - gettime() );
        var_2 = var_1 / 1000;
        return var_2;
    }
    else if ( var_0 == 3 )
    {
        var_3 = gettime() - level.isdonetsksubmap.vip_questthink_iconposition;
        var_2 = level.isdonetsksubmap._id_135DC - var_3 / 1000;
        return var_2;
    }
    else if ( var_0 == 2 )
        return level.isdonetsksubmap._id_135DC;
    else
        return -1;
}

ai_dropgren_weapontype()
{
    level endon( "game_ended" );
    level endon( "force_end" );
    level.get_random_leftover_letter = undefined;
    level.get_random_notnegative = -1;
    var_0 = 0;
    var_1 = level.isdonetsksubmap._id_12CF8;

    for (;;)
    {
        var_2 = 1;

        if ( !isdefined( level.isdonetsksubmap ) )
            var_2 = 0;
        else if ( !isdefined( level.istempsfxent ) || !isdefined( level.istempsfxent._id_11CCE ) )
            var_2 = 0;

        if ( var_2 )
        {
            var_3 = activate_switch_cooldown();
            var_4 = level.istempsfxent._id_11CCE;

            if ( var_3 == -1 || var_4 == 0 )
            {

            }
            else if ( var_4 == 1 && !var_0 )
            {
                if ( getdvarint( "scr_br_override_remaining_time", 0 ) != 0 )
                    var_3 = getdvarint( "scr_br_override_remaining_time", 0 );

                if ( var_3 < 80 )
                    adjusteventdistributionpadding( "br_escape_tenpercent" );
            }
            else if ( var_4 == 3 || var_4 == 2 || var_0 )
            {
                if ( var_4 == 1 )
                    var_3 = var_1;

                var_0 = 1;
                var_5 = min( var_1, var_3 );
                var_1 = var_5;

                if ( getdvarint( "scr_br_override_remaining_time", 0 ) != 0 )
                    var_5 = getdvarint( "scr_br_override_remaining_time", 0 );

                if ( var_5 <= 60 )
                    adjusteventdistributionpadding( "br_escape_ninetypercent" );
                else if ( var_5 < 125 )
                    adjusteventdistributionpadding( "br_escape_eightypercent" );
                else if ( var_5 < 185 )
                    adjusteventdistributionpadding( "br_escape_seventypercent" );
                else if ( var_5 < 250 )
                    adjusteventdistributionpadding( "br_escape_fiftypercent" );
                else
                    adjusteventdistributionpadding( "br_escape_thirtypercent" );
            }
        }

        wait 1;
    }
}

adjusteventdistributionpadding( var_0 )
{
    if ( isdefined( level.get_random_leftover_letter ) && level.get_random_leftover_letter == var_0 )
        return;

    var_1 = game["music"][var_0].size;
    var_2 = randomint( var_1 );
    setmusicstate( "" );
    level.get_random_leftover_letter = var_0;
    level.get_random_notnegative = var_2;

    foreach ( var_4 in level.players )
    {
        if ( !var_4 scripts\mp\gametypes\br_public.gsc::rungwperif_flak() )
            var_4 _id_123C5();
    }
}

_id_123C5()
{
    var_0 = self;

    if ( isdefined( level.get_random_leftover_letter ) )
        var_0 setplayermusicstate( game["music"][level.get_random_leftover_letter][level.get_random_notnegative] );
}
