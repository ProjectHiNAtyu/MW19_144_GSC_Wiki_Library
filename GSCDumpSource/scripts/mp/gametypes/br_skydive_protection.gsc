// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = isdefined( level.modifyplayerdamage ) && level.modifyplayerdamage == scripts\mp\gametypes\br.gsc::brmodifyplayerdamage;

    if ( var_0 )
    {
        level.modifyplayerdamage = ::current_volume_allies;
        level._id_125C6 = getdvarint( "scr_skydiveSpawnProtection", 1 ) == 1;
        level._id_125C8 = getdvarfloat( "scr_skydiveSpawnProtectionModifier", 0.1 );
        level._id_125C5 = getdvarfloat( "scr_skydiveSpawnLauncherDamage", 0.1 );
        level._id_125CC = getdvarint( "scr_skydiveSpawnProtectionScaleHeightTop", 800 );
        level._id_125CB = getdvarint( "scr_skydiveSpawnProtectionScaleHeightBottom", 50 );
        level._id_125CA = getdvarfloat( "scr_skydiveSpawnProtectionModifierTop", 0.1 );
        level._id_125C9 = getdvarfloat( "scr_skydiveSpawnProtectionModifierBottom", 0.9 );
    }
}

relic_amped_wait_till_revived( var_0 )
{
    if ( !istrue( level._id_125C6 ) )
        return;

    thread current_trigger();
    thread current_struct();
    thread current_steps();

    if ( var_0 )
        thread current_tablet();
    else
        self._id_125C8 = level._id_125C8;
}

current_struct()
{
    self endon( "death_or_disconnect" );
    self endon( "skydive_remove_spawn_protection" );
    self._id_125C6 = 1;

    while ( !self isonground() )
        waitframe();

    self._id_125C6 = undefined;
    self notify( "skydive_remove_spawn_protection" );
}

current_steps()
{
    self endon( "death_or_disconnect" );
    self endon( "skydive_remove_launcher_protection" );
    self._id_125C4 = 1;

    while ( !self isonground() )
        waitframe();

    self._id_125C4 = undefined;
    self notify( "skydive_remove_launcher_protection" );
}

current_trigger()
{
    self endon( "death_or_disconnect" );
    self endon( "skydive_remove_spawn_protection" );
    self._id_125C6 = 1;
    self waittill( "weapon_fired" );
    self._id_125C6 = undefined;
    self notify( "skydive_remove_spawn_protection" );
}

current_tablet()
{
    self endon( "death_or_disconnect" );
    self endon( "skydive_remove_spawn_protection" );
    self._id_125C7 = 1;
    self._id_125C8 = 1;

    while ( istrue( self._id_125C6 ) )
    {
        var_0 = scripts\mp\gametypes\br_public.gsc::init_rpg_spawns( self.origin, 0, -100000 );
        var_1 = self.origin[2] - var_0[2];
        var_2 = level._id_125CC - level._id_125CB;
        self._id_125C7 = clamp( var_1 / var_2, 0, 1 );
        var_3 = level._id_125CA - level._id_125C9;
        self._id_125C8 = self._id_125C7 * var_3 + level._id_125C9;
        waitframe();
    }

    self._id_125C8 = undefined;
}

current_volume_allies( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( istrue( level._id_125C6 ) )
    {
        if ( istrue( var_1._id_125C6 ) && isdefined( self._id_125C8 ) )
            var_3 = var_3 * self._id_125C8;

        if ( isdefined( var_2 ) && istrue( var_2._id_125C4 ) )
        {
            switch ( var_4 )
            {
                case "MOD_EXPLOSIVE":
                case "MOD_GRENADE_SPLASH":
                case "MOD_GRENADE":
                case "MOD_PROJECTILE_SPLASH":
                    var_3 = var_3 * level._id_125C5;
                    break;
            }
        }
    }

    var_3 = scripts\mp\gametypes\br.gsc::brmodifyplayerdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
    return var_3;
}
