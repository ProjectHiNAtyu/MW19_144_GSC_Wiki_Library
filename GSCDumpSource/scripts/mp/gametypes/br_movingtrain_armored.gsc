// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.validateattacker = ::_id_1364E;
    level._id_12CD0 = ::flashtheprops;
    scripts\cp_mp\utility\script_utility::registersharedfunc( "killstreak", "dangerNotifyPlayersInRange", ::flashlockpropkey );
    relic_mythic_can_do_pain();
    register_initial_bank_modules();
    register_combined_vehicles_threaded();
    relic_nobulletdamage_modifyplayerdamage();
    thread stage3accradius();
    level thread deactivate_trap_object();
    level thread custom_damageshield_cooldown();
}

relic_mythic_can_do_pain()
{
    foreach ( var_1 in level._id_135FD._id_12D76 )
    {
        var_1.team = onplayerjointeamnospectator();
        var_1.showtutsplash.team = onplayerjointeamnospectator();
    }
}

flashtheprops()
{
    if ( !isdefined( self ) )
        return;

    radiusdamage( self.origin, 256, 100, 100, laser_pursue_players(), "MOD_EXPLOSIVE", "toma_proj_mp" );
}

flashlockpropkey( var_0, var_1, var_2, var_3 )
{
    if ( var_2 == "toma_strike" )
    {
        var_4 = scripts\common\utility::playersincylinder( var_0, var_1 );

        if ( !isdefined( var_3 ) )
            var_3 = 1;

        foreach ( var_6 in var_4 )
        {
            if ( !isdefined( var_6 ) || !scripts\mp\utility\player::isreallyalive( var_6 ) || var_6.team == self.team )
                continue;

            if ( isdefined( var_6.sethasselfrevivetokenextrainfo ) )
                var_7 = scripts\engine\utility::ter_op( var_6 display_welcome(), var_3, 0 );
            else
                var_7 = var_3;

            scripts\mp\gametypes\br_killstreaks.gsc::getfilterformodifier( var_6, var_2, var_7 );

            if ( var_7 )
                var_6.sethasselfrevivetokenextrainfo = gettime();
        }
    }
    else
        scripts\mp\gametypes\br_killstreaks.gsc::getfirespoutlaunchvectors( var_0, var_1, var_2, var_3 );
}

display_welcome()
{
    if ( self.flagonexit.size > 4 )
        return 0;

    if ( self.sethasselfrevivetokenextrainfo + 10000 > gettime() )
        return 0;

    return 1;
}

register_initial_bank_modules()
{
    var_0 = [ [ "", 1, "", level._effect["vfx_br_x2_locomotive_hit"] ], [ "x2_veh8_mil_lnd_br_train_locomotive_damaged", 1, "d1", level._effect["vfx_br_x2_locomotive_damage_hit"] ], [ "", 0.5, "d2", undefined ], [ "", 0, "d3", undefined ], [ "x2_veh8_mil_lnd_br_train_locomotive_dead", 0, "dead", undefined ] ];
    level._id_13643 = _id_11AFD( var_0 );
    var_0 = [ [ "", 1, "", level._effect["vfx_br_x2_assault_car_hit"], 0 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d2", 1, "d1", level._effect["vfx_br_x2_assault_car_damage_01_hit"], 0 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d3", 0.66, "d2", level._effect["vfx_br_x2_assault_car_damage_02_hit"], 1 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d4", 0.33, "d3", undefined, 1 ], [ "", 0, "explosion", undefined, 1 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_dead", 0, "dead", undefined, 1 ] ];
    level._id_13642 = _id_11AFD( var_0 );
    level._id_13641 = 0;
    var_0 = [ [ "", 1, "" ], [ "", 0.5, "" ], [ "", 0, "" ] ];
    level._id_13644 = _id_11AFD( var_0 );
}

relic_nobulletdamage_modifyplayerdamage()
{
    var_0 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_3, var_2 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
            continue;

        var_2.showtutsplash.gettacroverspawns = spawn( "script_model", ( 0, 0, 0 ) );
        var_2.showtutsplash.gettacroverspawns setmodel( "x2_veh8_mil_lnd_br_train_assault_decal_0" + var_3 );
        var_2.showtutsplash.gettacroverspawns linkto( var_2.showtutsplash, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    }
}

_id_11AFD( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = spawnstruct();
        var_4.model = var_3[0];
        var_4.drone_death_cleanup = var_3[1];
        var_4.statename = var_3[2];
        var_4.capsulepass = var_3[3];
        var_4._id_11EEB = var_3[4];
        var_1[var_1.size] = var_4;
    }

    return var_1;
}

stage3accradius()
{
    level endon( "game_ended" );
    var_0 = getdvarint( "scr_wztrain_carHealthPerPlayer", 1700 );
    var_1 = getdvarint( "scr_wztrain_locmotiveCarHealthPerPlayer", 3150 );
    var_2 = var_0 + 0;
    relic_nuketimer( 1, var_2, var_1 );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    relic_healthpacks_think();
    relic_nuketimer( level.players.size, var_2, var_1 );
    level._id_135FD.bomb_vest_timer_frozen = getdvarint( "scr_wztrain_ambDamagePerPlayer", 0 );
    level._id_135FD.sat_wait_for_controller = 0;
    level._id_1364C = [];
    defensefactormod();
}

relic_nuketimer( var_0, var_1, var_2 )
{
    level._id_135FD.start_death_from_above_sequence = var_0 * var_1;
    level._id_135FD.start_gates = var_0 * var_2;
    var_3 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_5 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_5.script_noteworthy ) && var_5.script_noteworthy == var_3 )
        {
            var_5.showtutsplash.drawprematchareas = level._id_135FD.start_gates;
            var_5.showtutsplash.heli_assault2_death_watcher = 0;
        }
        else
        {
            var_5.showtutsplash.drawprematchareas = level._id_135FD.start_death_from_above_sequence;
            var_5.showtutsplash.heli_assault2_death_watcher = 0;
        }

        var_5.showtutsplash.prevbrbonusxp = 1;
    }

    var_7 = level._id_135FD._id_12D76.size - 1;
    level._id_135FD.start_reach_icbm_launch = var_7 * level._id_135FD.start_death_from_above_sequence;
}

register_combined_vehicles_threaded()
{
    var_0 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_3, var_2 in level._id_135FD._id_12D76 )
    {
        var_2.showtutsplash.has_keycard = -1;

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.showtutsplash setcandamage( 1 );
            var_2.showtutsplash thread playac130animinternal();
        }
        else
        {
            var_2.showtutsplash setcandamage( 1 );
            var_2.showtutsplash thread handledamage();
        }

        var_2.showtutsplash._id_12DAE = var_3;
        var_2.showtutsplash.traincar_wait_until_shown = 1;
        var_2.showtutsplash.usbmodel = 0;
    }
}

relic_healthpacks_think()
{
    var_0 = getdvarfloat( "scr_x2_max_damage_reward", 135000.0 );
    level._id_128AC = [ 30000, 45000, 60000, 75000, 100000, var_0 ];
    level._id_128AD = [ "knife_blueprint", "paintjob_stickers_x2", "watch_x2", "emblem_2_x2", "vehicleskin_x2", "callingcards_x2" ];
    level._id_128AE = [];
    var_1 = level.squaddata;

    if ( scripts\mp\menus::boltunlinkonnote() )
    {
        var_1 = [];
        var_1["allies"] = level.squaddata["allies"];
    }

    foreach ( var_7, var_3 in var_1 )
    {
        level._id_128AE[var_7] = [];

        foreach ( var_5 in var_3 )
        {
            if ( var_5.players.size == 0 )
                continue;

            level._id_128AE[var_7][var_5.index] = spawnstruct();
            level._id_128AE[var_7][var_5.index]._id_12CEC = 0;
            level._id_128AE[var_7][var_5.index].train_elements_enable = 0;
        }
    }
}

initmarker()
{
    level endon( "game_ended" );
    scripts\engine\utility::flag_wait( "wztrain_anim_playing" );
    var_0 = level._id_135FD._id_12D76[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::get_model_for_color_wire_cut( "ui_mp_br_ping_icon_x2_t", "current", var_0.origin + ( 0, 0, 300 ) );
    objective_removeallfrommask( var_0.objectiveiconid );
    var_0 thread _id_13097();
    var_0 thread _id_13096();
    var_0 thread _id_13098();
}

_id_13098()
{
    level endon( "game_ended" );

    for (;;)
    {
        var_0 = 4500;

        foreach ( var_2 in level.players )
        {
            var_3 = distance2d( nuke_vault_alarm(), var_2.origin );

            if ( var_3 > var_0 && isalive( var_2 ) )
            {
                if ( !isdefined( var_2._id_1255F ) || var_2._id_1255F == 0 )
                {
                    var_2 _id_12547();
                    var_2._id_1255F = 1;
                }

                continue;
            }

            if ( istrue( var_2._id_1255F ) )
            {
                var_2 playerteleporttoloc();
                var_2._id_1255F = 0;
            }
        }

        wait 1;
    }
}

nuke_vault_alarm()
{
    return ( level._id_135FD._id_12D76[3].origin + level._id_135FD._id_12D76[4].origin ) / 2;
}

_id_13097()
{
    level endon( "game_ended" );

    while ( !scripts\mp\flags::gameflag( "x2_train_destroyed" ) )
    {
        var_0 = nuke_vault_alarm();
        scripts\mp\gametypes\br_quest_util.gsc::throwingknife_fire_clear_fx( var_0 + ( 0, 0, 300 ) );
        waitframe();
    }
}

_id_12547()
{
    var_0 = level._id_135FD._id_12D76[0];
    objective_addclienttomask( var_0.objectiveiconid, self );
    objective_showtoplayersinmask( var_0.objectiveiconid );
}

playerteleporttoloc()
{
    var_0 = level._id_135FD._id_12D76[0];
    objective_removeclientfrommask( var_0.objectiveiconid, self );
    objective_showtoplayersinmask( var_0.objectiveiconid );
}

_id_13096()
{
    level endon( "game_ended" );
    level scripts\engine\utility::_id_133EF( "game_ended", "x2_train_destroyed" );
    _id_11ED0();
}

_id_11ED0()
{
    var_0 = level._id_135FD._id_12D76[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::hacks_started();
}

onplayerjointeamnospectator()
{
    if ( scripts\mp\menus::boltunlinkonnote() )
        return "axis";

    return "team_two_hundred";
}

handledamage()
{
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == onplayerjointeamnospectator() && !istrue( var_1.usbmodel ) )
            continue;

        if ( self.binoculars_processtargetdata > 0 || self.has_keycard < 1 )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_1.traincar_wait_until_shown ) )
            thread custom_death_active( 0 );

        var_12 = var_1;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
        {
            var_0 = player_at_power_max_ammo( var_1 );

            if ( isdefined( var_1.owner ) )
                var_12 = var_1.owner;
        }

        var_13 = self.drawprematchareas;
        self.drawprematchareas = int( max( self.drawprematchareas - var_0, 0 ) );

        if ( var_13 > 0 )
        {
            if ( isplayer( var_12 ) )
            {
                if ( self.drawprematchareas <= 0 )
                    var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitheadx2break", 0, 0, "hitheadx2break", 0, 1 );
                else
                    var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitheadx2", 0, 0, "hitheadx2", 0, 1 );

                var_14 = int( min( var_0, var_13 ) );
                _id_13076( var_12, var_14 );
            }

            scripts\mp\gametypes\br_gametype_x2.gsc::damagestate( var_1, var_0 );
        }

        if ( enable_spawner() )
            eggsetup();
    }
}

playac130animinternal()
{
    level endon( "game_ended" );
    level waittill( "x2_locomotive_vulnerable" );
    level endon( "train_destroyed" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == onplayerjointeamnospectator() && !istrue( var_1.usbmodel ) )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_1.traincar_wait_until_shown ) )
            thread custom_death_active( 0 );

        var_12 = var_1;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
        {
            var_0 = player_at_power_max_ammo( var_1 );

            if ( isdefined( var_1.owner ) )
                var_12 = var_1.owner;
        }

        var_13 = self.drawprematchareas;
        self.drawprematchareas = int( max( self.drawprematchareas - var_0, 0 ) );

        if ( var_13 > 0 )
        {
            if ( isplayer( var_12 ) )
            {
                var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitequip", self.drawprematchareas == 0, 0, "standard", 0, 1 );
                var_14 = int( min( var_0, var_13 ) );
                _id_13076( var_12, var_14 );
            }

            scripts\mp\gametypes\br_gametype_x2.gsc::damagestate( var_1, var_0 );
        }

        if ( end_origin_final() )
            egress_landlord_vo();
    }
}

player_at_power_max_ammo( var_0 )
{
    var_1 = spawnstruct();
    var_1.ent = [ var_0, self ];
    var_1.velocity = [ var_0 vehicle_getvelocity(), self.velocity ];
    var_2 = scripts\mp\gametypes\br_movingtrain.gsc::play_scramble_for_player_until_cleared( var_1 );

    if ( var_2 > 0 )
        var_2 = clamp( var_2, 0.0, 3000 );

    return var_2;
}

_id_12DB6()
{
    level endon( "game_ended" );
    level endon( "x2_train_destroyed" );
    level._id_135FD.sat_wait_for_controller = 1;
    var_0 = getdvarint( "scr_wztrain_timeBeforeSelfDestruct", 30 );
    wait( var_0 );
    var_1 = level._id_13642.size - 2;
    var_2 = level._id_13644.size - 1;
    var_3 = level._id_13643.size - 2;
    var_4 = level._id_135FD.start_death_from_above_sequence * 0.02;
    var_5 = level._id_135FD.start_reach_wind_room * 0.02;
    var_6 = level._id_135FD.start_gates * 0.02;

    foreach ( var_9, var_8 in level._id_135FD._id_12D76 )
        var_8.showtutsplash.usbmodel = 1;

    for (;;)
    {
        foreach ( var_9, var_8 in level._id_135FD._id_12D76 )
        {
            var_11 = var_8.showtutsplash;

            if ( isdefined( var_8.script_noteworthy ) && var_8.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
            {
                if ( var_11.has_keycard < var_3 )
                    var_11 dodamage( var_6, var_11.origin, var_11, var_11, "MOD_EXPLOSIVE" );
                else
                    break;
            }
            else
            {
                if ( var_11.binoculars_processtargetdata > 0 )
                {
                    if ( isdefined( var_11.frontturret ) && var_11.frontturret.has_keycard < var_2 )
                        var_11.frontturret dodamage( var_5, var_11.frontturret.origin, var_11, var_11, "MOD_EXPLOSIVE" );

                    if ( isdefined( var_11.rearturret ) && var_11.rearturret.has_keycard < var_2 )
                        var_11.rearturret dodamage( var_5, var_11.rearturret.origin, var_11, var_11, "MOD_EXPLOSIVE" );

                    continue;
                }

                if ( var_11.has_keycard < var_1 )
                    var_11 dodamage( var_4, var_11.origin, var_11, var_11, "MOD_EXPLOSIVE" );
            }
        }

        wait 1;
    }
}

_id_13076( var_0, var_1 )
{
    var_2 = level._id_128AE[var_0.team][var_0.squadindex]._id_12CEC;
    var_3 = level._id_128AC[level._id_128AC.size - 1];

    if ( var_2 < var_3 )
    {
        level._id_128AE[var_0.team][var_0.squadindex]._id_12CEC = min( var_2 + var_1, var_3 );
        scripts\mp\gametypes\br_gametype_x2.gsc::defenderflagpickupscorefrozen( var_0 );

        while ( isdefined( level._id_128AC[level._id_128AE[var_0.team][var_0.squadindex].train_elements_enable] ) && level._id_128AE[var_0.team][var_0.squadindex]._id_12CEC >= level._id_128AC[level._id_128AE[var_0.team][var_0.squadindex].train_elements_enable] )
            _id_12FD1( level._id_128AE[var_0.team][var_0.squadindex].train_elements_enable, level.squaddata[var_0.team][var_0.squadindex].players, var_0 );
    }
}

_id_12FD1( var_0, var_1, var_2 )
{
    foreach ( var_4 in var_1 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        if ( var_4.squadindex == var_2.squadindex )
            var_4 scripts\cp\helicopter\chopper_boss::update_focus_fire_objective( level._id_128AD[var_0] );
    }

    level._id_128AE[var_2.team][var_2.squadindex].train_elements_enable++;
}

enable_spawner()
{
    var_0 = self.has_keycard + 1;

    if ( var_0 >= level._id_13642.size - 1 )
        return 0;

    var_1 = self.drawprematchareas / level._id_135FD.start_death_from_above_sequence;

    if ( var_1 > level._id_13642[var_0].drone_death_cleanup )
        return 0;

    return 1;
}

eggsetup()
{
    var_0 = self.drawprematchareas / level._id_135FD.start_death_from_above_sequence;

    for ( var_1 = level._id_13642.size - 2; self.has_keycard < var_1 && var_0 <= level._id_13642[self.has_keycard + 1].drone_death_cleanup; self.has_keycard = int( min( self.has_keycard + 1, var_1 ) ) )
    {

    }

    bot_hq_start( self.has_keycard );

    if ( self.has_keycard == var_1 )
    {
        debug_run_helicopter_boss();
        thread explosion();
    }
}

bot_hq_start( var_0 )
{
    self.has_keycard = var_0;
    var_1 = level._id_13642[self.has_keycard];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    if ( isdefined( var_1.capsulepass ) )
        self.capsulepass = var_1.capsulepass;

    if ( isdefined( self.gettacroverspawns ) && self.has_keycard >= 4 )
    {
        self.gettacroverspawns delete();
        self.gettacroverspawns = undefined;
    }

    has_module_met_max_vehicles();

    if ( istrue( var_1._id_11EEB ) )
    {
        if ( isdefined( self.frontturret ) )
            self.frontturret farah_disable_ai_color_before_hallway_takedown();

        if ( isdefined( self.rearturret ) )
            self.rearturret farah_disable_ai_color_before_hallway_takedown();
    }

    if ( self.has_keycard == 1 )
        level notify( "car_vulnerable" );

    _id_130C5( self._id_12DAE, self.has_keycard );
}

bot_is_in_gas( var_0 )
{
    self.has_keycard = var_0;
    var_1 = level._id_13643[self.has_keycard];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    if ( isdefined( var_1.capsulepass ) )
        self.capsulepass = var_1.capsulepass;

    _id_13090( self.has_keycard );
}

spawn_carriables_from_prefabs_min_max()
{
    level endon( "game_ended" );
    thread debug_kill_ent_after_time( "scn_x2_train_death_explo_final_rampup", self, 4 );
    defend_start();
    wait 5;
    bot_is_in_gas( level._id_13643.size - 1 );
    hacking_lua_notify_func();
    _id_12D86();
}

explosion()
{
    level endon( "game_ended" );
    var_0 = laser_pursue_players();
    self._id_11C32 = 1;
    thread _id_1307B();
    wait 5;
    self._id_11C32 = 0;
    bot_hq_start( level._id_13642.size - 1 );

    foreach ( var_2 in level.players )
        var_2 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_armored_car" );

    thread scripts\mp\gametypes\br_gametype_x2.gsc::debugtimedelta();
    hacking_lua_notify_func();
    level._id_13641 = level._id_13641 + 1;
    level notify( "car_destroyed" );
    enemy_spawners();
    thread _id_12F25();
    wait 0.1;
    var_4 = scripts\mp\utility\player::getplayersinradius( self.origin, 1500 );

    foreach ( var_2 in var_4 )
    {
        if ( isxmike109projectile( var_2 ) )
            var_2 scripts\mp\gametypes\br_gametype_x2.gsc::defaultbreakeraction( 4 );
    }

    _id_12DB3();
    level._id_135FD.get_too_far_dist_sq++;
    self.init_ai_kill_params_for_events = _id_1247E();
}

isxmike109projectile( var_0 )
{
    var_1 = [ "tag_origin", "tag_front_base", "tag_rear_base", "tag_fx03", "tag_fx01" ];
    var_2 = var_0.origin + ( 0, 0, var_0 getplayerviewheight() );
    var_3 = [ self, var_0 ];
    var_4 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );

    foreach ( var_6 in var_1 )
    {
        if ( !self tagexists( var_6 ) )
            return;

        var_7 = self gettagorigin( var_6 );

        if ( scripts\engine\trace::ray_trace_passed( var_7, var_2, var_3, var_4 ) )
            return 1;
    }

    return 0;
}

has_module_met_max_vehicles()
{
    var_0 = 750;
    var_1 = self.origin;
    var_2 = self.angles + ( -90, 0, 0 );
    var_3 = physics_createcontents( [ "physicscontents_player" ] );
    var_4 = physics_capsulecast( var_1, var_1, 200, var_0 / 2, var_2, var_3, [], "physicsquery_all" );
    var_5 = [];

    foreach ( var_7 in var_4 )
    {
        var_8 = var_7["entity"];

        if ( isdefined( var_8 ) )
        {
            var_5[var_5.size] = var_8;

            if ( isxmike109projectile( var_8 ) )
                var_8 dodamage( 250, self.origin, self, self, "MOD_EXPLOSIVE" );
        }
    }

    var_10 = scripts\mp\utility\player::getplayersinradius( self.origin, 750, undefined, var_5 );

    foreach ( var_12 in var_10 )
    {
        if ( !isdefined( var_12 ) || !isxmike109projectile( var_12 ) )
            continue;

        var_13 = distancesquared( var_12.origin, self.origin );

        if ( var_13 < squared( 550 ) )
            var_14 = 90;
        else
            var_14 = 50;

        var_12 dodamage( var_14, self.origin, self, self, "MOD_EXPLOSIVE" );
    }
}

_id_1247E()
{
    var_0 = 700;
    var_1 = 85;
    var_2 = anglestoforward( self.angles ) * 350;
    var_3 = anglestoup( self.angles ) * 30;
    var_4 = self.origin + var_2 + var_3;
    var_5 = spawn( "trigger_rotatable_radius", var_4, 0, var_1, var_0 );
    var_5.angles = self.angles + ( -90, 0, 0 );
    var_5.burnid = scripts\mp\equipment\molotov::molotov_get_next_burning_id();
    var_5.playersintrigger = [];
    var_5.traincar = self;
    var_5 enablelinkto();
    var_5 linkto( self );
    var_5 thread init_ai_weapons();
    var_5 thread init_airdrop_anims();
    var_5 thread failsafe_triggered();
    return var_5;
}

init_ai_weapons()
{
    self endon( "death" );
    level endon( "game_ended" );
    level endon( "train_destroyed" );

    for (;;)
    {
        self waittill( "trigger", var_0 );
        var_1 = var_0 getentitynumber();

        if ( isdefined( self.playersintrigger[var_1] ) )
            continue;

        self.playersintrigger[var_1] = var_0;
        var_0 init_ai_spawns( var_0, undefined, undefined, self.burnid );
    }
}

init_airdrop_anims()
{
    self endon( "death" );
    level endon( "game_ended" );
    level endon( "train_destroyed" );

    for (;;)
    {
        foreach ( var_2, var_1 in self.playersintrigger )
        {
            if ( !isdefined( var_1 ) )
                continue;

            if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
                continue;

            if ( var_1 istouching( self ) )
                continue;

            self.playersintrigger[var_2] = undefined;
            var_1 scripts\mp\equipment\molotov::molotov_stop_burning( self.burnid );
        }

        waitframe();
    }
}

init_ai_spawns( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\mp\equipment\molotov::molotov_get_burning_info( 1 );

    if ( !isdefined( var_3 ) )
        var_3 = scripts\mp\equipment\molotov::molotov_get_next_burning_id();

    var_5 = scripts\mp\equipment\molotov::molotov_get_burning_source( var_0, var_1, var_2, var_4, var_3, 1 );
    var_6 = 0;

    if ( var_5.count <= 0 )
        var_6 = 1;

    var_5.count++;

    if ( var_6 )
        thread init_ai_spawners();
}

init_ai_spawners()
{
    self endon( "death_or_disconnect" );
    self endon( "clear_burning" );
    level endon( "game_ended" );
    self notify( "update_burning" );
    self endon( "update_burning" );
    thread scripts\mp\equipment\molotov::molotov_cleanup_burning();
    var_0 = scripts\mp\equipment\molotov::molotov_get_burning_info();

    if ( gettime() <= var_0.updatetimestamp )
        waitframe();

    for (;;)
    {
        var_0 = scripts\mp\equipment\molotov::molotov_get_burning_info();
        var_1 = undefined;

        foreach ( var_3 in var_0.sources )
        {
            if ( var_3 scripts\mp\equipment\molotov::molotov_burning_source_is_valid() )
            {
                if ( !isdefined( var_1 ) || var_3.id > var_1 )
                    var_1 = var_3.id;

                continue;
            }

            var_0.sources[var_3.id] = undefined;
        }

        if ( isdefined( var_1 ) )
        {
            var_0.timeoff = 0;
            var_0.timeon = var_0.timeon + 0.05;
            var_3 = var_0.sources[var_1];
            var_5 = 15;
            var_6 = undefined;
            var_7 = var_3.attacker.origin;

            if ( isdefined( var_3.inflictor ) )
            {
                var_6 = var_3.inflictor;
                var_7 = var_3.inflictor.origin;
            }

            if ( var_0.timetodamage <= 0 )
            {
                self dodamage( var_5, var_7, var_3.attacker, var_6, "MOD_EXPLOSIVE", "molotov_mp" );
                var_0.firstdamagedone = 1;
                var_0.timetodamage = 0.25;
            }
            else
            {
                if ( !var_0.firstdamagedone )
                {
                    self dodamage( var_5, var_7, var_3.attacker, var_6, "MOD_EXPLOSIVE", "molotov_mp" );
                    var_0.firstdamagedone = 1;
                }

                var_0.timetodamage = var_0.timetodamage - 0.05;
            }
        }
        else
        {
            var_0.timeoff = var_0.timeoff + 0.05;

            if ( var_0.timeoff >= 0.25 )
                thread scripts\mp\equipment\molotov::molotov_clear_burning();
        }

        var_0.updatetimestamp = gettime();
        wait 0.05;
    }
}

failsafe_triggered()
{
    level endon( "game_ended" );
    level waittill( "train_destroyed" );

    foreach ( var_2, var_1 in self.playersintrigger )
        var_1 scripts\mp\equipment\molotov::molotov_stop_burning( self.burnid );

    self.traincar.init_ai_kill_params_for_events = undefined;
    self delete();
}

_id_1307B()
{
    level endon( "game_ended" );
    var_0 = undefined;

    while ( self._id_11C32 )
    {
        if ( isdefined( var_0 ) )
            var_0 delete();

        var_0 = getmaxobjectivecount( self.origin[0], self.origin[1], 1500 );
        var_0 setmapcirclecolorindex( 0 );
        var_0 setmapcirclestyleindex( 0 );
        wait 0.5;
    }

    var_0 delete();
}

hacking_lua_notify_func()
{
    foreach ( var_1 in level._id_135FD._id_12D76 )
    {
        if ( var_1.showtutsplash == self )
        {
            if ( isdefined( var_1.isbestplayertime ) )
            {
                var_1.isbestplayertime delete();
                break;
            }
        }
    }
}

onplayergetsplunder()
{
    var_0 = 0;

    foreach ( var_3, var_2 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
            continue;
        else
            var_0 = var_0 + var_2.showtutsplash.drawprematchareas;
    }

    return var_0;
}

end_origin_final()
{
    var_0 = self.has_keycard + 1;

    if ( var_0 >= level._id_13643.size - 1 )
        return 0;

    var_1 = self.drawprematchareas / level._id_135FD.start_gates;

    if ( var_1 > level._id_13643[var_0].drone_death_cleanup )
        return 0;

    return 1;
}

egress_landlord_vo()
{
    var_0 = self.drawprematchareas / level._id_135FD.start_gates;

    for ( var_1 = level._id_13643.size - 2; self.has_keycard < var_1 && var_0 <= level._id_13643[self.has_keycard + 1].drone_death_cleanup; self.has_keycard = int( min( self.has_keycard + 1, var_1 ) ) )
    {

    }

    bot_is_in_gas( self.has_keycard );

    if ( self.has_keycard == var_1 )
    {
        thread _id_12F25();
        level notify( "x2SuperInterupt" );
        debug_run_helicopter_boss();
        thread spawn_carriables_from_prefabs_min_max();
    }
}

mountain_one_death_func()
{
    var_0 = [];
    var_1 = level._id_13642.size - 1;

    foreach ( var_4, var_3 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
            continue;
        else if ( var_3.showtutsplash.has_keycard < var_1 )
            var_0[var_0.size] = var_3;
    }

    return var_0;
}

enemy_spawners()
{
    var_0 = 0;
    var_1 = level._id_13642.size - 1;

    foreach ( var_4, var_3 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
            continue;
        else if ( var_3.showtutsplash.has_keycard < var_1 )
            var_0++;
    }

    if ( var_0 == 0 )
        spawn_carriables_from_prefabs_all();
}

spawn_carriables_from_prefabs_all()
{
    scripts\mp\flags::gameflagset( "x2_locomotive_vulnerable" );
    var_0 = level._id_135FD._id_12D76[0].showtutsplash;
    var_0 debug_start_numbers_threaded();
    var_0 bot_is_in_gas( 1 );
}

_id_12D86()
{
    scripts\mp\flags::gameflagset( "x2_train_destroyed" );

    foreach ( var_1 in level.players )
        var_1 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_train_destroyed" );

    level._id_135FD._id_12D76[0].showtutsplash.frontturret _id_12F26();
}

_id_130C5( var_0, var_1 )
{
    if ( var_1 == 0 )
        return;

    var_2 = 3;
    var_3 = var_0 * var_2;
    scripts\mp\trials\trial_utility::_id_123B0( "ui_br_x2_event_data", var_3, var_2, var_1 );
}

_id_13090( var_0 )
{
    var_1 = 3;
    var_2 = 0;
    scripts\mp\trials\trial_utility::_id_123B0( "ui_br_x2_event_data", var_2, var_1, var_0 );
}

_id_130C8( var_0, var_1, var_2 )
{
    var_3 = 2;
    var_4 = var_3 * 2;
    var_5 = ( var_0 - 1 ) * var_4 + var_1 * var_3;
    scripts\mp\trials\trial_utility::_id_123B0( "ui_br_x2_event_data_2", var_5, var_3, var_2 );
}

currenttime_bonus()
{
    damage_area( level._id_135FD.bomb_vest_timer_frozen * level._id_13645 );
}

damage_area( var_0 )
{
    var_1 = 7;
    var_2 = var_0;
    var_3 = [];
    var_4 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_7, var_6 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_6.script_noteworthy ) && var_6.script_noteworthy == var_4 )
            continue;

        var_3[var_3.size] = var_6.showtutsplash;
    }

    while ( var_1 > 0 && var_2 > 0 )
    {
        var_8 = var_0 / var_1;
        var_9 = 0;
        var_1 = 0;

        foreach ( var_7, var_11 in var_3 )
        {
            if ( var_8 >= var_11.drawprematchareas )
            {
                if ( isdefined( var_11.heli_assault2_death_watcher ) && !var_11.heli_assault2_death_watcher )
                {
                    var_9 = var_9 + ( var_8 - var_11.drawprematchareas );
                    var_11.heli_assault2_death_watcher = 1;
                }
            }
            else
                var_1++;

            var_11 dodamage( var_8, var_11.origin, var_11 );
        }

        var_2 = var_9;
    }

    var_4 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_7, var_11 in var_3 )
        var_11.heli_assault2_death_watcher = 0;
}

damageendtime()
{
    var_0 = spawnstruct();
    var_0.streakname = "toma_strike";
    var_0.owner = self;
    var_0.score = 0;
    var_0.shots_fired = 0;
    var_0.hits = 0;
    var_0.damage = 0;
    var_0.kills = 0;
    var_0.usereload = "ks_toma_strike_missile_mp_x2";
    var_0.usequesttimer = "ks_toma_strike_cluster_mp_x2";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "createCustomStreakData" ) )
        var_0 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "createCustomStreakData" ) ]]( var_0, "toma_strike" );

    return var_0;
}

damagepercentmedium( var_0 )
{
    if ( var_0 == "armored_train_mg_turret_mp" || var_0 == "armored_train_mg_turret_buffed_mp" )
        return level._effect["vfx_br_x2_train_turrets_gatling_hit"];

    if ( var_0 == "armored_train_tank_turret_mp" || var_0 == "armored_train_tank_turret_buffed_mp" )
        return level._effect["vfx_br_x2_train_turrets_88mm_hit"];

    return undefined;
}

damagepercentlow( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = spawnturret( "misc_turret", var_1, var_5 );
    var_7 setmodel( var_6 );
    var_7.team = onplayerjointeamnospectator();
    var_7.angles = var_2;
    var_7.turreton = 1;
    var_7.name = var_3;
    var_7.momentum = 0;
    var_7.attackingtarget = undefined;
    var_7._id_132C1 = var_0.name;
    var_7._id_11F63 = 15;
    var_7.superterrainlightbakelodoverride = "auto_nonai";
    var_7.supersupplydropbeginuse = "sentry_offline";
    var_7.weaponname = var_5;
    var_7.health = level.turretsettings[var_5].health;
    var_7.maxhealth = level.turretsettings[var_5].maxhealth;
    var_7._id_13111 = 1;
    var_7.updatesquadleaderpassstateforteam = 0;
    var_7.capsulepass = damagepercentmedium( var_5 );
    var_7 linkto( var_0.showtutsplash, var_4, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7 setturretteam( onplayerjointeamnospectator() );
    var_7 setturretmodechangewait( 0 );
    var_7 setmode( var_7.superterrainlightbakelodoverride );
    var_7 makeunusable();
    var_7 maketurretinoperable();
    var_7 setconvergenceheightpercent( level.turretsettings[var_5]._id_124B6 );
    var_7 setdefaultdroppitch( 0.0 );
    var_7 setcandamage( 1 );
    var_7 setnodeploy( 1 );
    var_7 setautorotationdelay( 1 );
    var_7 setconvergencetime( level.turretsettings[var_5]._id_1368D, "yaw" );
    var_7 setconvergencetime( level.turretsettings[var_5].wait_between_combat_action, "pitch" );
    var_7.damagecenter = var_7.origin + ( 0, 0, 10 );
    var_7._id_12F4F = var_4;
    var_7.has_keycard = 0;
    var_7.blueprintextractchance = 1;
    var_7.focus_fire_is_activated = spawn( "script_model", var_7.origin );
    var_7.focus_fire_is_activated.team = var_7.team;
    var_7.focus_fire_is_activated linkto( var_7, "tag_aim_pivot", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7.focus_fire_is_activated.give_launchers_xmags = var_2;
    var_7.focus_fire_is_activated setmodel( var_6 );
    var_7.focus_fire_is_activated hide();
    var_7 thread _id_12F42();
    var_7 thread _id_12F40();

    if ( var_5 != "armored_train_locomotive_turret_mp" )
        var_7 thread _id_12F31();

    level._id_1364C[level._id_1364C.size] = var_7;
    return var_7;
}

debug_safehouse_regroup_start( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnturret( "misc_turret", var_1.origin, var_2 );
    var_4 setmodel( var_3 );
    var_4 linkto( var_0.showtutsplash, var_1._id_12F4F, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_4.team = var_1.team;
    var_4.angles = var_1.angles;
    var_4.turreton = var_1.turreton;
    var_4.name = var_1.name;
    var_4.momentum = var_1.momentum;
    var_4.attackingtarget = var_1.attackingtarget;
    var_4._id_132C1 = var_1._id_132C1;
    var_4._id_11F63 = var_1._id_11F63;
    var_4.superterrainlightbakelodoverride = var_1.superterrainlightbakelodoverride;
    var_4.supersupplydropbeginuse = var_1.supersupplydropbeginuse;
    var_4.weaponname = var_2;
    var_4.health = var_1.health;
    var_4.maxhealth = var_1.maxhealth;
    var_4._id_13111 = var_1._id_13111;
    var_4.updatesquadleaderpassstateforteam = var_1.updatesquadleaderpassstateforteam;
    var_4.capsulepass = damagepercentmedium( var_2 );
    var_4 setturretteam( var_1.team );
    var_4 setturretmodechangewait( 0 );
    var_4 setmode( var_4.superterrainlightbakelodoverride );
    var_4 makeunusable();
    var_4 maketurretinoperable();
    var_4 setconvergenceheightpercent( level.turretsettings[var_1.weaponname]._id_124B6 );
    var_4 setdefaultdroppitch( 0.0 );
    var_4 setcandamage( 1 );
    var_4 setnodeploy( 1 );
    var_4 setautorotationdelay( 1 );
    var_4 setconvergencetime( level.turretsettings[var_1.weaponname]._id_1368D, "yaw" );
    var_4 setconvergencetime( level.turretsettings[var_1.weaponname].wait_between_combat_action, "pitch" );
    var_4.damagecenter = var_1.damagecenter;
    var_4._id_12F4F = var_1._id_12F4F;
    var_4.has_keycard = var_1.has_keycard;
    var_4.focus_fire_is_activated = spawn( "script_model", var_4.origin );
    var_4.focus_fire_is_activated.team = var_4.team;
    var_4.focus_fire_is_activated linkto( var_4, "tag_aim_pivot", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_4.focus_fire_is_activated.give_launchers_xmags = var_1.angles;
    var_4.focus_fire_is_activated setmodel( var_3 );
    var_4.focus_fire_is_activated hide();
    var_4 thread _id_12F42( 3 );
    var_4 thread _id_12F40();

    if ( var_2 != "armored_train_locomotive_turret_mp" && var_2 != "armored_train_locomotive_turret_buffed_mp" )
        var_4 thread _id_12F31();

    level._id_1364C[level._id_1364C.size] = var_4;
    return var_4;
}

debug_spawncover_badnodetest()
{
    foreach ( var_2, var_1 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_1.script_noteworthy ) && var_1.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
            continue;
        else
        {
            var_1.showtutsplash.frontturret debug_start_numbers_threaded();
            var_1.showtutsplash.rearturret debug_start_numbers_threaded();
        }
    }
}

debug_start_numbers_threaded()
{
    self.updatesquadleaderpassstateforteam = 0;
    self.outlineid = scripts\mp\utility\outline::outlineenableforall( self, "outline_depth_red_x2", "level_script" );
}

debug_run_helicopter_boss()
{
    self.updatesquadleaderpassstateforteam = 1;
    scripts\mp\utility\outline::outlinedisable( self.outlineid, self );
}

damagepercenthigh()
{
    var_0 = spawnstruct();
    var_0._id_12F48 = "armored_train_mg_turret_mp";
    var_0.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_gatling";
    var_1 = spawnstruct();
    var_1._id_12F48 = "armored_train_tank_turret_mp";
    var_1.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_88mm";
    var_2 = spawnstruct();
    var_2._id_12F48 = "armored_train_mortar_turret_mp";
    var_2.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_mortar";
    var_3 = spawnstruct();
    var_3._id_12F48 = "armored_train_locomotive_turret_mp";
    var_3.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_locomotive";
    return [ [ var_3 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ] ];
}

damage_shield_reduction()
{
    var_0 = spawnstruct();
    var_0._id_12F48 = "armored_train_mg_turret_buffed_mp";
    var_0.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_gatling";
    var_1 = spawnstruct();
    var_1._id_12F48 = "armored_train_tank_turret_buffed_mp";
    var_1.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_88mm";
    var_2 = spawnstruct();
    var_2._id_12F48 = "armored_train_locomotive_turret_buffed_mp";
    var_2.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_locomotive";
    return [ [ var_2 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ] ];
}

defensefactormod()
{
    var_0 = getdvarint( "scr_wztrain_turretHealthPerPlayer", 1050 );
    var_1 = level.players.size * var_0;
    level._id_135FD.start_reach_wind_room = var_1;
    level.turretsettings["armored_train_mg_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mg_turret_mp"].health = var_1;
    level.turretsettings["armored_train_mg_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mg_turret_mp"].burst = 20;
    level.turretsettings["armored_train_mg_turret_mp"].vehicle_compass_mp_init = 1;
    level.turretsettings["armored_train_mg_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_mg_turret_mp"].spinuptime = 0.1;
    level.turretsettings["armored_train_mg_turret_mp"].cooldowntime = 0.3;
    level.turretsettings["armored_train_mg_turret_mp"]._id_12BB3 = 3500;
    level.turretsettings["armored_train_mg_turret_mp"]._id_124B6 = 0.65;
    level.turretsettings["armored_train_mg_turret_mp"]._id_1368D = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].wait_between_combat_action = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].weaponinfo = "armored_train_mg_turret_mp";
    level.turretsettings["armored_train_mg_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_mg_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].burst = 20;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].vehicle_compass_mp_init = 0.1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].spinuptime = 0.1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].cooldowntime = 0.3;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_12BB3 = 3500;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_124B6 = 0.65;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_1368D = 0.35;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].wait_between_combat_action = 0.35;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].weaponinfo = "armored_train_mg_turret_buffed_mp";
    level.turretsettings["armored_train_tank_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_tank_turret_mp"].health = var_1;
    level.turretsettings["armored_train_tank_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_tank_turret_mp"].burst = 1;
    level.turretsettings["armored_train_tank_turret_mp"].vehicle_compass_mp_init = 3.5;
    level.turretsettings["armored_train_tank_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_tank_turret_mp"].spinuptime = 0.4;
    level.turretsettings["armored_train_tank_turret_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_12BB3 = 4500;
    level.turretsettings["armored_train_tank_turret_mp"]._id_124B6 = 0.1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_1368D = 1;
    level.turretsettings["armored_train_tank_turret_mp"].wait_between_combat_action = 1;
    level.turretsettings["armored_train_tank_turret_mp"].weaponinfo = "armored_train_tank_turret_mp";
    level.turretsettings["armored_train_tank_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_tank_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].burst = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].vehicle_compass_mp_init = 0.9;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].spinuptime = 0.4;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_12BB3 = 4500;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_124B6 = 0.1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_1368D = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].wait_between_combat_action = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].weaponinfo = "armored_train_tank_turret_buffed_mp";
    level.turretsettings["armored_train_mortar_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mortar_turret_mp"].health = var_1;
    level.turretsettings["armored_train_mortar_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mortar_turret_mp"].burst = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].vehicle_compass_mp_init = 20;
    level.turretsettings["armored_train_mortar_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_mortar_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_12BB3 = 5000;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_124B6 = 0.2;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_1368D = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].wait_between_combat_action = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].weaponinfo = "armored_train_mortar_turret_mp";
    level.turretsettings["armored_train_mortar_turret_mp"].streakinfo = damageendtime();
    level.turretsettings["armored_train_locomotive_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_locomotive_turret_mp"].health = var_1;
    level.turretsettings["armored_train_locomotive_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_locomotive_turret_mp"].burst = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].vehicle_compass_mp_init = 2;
    level.turretsettings["armored_train_locomotive_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_locomotive_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_12BB3 = 4500;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_124B6 = 0.1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_1368D = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].wait_between_combat_action = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].burst = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].vehicle_compass_mp_init = 0.7;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].spinuptime = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_12BB3 = 4500;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_124B6 = 0.1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_1368D = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].wait_between_combat_action = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    var_2 = damagepercenthigh();

    foreach ( var_8, var_4 in level._id_135FD._id_12D76 )
    {
        var_5 = var_2[var_8];

        if ( isdefined( var_4.script_noteworthy ) && var_4.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
        {
            var_4.showtutsplash.frontturret = damagepercentlow( var_4, var_4.showtutsplash gettagorigin( "tag_turret_front" ), var_4.angles, "front_turret", "tag_turret_front", var_5[0]._id_12F48, var_5[0].turretmodel );
            var_4.showtutsplash.frontturret.traincar = var_4.showtutsplash;
            var_4.showtutsplash.binoculars_processtargetdata = 1;
            continue;
        }

        var_6 = ( 0, 0, 0 );
        var_7 = ( 0, 180, 0 );
        var_4.showtutsplash.frontturret = damagepercentlow( var_4, var_4.showtutsplash gettagorigin( "tag_turret_front" ), var_4.angles + var_6, "front_turret", "tag_turret_front", var_5[0]._id_12F48, var_5[0].turretmodel );
        var_4.showtutsplash.rearturret = damagepercentlow( var_4, var_4.showtutsplash gettagorigin( "tag_turret_rear" ), var_4.angles + var_7, "rear_turret", "tag_turret_rear", var_5[1]._id_12F48, var_5[1].turretmodel );
        var_4.showtutsplash.frontturret.traincar = var_4.showtutsplash;
        var_4.showtutsplash.rearturret.traincar = var_4.showtutsplash;
        var_4.showtutsplash.binoculars_processtargetdata = 2;
    }
}

_id_12F42( var_0 )
{
    self endon( "death" );
    self endon( "disabled" );
    level endon( "game_ended" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1.cooldowntime;

    for (;;)
    {
        if ( !istrue( self.turreton ) )
        {
            waitframe();
            continue;
        }

        var_3 = _id_12F2E();

        if ( isdefined( var_3 ) )
        {
            self.currenttarget = var_3;
            _id_12F2B( var_3 );
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_2 );
        }

        wait 0.05;
    }
}

_id_12F2E()
{
    var_0 = level.turretsettings[self.weaponname];
    var_1 = var_0._id_12BB3;
    var_2 = var_1 * var_1;
    var_3 = self.origin + anglestoforward( self.angles ) * var_1;
    var_4 = scripts\common\utility::playersinsphere( var_3, var_1 );
    var_5 = undefined;
    var_6 = undefined;

    foreach ( var_8 in var_4 )
    {
        var_9 = _id_12F35( var_8 );

        if ( !istrue( var_9 ) )
            continue;

        var_10 = self gettagorigin( "tag_barrel" );
        var_11 = var_8.origin;
        var_12 = distancesquared( var_10, var_11 );

        if ( !isdefined( var_5 ) && !isdefined( var_6 ) || var_12 < var_6 )
        {
            var_5 = var_8;
            var_6 = var_12;
        }
    }

    return var_5;
}

_id_12F35( var_0 )
{
    var_1 = 1;

    if ( !isdefined( var_0 ) )
        var_1 = 0;
    else if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
        var_1 = 0;
    else if ( scripts\mp\utility\player::round_spawn_enemies( var_0 ) )
        var_1 = 0;
    else if ( isdefined( var_0.laser_trap_combat ) )
        var_1 = 0;
    else if ( !_id_12F21( var_0 ) )
        var_1 = 0;

    return var_1;
}

_id_12F3E( var_0 )
{
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1._id_12BB3;
    var_3 = var_2 * var_2;

    if ( !_id_12F35( var_0 ) )
        return 0;

    if ( distancesquared( self gettagorigin( "tag_barrel" ), var_0.origin ) > var_3 )
        return 0;

    return 1;
}

_id_12F21( var_0 )
{
    var_1 = [ var_0 gettagorigin( "j_head" ), var_0 gettagorigin( "j_mainroot" ), var_0 gettagorigin( "tag_origin" ) ];
    var_2 = self gettagorigin( "tag_flash" );
    var_3 = var_0.origin + ( 0, 0, var_0 getplayerviewheight() );
    var_4 = vectornormalize( var_3 - var_2 );
    var_5 = vectornormalize( anglestoforward( self.angles ) );
    var_6 = [ self, var_0 ];
    var_6 = scripts\engine\utility::array_combine( var_6, level._id_1364C );
    var_7 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );
    var_8 = var_0 scripts\cp_mp\utility\player_utility::isinvehicle();

    if ( istrue( var_8 ) )
    {
        var_9 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();
        var_6[var_6.size] = var_9;
        var_10 = var_9 getlinkedchildren();

        if ( isdefined( var_10 ) && var_10.size > 0 )
            var_6 = scripts\engine\utility::array_combine( var_6, var_10 );
    }

    for ( var_11 = 0; var_11 < var_1.size; var_11++ )
    {
        if ( scripts\engine\trace::ray_trace_passed( var_2, var_3, var_6, var_7 ) && vectordot( var_5, var_4 ) > cos( 120 ) )
            return 1;
    }

    return 0;
}

_id_12F34( var_0 )
{
    var_1 = self gettagorigin( "tag_flash" );
    var_2 = var_0.origin;
    var_3 = vectornormalize( var_2 - var_1 );
    var_4 = vectornormalize( anglestoforward( self gettagangles( "tag_aim_pivot" ) ) );

    if ( vectordot( var_4, var_3 ) > 0.3 )
        return 1;

    return 0;
}

_id_12F2B( var_0 )
{
    self settargetentity( var_0 );
    self.attackingtarget = var_0;
    _id_12F3B();
    _id_12F1F( var_0 );
    _id_12F20();
    self cleartargetentity();
    self.currenttarget = undefined;
}

_id_12F3B()
{
    self laseron();
    var_0 = level.turretsettings[self.weaponname];

    while ( istrue( self.turreton ) && self.momentum < var_0.spinuptime )
    {
        self.momentum = self.momentum + 0.1;
        wait 0.1;
    }
}

_id_12F3A()
{
    self laseroff();
    self.momentum = 0;
}

_id_12F1F( var_0 )
{
    self endon( "disabled" );
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1.burst;
    var_3 = var_1.vehicle_compass_mp_init;
    var_4 = var_1.lockstrength;

    while ( istrue( self.turreton ) && _id_12F3E( var_0 ) )
    {
        for ( var_5 = 0; var_5 < var_2; var_5++ )
        {
            if ( istrue( self.turreton ) && _id_12F3E( var_0 ) && _id_12F34( var_0 ) )
            {
                if ( self.weaponname == "armored_train_mortar_turret_mp" )
                {
                    var_6 = var_1.streakinfo;
                    target_wavespawning_to_jammer5( self.origin, var_0.origin, var_6 );
                    self shootturret( "tag_flash", var_4 );
                }
                else
                {
                    var_7 = weaponfiretime( var_1.weaponinfo );
                    self shootturret( "tag_flash", var_4 );
                    wait( var_7 );
                }

                continue;
            }

            break;
        }

        wait( var_3 );
    }
}

_id_12F20()
{
    _id_12F3A();
}

_id_12F40()
{
    self endon( "death" );
    level waittill( "game_ended" );

    if ( isdefined( self ) )
    {
        self.focus_fire_is_activated delete();
        self delete();
    }
}

custom_death_active( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );

    if ( istrue( self.updatesquadleaderpassstateforteam ) )
        return;

    var_1 = "tag_origin";

    if ( var_0 )
        var_1 = "tag_aim_pivot";

    if ( isdefined( self.capsulepass ) )
        playfxontag( self.capsulepass, self, var_1 );
}

_id_12F31()
{
    self endon( "stopDamageMonitor" );
    level endon( "game_ended" );
    var_0 = undefined;
    var_1 = undefined;

    for (;;)
    {
        self waittill( "damage", var_2, var_0, var_3, var_4, var_1, var_5, var_6 );

        if ( !isdefined( self ) )
            return;

        if ( isdefined( var_0 ) && isdefined( var_0.team ) && var_0.team == onplayerjointeamnospectator() && !istrue( var_0.usbmodel ) )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_0.traincar_wait_until_shown ) )
            thread custom_death_active( 1 );

        var_7 = var_0;

        if ( isdefined( var_0.classname ) && var_0.classname == "script_vehicle" )
        {
            if ( isdefined( var_0.owner ) )
                var_7 = var_0.owner;
        }

        var_8 = var_2;

        if ( self.health < 0 )
            var_8 = var_8 + self.health;

        if ( isplayer( var_7 ) )
        {
            if ( self.health <= 0 )
                var_7 scripts\mp\damagefeedback::updatedamagefeedback( "hitturretx2break", 0, 1, "hitturretx2break", 0, 1 );
            else
                var_7 scripts\mp\damagefeedback::updatedamagefeedback( "hitturretx2", 0, 1, "hitturretx2", 0, 1 );

            var_9 = int( min( var_2, var_8 ) );
            _id_13076( var_7, var_9 );
        }

        scripts\mp\gametypes\br_gametype_x2.gsc::damagestatedata( var_0, var_8 );

        if ( enemy_spawnnewscrambler() )
            elevator_lights_toggle();

        if ( self.health <= 0 )
            break;
    }

    _id_12F26();
    self.traincar thread _id_12F44();
}

_id_12F26()
{
    if ( self.turreton )
    {
        if ( self.health > 0 )
        {
            self notify( "stopDamageMonitor" );
            self.health = 0;
        }

        self.turreton = 0;
        self setmode( self.supersupplydropbeginuse );
        self cleartargetentity();
        self.attackingtarget = undefined;
        self notify( "disabled" );
        self hide();

        if ( isdefined( self.outlineid ) )
            debug_run_helicopter_boss();

        if ( self.weaponname == "armored_train_locomotive_turret_mp" || self.weaponname == "armored_train_locomotive_turret_buffed_mp" )
        {
            self._id_11AFB = spawn( "script_model", self.origin );
            self._id_11AFB setmodel( "x2_vfx_turret_loco_pop" );
            self._id_11AFB.angles = self.traincar.angles;
            self._id_11AFB linkto( self.traincar, self._id_12F4F );
            self._id_11AFB setscriptablepartstate( "base", "loco_pop" );
        }
        else
        {
            self._id_11AFB = spawn( "script_model", self.origin );
            self._id_11AFB setmodel( "x2_vfx_turret_pop" );
            self._id_11AFB.angles = self.traincar.angles;
            self._id_11AFB linkto( self.traincar, self._id_12F4F );
            self._id_11AFB setscriptablepartstate( "base", "pop" );
            self.gettacroverspawns = spawn( "script_model", self.origin );
            self.gettacroverspawns setmodel( "x2_reveal_assault_car_turrets_destroyed_decal" );
            self.gettacroverspawns.angles = self.traincar.angles;
            self.gettacroverspawns linkto( self.traincar, self._id_12F4F );
        }
    }
}

farah_disable_ai_color_before_hallway_takedown()
{
    if ( isdefined( self.gettacroverspawns ) )
    {
        self.gettacroverspawns delete();
        self.gettacroverspawns = undefined;
    }

    if ( isdefined( self._id_11AFB ) )
    {
        self._id_11AFB delete();
        self._id_11AFB = undefined;
    }
}

fake_trigger_think( var_0 )
{
    self endon( "death" );

    if ( !isdefined( var_0 ) )
        var_0 = 5;

    wait( var_0 );

    if ( isdefined( self ) )
        self delete();
}

_id_12F25()
{
    level endon( "game_ended" );

    if ( self.frontturret.turreton )
        self.frontturret _id_12F26();

    if ( isdefined( self.rearturret ) && self.rearturret.turreton )
        self.rearturret _id_12F26();

    self.frontturret kill();

    if ( isdefined( self.rearturret ) )
        self.rearturret kill();

    if ( isdefined( self.frontturret ) || isdefined( self.rearturret ) )
    {
        self.frontturret hide();
        self.frontturret.focus_fire_is_activated hide();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret hide();
            self.rearturret.focus_fire_is_activated hide();
        }

        wait 5;
        self.frontturret.focus_fire_is_activated delete();
        self.frontturret delete();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret.focus_fire_is_activated delete();
            self.rearturret delete();
        }
    }
}

enemy_spawnnewscrambler()
{
    var_0 = self.has_keycard + 1;

    if ( var_0 >= level._id_13644.size )
        return 0;

    var_1 = self.health / self.maxhealth;

    if ( var_1 > level._id_13644[var_0].drone_death_cleanup )
        return 0;

    return 1;
}

elevator_lights_toggle()
{
    var_0 = self.health / self.maxhealth;

    for ( var_1 = level._id_13644.size - 1; self.has_keycard < var_1 && var_0 <= level._id_13644[self.has_keycard + 1].drone_death_cleanup; self.has_keycard = int( min( self.has_keycard + 1, var_1 ) ) )
    {

    }

    bot_last_loadout_num( self.has_keycard );
}

bot_last_loadout_num( var_0 )
{
    self.has_keycard = var_0;
    var_1 = level._id_13644[self.has_keycard];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    var_2 = scripts\engine\utility::ter_op( self == self.traincar.frontturret, 0, 1 );
    _id_130C8( self.traincar._id_12DAE, var_2, self.has_keycard );
}

_id_12F27()
{
    var_0 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_2 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.showtutsplash.frontturret _id_12F26();
            continue;
        }
        else if ( var_2.showtutsplash.has_keycard != level._id_13642.size - 1 )
        {
            var_2.showtutsplash.frontturret _id_12F26();
            var_2.showtutsplash.rearturret _id_12F26();
        }
    }
}

_id_12F28()
{
    if ( !self.turreton )
    {
        self show();
        self.focus_fire_is_activated hide();
        self.focus_fire_is_activated setscriptablepartstate( "base", "enabled" );
        self.health = self.maxhealth;
        self setmode( self.superterrainlightbakelodoverride );
        self.turreton = 1;
        thread _id_12F42();

        if ( self.weaponname != "armored_train_locomotive_turret_mp" )
            thread _id_12F31();
    }
}

_id_12F29()
{
    var_0 = level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct;

    foreach ( var_2 in level._id_135FD._id_12D76 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.showtutsplash.frontturret _id_12F28();
            continue;
        }
        else if ( var_2.showtutsplash.has_keycard != level._id_13642.size - 1 )
        {
            var_2.showtutsplash.frontturret _id_12F28();
            var_2.showtutsplash.rearturret _id_12F28();
        }
    }
}

delay_camera_normal()
{
    scripts\mp\gametypes\br_gametype_x2.gsc::defend_wave_1( 0 );
    var_0 = damage_shield_reduction();

    foreach ( var_7, var_2 in level._id_135FD._id_12D76 )
    {
        var_3 = var_0[var_7];

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_135FD.branalytics_gulagstart.spawn_carriable_at_struct )
        {
            var_4 = debug_safehouse_regroup_start( var_2, var_2.showtutsplash.frontturret, var_3[0]._id_12F48, var_3[0].turretmodel );
            var_2.showtutsplash.frontturret.focus_fire_is_activated delete();
            var_2.showtutsplash.frontturret delete();
            var_2.showtutsplash.frontturret = var_4;
            var_2.showtutsplash.frontturret.traincar = var_2.showtutsplash;
            continue;
        }

        if ( isdefined( var_2.showtutsplash.frontturret ) && var_2.showtutsplash.frontturret.turreton && var_2.showtutsplash.frontturret.health > 0 )
        {
            var_5 = debug_safehouse_regroup_start( var_2, var_2.showtutsplash.frontturret, var_3[0]._id_12F48, var_3[0].turretmodel );
            var_2.showtutsplash.frontturret.focus_fire_is_activated delete();
            var_2.showtutsplash.frontturret delete();
            var_2.showtutsplash.frontturret = var_5;
            var_2.showtutsplash.frontturret.traincar = var_2.showtutsplash;
            var_2.showtutsplash.frontturret debug_start_numbers_threaded();
            var_2.showtutsplash.frontturret elevator_lights_toggle();
        }

        if ( isdefined( var_2.showtutsplash.rearturret ) && var_2.showtutsplash.rearturret.turreton && var_2.showtutsplash.rearturret.health > 0 )
        {
            var_6 = debug_safehouse_regroup_start( var_2, var_2.showtutsplash.rearturret, var_3[1]._id_12F48, var_3[1].turretmodel );
            var_2.showtutsplash.rearturret.focus_fire_is_activated delete();
            var_2.showtutsplash.rearturret delete();
            var_2.showtutsplash.rearturret = var_6;
            var_2.showtutsplash.rearturret.traincar = var_2.showtutsplash;
            var_2.showtutsplash.rearturret debug_start_numbers_threaded();
            var_2.showtutsplash.rearturret elevator_lights_toggle();
        }
    }

    wait 2.5;
    level notify( "buffTurrets" );
}

target_wavespawning_to_jammer5( var_0, var_1, var_2 )
{
    var_3 = laser_pursue_players();
    _id_124AD( var_3, var_0, var_1, var_2 );
}

_id_12F44()
{
    level endon( "game_ended" );
    _id_12DB3();
    self.binoculars_processtargetdata = max( self.binoculars_processtargetdata - 1, 0 );

    if ( self.binoculars_processtargetdata == 0 )
    {
        wait 0.2;
        bot_hq_start( 1 );
        debug_start_numbers_threaded();

        if ( !scripts\mp\flags::gameflag( "x2_airstrike_begin" ) )
        {
            thread scripts\mp\gametypes\br_gametype_x2.gsc::default_suicidebomber_combat( 3, 0 );
            wait 9;
            scripts\mp\gametypes\br_gametype_x2.gsc::defenderflagbases( 1 );
        }
    }
}

custom_damageshield_cooldown()
{
    level endon( "game_ended" );
    level endon( "x2_locomotive_vulnerable" );
    level waittill( "buffTurrets" );
    scripts\mp\gametypes\br_gametype_x2.gsc::showsplash( "br_x2_buffed_turrets_enabled" );

    while ( level._id_135FD._id_12DB3 < 15 )
        wait 0.2;

    level notify( "activateMortar" );
    scripts\mp\gametypes\br_gametype_x2.gsc::showsplash( "br_x2_superattack_enabled" );
}

_id_12DB3()
{
    level._id_135FD._id_12DB3++;
    level notify( "train_part_destroyed" );

    if ( level._id_135FD._id_12DB3 == 6 )
        thread delay_camera_normal();
}

onfirstlandcallback()
{
    if ( level._id_135FD._id_12DB3 >= 21 )
        var_0 = 0.5;
    else if ( level._id_135FD._id_12DB3 >= 15 )
        var_0 = 1;
    else
        var_0 = 0;

    var_0 = getdvarfloat( "x2_cluster_cooldown", var_0 );
    return var_0;
}

ongrenadeused()
{
    if ( level._id_135FD._id_12DB3 >= 21 )
        var_0 = 0.5;
    else if ( level._id_135FD._id_12DB3 >= 15 )
        var_0 = 0.3;
    else
        var_0 = 0;

    var_0 = getdvarfloat( "x2_cluster_delay", var_0 );
    return var_0;
}

deactivate_trap_object()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );

    for (;;)
    {
        if ( level._id_135FD._id_12DB3 < 15 )
        {
            wait 0.5;
            continue;
        }

        level._id_135FD._id_12AD0 = [];
        var_0 = mountain_one_death_func();

        if ( var_0.size == 0 )
        {
            var_1 = level._id_135FD._id_12D76[0];
            var_1 thread damage_enemies_in_trigger();
            wait( ongrenadeused() );
        }
        else
        {
            foreach ( var_3 in var_0 )
            {
                var_3 thread damage_enemies_in_trigger();
                wait( ongrenadeused() );
            }
        }

        waitframe();
        wait( onfirstlandcallback() );
    }
}

damage_enemies_in_trigger()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );
    scripts\mp\gametypes\br_gametype_x2.gsc::debug_start_silo_elevator();
    thread _id_12ACE();
}

_id_12ACE()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );
    var_0 = laser_pursue_players();
    var_1 = 0;
    var_2 = 1;

    if ( !isdefined( var_2 ) )
        return;

    var_3 = scripts\mp\utility\player::getplayersinradius( self.origin, 12000 );

    foreach ( var_5 in var_3 )
    {
        if ( var_1 >= var_2 )
            break;

        if ( !distance_weight( var_5.origin ) )
            continue;

        if ( round_spawn_vehicles( var_5.origin ) )
            continue;

        if ( !_id_12EE7( var_5.origin ) )
            continue;

        _id_124AD( var_0, self.origin, var_5.origin );
        var_1++;
    }

    var_7 = var_1;

    while ( var_7 < var_2 )
    {
        var_8 = getrandompointincircle( self.origin, 5000, 0.5 );

        if ( round_spawn_vehicles( var_8 ) )
            continue;

        if ( !_id_12EE7( var_8 ) )
            continue;

        _id_124AD( var_0, self.origin, var_8 );
        var_7++;
    }

    level notify( "x2SuperAttackCompleted" );
}

distance_weight( var_0 )
{
    var_1 = gettime() - 500000;
    var_2 = scripts\mp\utility\player::getplayersinradius( var_0, 1200 );

    foreach ( var_4 in var_2 )
    {
        var_5 = lastgoodjobplayer( var_4 );

        if ( isdefined( var_5 ) && level._id_135FD._id_12AD1[var_5].setup_crates_to_mark >= var_1 )
            return 0;
    }

    return 1;
}

_id_12EE7( var_0 )
{
    var_1 = gettime();
    var_2 = var_1 - 500000;
    var_3 = scripts\mp\utility\player::getplayersinradius( var_0, 1200 );

    foreach ( var_5 in var_3 )
    {
        var_6 = lastgoodjobplayer( var_5 );

        if ( isdefined( var_6 ) && level._id_135FD._id_12AD1[var_6].setup_crates_to_mark >= var_2 )
            return 0;
    }

    foreach ( var_5 in var_3 )
    {
        var_6 = lastgoodjobplayer( var_5 );

        if ( !isdefined( var_6 ) )
        {
            var_9 = spawnstruct();
            var_9.player = var_5;
            var_6 = level._id_135FD._id_12AD1.size;
        }
        else
            var_9 = level._id_135FD._id_12AD1[var_6];

        var_9.setup_crates_to_mark = var_1 + randomint( 1000 );
        level._id_135FD._id_12AD1[var_6] = var_9;
    }

    return 1;
}

lastgoodjobplayer( var_0 )
{
    foreach ( var_3, var_2 in level._id_135FD._id_12AD1 )
    {
        if ( var_2.player == var_0 )
            return var_3;
    }

    return undefined;
}

round_spawn_vehicles( var_0 )
{
    foreach ( var_2 in level._id_135FD._id_12AD0 )
    {
        var_3 = distance2d( var_0, var_2 );

        if ( var_3 <= 1200 )
            return 1;
    }

    return 0;
}

_id_1364E( var_0 )
{
    if ( isagent( var_0 ) )
    {
        var_1 = laser_pursue_players();

        if ( var_1 != var_0 )
        {
            if ( !isdefined( var_0.isactive ) || !var_0.isactive )
                return undefined;

            if ( !isdefined( var_0.classname ) )
                return undefined;
        }
    }

    return var_0;
}

laser_pursue_players()
{
    var_0 = undefined;

    if ( isdefined( level._id_12DAB ) )
        var_0 = level._id_12DAB;
    else
    {
        var_1 = scripts\engine\utility::array_reverse( level.agentarray );

        foreach ( var_3 in var_1 )
        {
            if ( !isdefined( var_3 ) )
                continue;

            if ( isdefined( var_3.team ) && var_3.team != "axis" )
                continue;

            if ( !isdefined( var_3.team ) && isdefined( var_3.agentteam ) )
                continue;

            var_0 = var_3;
            var_0._id_13111 = 1;

            if ( !isdefined( var_0.pers["nextKillstreakID"] ) )
                var_0.pers["nextKillstreakID"] = 0;

            break;
        }

        level._id_12DAB = var_0;
    }

    return var_0;
}

_id_124AD( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = var_0 scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "toma_strike", var_0 );

    var_3.trap_array = 1;
    var_3.trigger_elevator_spawners = 1;
    var_3.select_reception_spawners = 1;
    var_3.usereload = "ks_toma_strike_missile_mp_x2";
    var_3.usequesttimer = "ks_toma_strike_cluster_mp_x2";
    var_0.origin = var_2;
    var_0.angles = vectortoangles( var_2 - var_1 );
    level._id_135FD._id_12AD0 = scripts\engine\utility::array_add( level._id_135FD._id_12AD0, var_2 );
    var_3._id_12BB0 = var_2;
    var_0 thread scripts\cp_mp\killstreaks\toma_strike::starttomastrike( 5, undefined, undefined, var_3 );
}

getrandompointincircle( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_1 <= 0.0 )
        return var_0;

    var_7 = 0.0;

    if ( isdefined( var_2 ) )
        var_7 = var_2;

    var_8 = 1.0;

    if ( isdefined( var_3 ) )
        var_8 = var_3;

    if ( !isdefined( var_4 ) )
        var_4 = 1;

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    if ( !isdefined( var_6 ) )
        var_6 = 360;

    var_9 = squared( var_1 * var_7 );
    var_10 = squared( var_1 * var_8 );
    var_11 = undefined;

    if ( var_9 == var_10 )
        var_11 = sqrt( var_9 );
    else
        var_11 = sqrt( randomfloatrange( var_9, var_10 ) );

    var_12 = var_5 + randomfloat( var_6 - var_5 );
    var_13 = ( var_11 * cos( var_12 ), var_11 * sin( var_12 ), 0 );
    var_14 = var_0 + var_13;

    if ( var_4 )
    {
        var_15 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1 );
        var_14 = scripts\engine\utility::drop_to_ground( ( var_0[0], var_0[1], 400 ) + var_13, undefined, undefined, undefined, var_15 );
    }

    return var_14;
}

debug_kill_ent_after_time( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    wait( var_2 );
    var_1 playsoundonmovingent( var_0 );
}

defend_start()
{
    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 setsoundsubmix( "br_x2_train_destroyed", 0.3 );
    }
}
