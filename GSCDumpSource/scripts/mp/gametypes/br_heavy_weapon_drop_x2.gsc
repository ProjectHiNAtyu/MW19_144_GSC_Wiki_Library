// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.playerexitcombatarea = [];
    var_0 = scripts\cp_mp\killstreaks\airdrop::getleveldata( "heavy_weapon_crate" );
    var_0.capturestring = &"MP/GENERIC_LOOT_CRATE_CAPTURE";
    var_0.dummymodel = "military_carepackage_01_br_legendary";
    var_0.friendlymodel = undefined;
    var_0.enemymodel = undefined;
    var_0.mountmantlemodel = undefined;
    var_0.supportsownercapture = 0;
    var_0.headicon = undefined;
    var_0.minimapicon = undefined;
    var_0.usepriority = -1;
    var_0.usefov = 180;
    var_0.timeout = undefined;
    var_0.friendlyuseonly = 0;
    var_0.ownerusetime = 0.5;
    var_0.otherusetime = 0.5;
    var_0.activatecallback = ::playerforcespawn;
    var_0.capturecallback = ::playerforcespectatorclientwait;
    var_0.destroycallback = ::playerfriendlyto;
    var_0.get_active_bombzones = ::playergetbestdropbagorigin;
    var_0.destroyoncapture = 1;
    level.playerentersafeareamessage = spawnstruct();
    var_1 = getdvarint( "x2_heavy_drop_loadout", 0 );
    level.playerentersafeareamessage.equipment = no_csm( var_1 );
}

no_csm( var_0 )
{
    switch ( var_0 )
    {
        case 1:
            return [ [ "brloot_super_munitionsbox", 8 ] ];
        default:
            return [ [ "brloot_weapon_lm_dblmg_lege", 1 ], [ "brloot_weapon_ar_t9british_lege", 1 ], [ "brloot_weapon_ar_t9accurate_lege", 1 ], [ "brloot_weapon_la_mike32_lege", 1 ] ];
    }
}

playerforcespawn( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airdrop", "registerCrateForCleanup" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airdrop", "registerCrateForCleanup" ) ]]( self );
    }

    level.playerexitcombatarea[level.playerexitcombatarea.size] = self;
}

playerforcespectatorclientwait( var_0 )
{
    if ( isdefined( self._id_125EB ) )
    {
        self._id_125EB setscriptablepartstate( "smoke_signal", "off", 0 );
        self._id_125EB delete();
    }

    level.playerexitcombatarea = scripts\engine\utility::array_remove( level.playerexitcombatarea, self );
    playerexecutionsenable();
}

playerfriendlyto( var_0 )
{
    if ( isdefined( self._id_125EB ) )
    {
        self._id_125EB setscriptablepartstate( "smoke_signal", "off", 0 );
        self._id_125EB delete();
    }

    level.playerexitcombatarea = scripts\engine\utility::array_remove( level.playerexitcombatarea, self );
}

playergetbestdropbagorigin( var_0, var_1 )
{
    self setscriptablepartstate( "crate_audio", "detach", 0 );
}

playerexecutionsenable()
{
    var_0 = [];
    var_1 = 0;
    var_2 = scripts\mp\gametypes\br_pickups.gsc::register_respawn_functions();

    foreach ( var_4 in level.playerentersafeareamessage.equipment )
    {
        var_5 = var_4[0];
        var_6 = var_4[1];

        if ( scripts\mp\gametypes\br_lootcache.gsc::divide_living_ai( var_5 ) )
        {
            for ( var_7 = 0; var_7 < var_6; var_7++ )
                var_8 = scripts\mp\gametypes\br_lootcache.gsc::spawn_silo_door_ai( var_5, var_2, self.origin, self.angles, 0, 1 );
        }
    }
}

playerexecutionsdisable()
{
    playfx( level.conf_fx["vanish"], self.origin );

    if ( isdefined( self._id_125EB ) )
    {
        self._id_125EB setscriptablepartstate( "smoke_signal", "off", 0 );
        self._id_125EB delete();
    }

    level.playerexitcombatarea = scripts\engine\utility::array_remove( level.playerexitcombatarea, self );
    scripts\cp_mp\killstreaks\airdrop::hack_airport_combat_init();
}
