// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level thread createvisualsinfo();
    level thread createzombieloadout();
    level thread createteamdefenderflag();
    level thread createteamdefenderflagbase();
    setdvarifuninitialized( "scr_br_rebirth_circle_setting", 0 );
    setdvar( "scr_br_project_kick", 1500 );
    level thread critical_messages();
}

critical_messages()
{
    registerpuzzleinteractions( "mp/classtable_br_atlantis.csv" );
    registerpuzzleinteractions( "mp/classtable_br_atlantis_circle2.csv" );
    registerpuzzleinteractions( "mp/classtable_br_atlantis_circle3.csv" );
    level.completesmokinggunquest._id_13131 = getdvarint( "scr_br_use_tracked_teams", 1 );
    level.completesmokinggunquest._id_13132 = getdvarint( "scr_br_use_vengeance", 1 );
    level.completesmokinggunquest._id_132EE = getdvarint( "scr_br_vengeance_use_any_kill", 0 );
    level.completesmokinggunquest._id_13133 = getdvarint( "scr_br_use_vengeance_decrease_respawn_timer", 1 );
    level.completesmokinggunquest._id_13126 = getdvarint( "scr_br_use_respawn_waves", 0 );
    level.completesmokinggunquest._id_1311F = getdvarint( "scr_br_use_points_to_reduce_respawn_time", 1 );
    level._id_11F58 = getdvarint( "scr_bmo_respawnHeightOverride", 7500 );
    level.completesmokinggunquest._id_11F47 = getdvarint( "scr_br_rebirth_respawn_should_wait_prestreaming_end", 0 );
    level.completesmokinggunquest._id_11F46 = getdvarint( "scr_br_rebirth_respawn_should_notify_started_spawn", 1 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "circleTimer", ::circletimer );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "mayConsiderPlayerDead", ::createpropspeclist );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "triggerRespawnOverlay", ::current_ally_volume );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "playerNakedDropLoadout", ::cs_flags_init );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "getDefaultLoadout", ::createserverfontstring );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "kioskRevivePlayer", ::crossbowbolts );

    if ( !istrue( level.resettimeronkill ) )
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "onPlayerKilled", ::cruisepredator_watchintropoddisown );

    waittillframeend;

    if ( level.completesmokinggunquest._id_1311F )
        level.unset_relic_mythic = ::cruisepredator_watchownerdisownaction;

    relic_award_one_bullet();
    thread cull_list_of_players();
    thread cumulative_damage_monitor();
    thread cumulative_damage_to_chopper_boss();
    thread ctgs_statstracker();
    thread cumulative_damage_expire_time();
}

createvisualsinfo()
{
    if ( getdvarint( "scr_br_rebirth_debug", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "allowLateJoiners" );

    scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "gulag" );

    if ( getdvarint( "scr_br_alt_mode_rebirth_skip_initial_circle", 0 ) != 0 )
    {
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "randomizeCircleCenter" );
        scripts\mp\gametypes\br_gametypes.gsc::helihint_wait( "planeSnapToOOB" );
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "planeUseCircleRadius" );
        scripts\mp\gametypes\br_gametypes.gsc::initnonbunkerdoors( "circleEarlyStart" );
    }
}

createzombieloadout()
{
    if ( getdvarint( "scr_br_alt_mode_rebirth_skip_initial_circle", 0 ) != 0 )
    {
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "createC130PathStruct", ::createscreeneffectext );
        scripts\mp\gametypes\br_gametypes.gsc::_id_11DDC( "addToC130Infil", ::createobjectivelist );

        if ( getdvarint( "scr_rebirth_shouldSetInitalDropDelay", 1 ) == 1 )
            thread ctgs_compareweaponxp();
    }

    waittillframeend;
    level.ontimelimit = ::crushing_players;
    createquestobjicon();
    level._id_13158 = [];
    level._id_13158[0] = "assassination";
    level._id_13158[1] = "domination";
    level._id_13158[2] = "scavenger";
    scripts\mp\rank::use_emp_drone_func( "kill", 100 );
    scripts\mp\rank::use_emp_drone_func( "br_cacheOpen", 200 );
}

hint_outline_target_think( var_0, var_1, var_2, var_3 )
{
    var_4 = var_0 getentitynumber();

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    if ( !isdefined( var_4 ) )
        var_4 = 0;

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    var_5 = 4;
    var_6 = var_5;
    var_7 = 8;
    var_8 = var_6 + var_7;
    var_9 = 16;
    var_10 = 0;
    var_11 = var_8 + var_9;

    foreach ( var_13 in var_3 )
    {
        var_10 = var_10 | var_13 << var_11;
        var_11++;
    }

    var_15 = 0;
    var_15 = var_10 | var_2 << var_8 | var_4 << var_6 | var_1;
    self setclientomnvar( "ui_br_expanded_obit_message", var_15 );
}

hint_seq_button( var_0, var_1, var_2, var_3, var_4 )
{
    foreach ( var_6 in scripts\mp\utility\teams::getteamdata( var_0, "players" ) )
        var_6 hint_outline_target_think( var_1, var_2, var_3, var_4 );
}

cruisepredator_watchgameend( var_0, var_1, var_2 )
{
    if ( getdvarint( "scr_br_notify_team_vengeance", 1 ) == 0 )
        return;

    var_3 = var_1 getentitynumber();
    var_4 = var_0 getentitynumber();
    var_5 = [];
    var_6 = 1;
    var_7 = scripts\mp\utility\teams::getteamdata( level.players[var_4].team, "players" );

    foreach ( var_9 in var_7 )
    {
        if ( var_9 == level.players[var_4] )
        {
            var_5[var_6] = 0;
            var_6++;
            continue;
        }

        var_5[var_6] = 0;

        foreach ( var_11 in var_2 )
        {
            if ( var_9 == var_11 )
            {
                var_5[var_6] = 1;
                break;
            }
        }

        var_6++;
    }

    for ( var_14 = var_6; var_14 < 4; var_14++ )
        var_5[var_14] = 0;

    hint_seq_button( level.players[var_4].team, level.players[var_4], 13, var_3, var_5 );
}

createteamdefenderflag()
{
    level endon( "game_ended" );
    level waittill( "br_dialog_initialized" );
}

createquestobjicon()
{
    scripts\cp_mp\utility\game_utility::_id_11ED3( "delete_on_load", "targetname" );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_prison_cell_metal_mp", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "door_wooden_panel_mp_01", 1 );
    scripts\cp_mp\utility\game_utility::_id_11ED4( "me_electrical_box_street_01", 1 );
}

createteamdefenderflagbase()
{

}

cull_list_of_players()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level.completesmokinggunquest._id_11F55 = 1;
}

cumulative_damage_monitor()
{
    waittillframeend;
    var_0 = level.allteamnamelist;

    foreach ( var_3, var_2 in var_0 )
        level.teamdata[var_2]["index"] = var_3;

    var_4 = getdvarint( "scr_br_tracked_teams_for_entire_team", 0 );

    if ( istrue( var_4 ) )
    {
        foreach ( var_6, var_2 in level.teamdata )
            level.teamdata[var_6]["trackedTeams"] = [];
    }
    else
    {
        scripts\mp\flags::gameflagwait( "prematch_done" );

        foreach ( var_8 in level.players )
            var_8._id_12D3E = [];
    }
}

cumulative_damage_to_chopper_boss()
{
    foreach ( var_2, var_1 in level.teamdata )
        level.teamdata[var_2]["deadPlayers"] = [];
}

crushing_players()
{
    if ( isdefined( level.numendgame ) )
        level thread scripts\mp\gametypes\br.gsc::startendgame( 1 );

    level.numendgame = undefined;
}

createpropspeclist( var_0 )
{
    if ( scripts\mp\flags::gameflag( "prematch_done" ) )
    {
        var_0 thread current_carrier();
        scripts\mp\gametypes\br.gsc::ss_circletick( var_0 );
    }

    return 1;
}

cruisepredator_detachplayerfromintro( var_0 )
{
    foreach ( var_2 in scripts\mp\utility\teams::getteamdata( var_0.team, "players" ) )
    {
        if ( !istrue( var_2.player_maxhealth ) && isalive( var_2 ) && var_0 != var_2 )
        {
            var_2.player_maxhealth = 1;
            var_2 thread scripts\mp\hud_message::showsplash( "br_atlantis_first_dead" );
        }
    }
}

cs_add_to_struct_array()
{
    if ( !isdefined( self.current_carrier_time ) )
        self.current_carrier_time = 0;

    var_0 = self.current_carrier_time;

    if ( var_0 > 255 )
        var_0 = 255;

    self.extrascore0 = var_0;
    self.pers["extrascore0"] = var_0;
    return var_0;
}

current_button_progress( var_0, var_1 )
{
    var_2 = !istrue( level.teamdata[self.team]["teamHadFirstRevive"] );

    if ( var_2 )
        level.teamdata[self.team]["teamHadFirstRevive"] = 1;

    foreach ( var_4 in var_0 )
    {
        if ( !isdefined( var_4.current_carrier_time ) )
            var_4.current_carrier_time = 0;

        var_4.current_carrier_time++;
        var_4 scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "reviveCount", var_4.current_carrier_time );
        var_4 cs_add_to_struct_array();
        var_5 = !isdefined( var_1 ) || var_4 != var_1;
        var_6 = var_2 && var_5;

        if ( var_6 )
            var_4 thread scripts\mp\hud_message::showsplash( "br_atlantis_first_revive" );
    }
}

crossbowbolts( var_0, var_1 )
{
    var_2 = self;
    var_2 thread scripts\mp\gametypes\br_gulag.gsc::playergulagautowin( "rebirth", var_0, var_1 );
    var_2 current_button_progress( level.teamdata[var_2.team]["alivePlayers"], var_0 );
    cs_setup_arrays();
    return;
}

cruisepredator_watchintropoddisown( var_0 )
{
    if ( !istrue( level.br_prematchstarted ) )
        return;

    if ( level.gameended )
        return;

    if ( !isdefined( var_0.victim ) )
        return;

    thread cruisepredator_detachplayerfromintro( var_0.victim );

    if ( !isdefined( var_0.attacker ) || !isplayer( var_0.attacker ) || var_0.attacker == var_0.victim )
        return;

    var_1 = scripts\mp\utility\teams::getteamdata( var_0.attacker.team, "aliveCount" );

    if ( var_1 <= 0 )
        return;

    var_0.attacker current_button_counter( var_0.attacker.team, var_0.victim.team );
    var_0.attacker thread current_anim_ref( var_0.attacker.team, var_0.victim );
}

current_button_counter( var_0, var_1 )
{
    if ( !level.completesmokinggunquest._id_13131 )
        return;

    curr_airlock_pos( var_0, var_1 );
}

current_anim_ref( var_0, var_1 )
{
    level endon( "game_ended" );

    if ( !level.completesmokinggunquest._id_13132 )
        return;

    if ( !istrue( level.completesmokinggunquest._id_11F55 ) )
        return;

    var_2 = scripts\mp\utility\teams::getteamdata( var_0, "aliveCount" );

    if ( var_2 <= 0 )
        return;

    var_3 = level.teamdata[var_0]["deadPlayers"];

    if ( var_3.size <= 0 )
        return;

    var_4 = createspawncamera( var_3, var_1 );
    createpropspecatehud( var_4, var_1 );
}

createspawncamera( var_0, var_1 )
{
    var_2 = [];

    if ( istrue( level.completesmokinggunquest._id_132EE ) )
    {
        foreach ( var_4 in var_0 )
        {
            if ( !isdefined( var_4 ) )
                continue;

            var_2 = scripts\engine\utility::array_add( var_2, var_4 );
            break;
        }
    }
    else
    {
        foreach ( var_4 in var_0 )
        {
            if ( !isdefined( var_4 ) )
                continue;

            if ( isdefined( var_4.set_chosen_spawner_from_uid ) && var_4.set_chosen_spawner_from_uid == var_1 && isdefined( var_4.player ) )
                var_2 = scripts\engine\utility::array_add( var_2, var_4.player );
        }
    }

    return var_2;
}

createpropspecatehud( var_0, var_1 )
{
    if ( var_0.size <= 0 )
        return;

    foreach ( var_3 in var_0 )
    {
        if ( !isdefined( var_3 ) )
            continue;

        createprematchloadout( var_3 );
    }

    if ( !istrue( level.completesmokinggunquest._id_13133 ) )
        cruisepredator_watchgameend( self, var_1, var_0 );

    thread scripts\mp\events::killeventtextpopup( "br_atlantis_vengeance", 0, 0 );
}

createprematchloadout( var_0 )
{
    if ( istrue( level.completesmokinggunquest._id_13133 ) )
        var_0._id_11F52 = var_0._id_11F52 - getdvarint( "scr_br_vengeance_decrease_respawn_delay", 5 );
    else
        var_0 thread createscriptedspawnpoint( 1, level.teamdata[var_0.team]["alivePlayers"] );
}

lastdroppableweaponchanged( var_0 )
{
    var_1 = -1;
    var_2 = 2147483647;

    foreach ( var_5, var_4 in var_0 )
    {
        if ( var_4["startTime"] < var_2 )
        {
            var_1 = var_5;
            var_2 = var_4["startTime"];
        }
    }

    return var_1;
}

getteamindex( var_0 )
{
    return level.teamdata[var_0]["index"];
}

projectileunlinkonnote( var_0, var_1 )
{
    var_2 = -1;

    foreach ( var_5, var_4 in var_0 )
    {
        if ( var_4["name"] == var_1 )
        {
            var_2 = var_5;
            break;
        }
    }

    return var_2;
}

_id_130BE( var_0, var_1, var_2 )
{
    var_3 = int( pow( 2, 8 ) );
    var_4 = 8 * var_2;
    var_5 = var_3 - 1;
    var_5 = var_5 << var_4;
    var_6 = ~var_5;
    var_0 = var_0 & var_6;
    var_7 = var_1 << var_4;
    var_0 = var_0 | var_7;
    return var_0;
}

_id_130C4( var_0, var_1, var_2 )
{
    var_3 = -1;

    foreach ( var_5 in var_0 )
    {
        if ( isdefined( var_5 ) )
        {
            if ( var_3 < 0 )
            {
                var_3 = var_5 getclientomnvar( "rebirth_tracked_teams" );
                var_3 = _id_130BE( var_3, var_1, var_2 );
            }

            var_5 setclientomnvar( "rebirth_tracked_teams", var_3 );
        }
    }
}

onplayerentergulag()
{
    var_0 = getdvarint( "scr_br_tracked_teams_for_entire_team", 0 );
    var_1 = [];

    if ( istrue( var_0 ) )
        var_1 = scripts\mp\utility\teams::getteamdata( self.team, "trackedTeams" );
    else
        var_1 = self._id_12D3E;

    return var_1;
}

curr_airlock_pos( var_0, var_1 )
{
    var_2 = -1;
    var_3 = onplayerentergulag();
    var_2 = projectileunlinkonnote( var_3, var_1 );

    if ( var_2 < 0 )
    {
        if ( var_3.size == 4 )
            var_2 = lastdroppableweaponchanged( var_3 );
        else
            var_2 = var_3.size;
    }

    if ( var_2 < 0 || var_2 >= 4 )
        return;

    thread cur_wave_start_time( var_0, var_1, var_2 );
}

cur_wave_start_time( var_0, var_1, var_2 )
{
    if ( var_2 < 0 || var_2 >= 4 )
        return;

    var_3 = "trackTeam" + var_0 + var_2;
    var_4 = [];
    var_5 = [];
    var_5["name"] = var_1;
    var_5["startTime"] = gettime();
    var_6 = getdvarint( "scr_br_tracked_teams_for_entire_team", 0 );

    if ( istrue( var_6 ) )
    {
        level notify( var_3 );
        level endon( var_3 );
        level.teamdata[var_0]["trackedTeams"][var_2] = var_5;
        var_4 = scripts\mp\utility\teams::getteamdata( var_0, "players" );
    }
    else
    {
        self notify( var_3 );
        self endon( var_3 );
        self._id_12D3E[var_2] = var_5;
        var_4 = [ self ];
    }

    var_7 = getteamindex( var_1 );
    _id_130C4( var_4, var_7, var_2 );
    var_8 = getdvarfloat( "scr_br_tracked_teams_clear_delay", 2.5 );
    wait( var_8 );
    _id_130C4( var_4, 0, var_2 );
}

ctgs_statstracker()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( getdvarint( "scr_br_alt_mode_rebirth_skip_initial_circle", 0 ) == 0 )
        level waittill( "infils_ready" );

    var_0 = old_spectator_func();
    var_1 = 0;

    if ( getdvarint( "scr_br_alt_mode_rebirth_skip_initial_circle", 0 ) )
        var_1 = 1;

    for ( var_2 = 0; var_2 < var_0; var_2++ )
        var_1 = var_1 + ( level.br_level.br_circleclosetimes[var_2] + level.br_level.br_circledelaytimes[var_2] );

    var_3 = int( var_1 * 1000 );
    var_4 = gettime();
    var_5 = var_4 + var_3;
    setomnvarforallclients( "ui_br_plunder_extract_end_time", var_5 );
    level.addtodismembermentlist = var_1;
    var_6 = var_3;

    for ( var_7 = getdvarint( "scr_br_rebirth_show_respawn_closed_timer_max_time", 90000 ); var_6 > var_7; var_6 = var_3 - var_8 )
    {
        wait( ( var_6 - var_7 ) / 1000 );
        var_8 = gettime() - var_4;
    }

    setomnvarforallclients( "ui_br_plunder_extract_end_time", int( gettime() + var_6 ) );

    foreach ( var_10 in level.players )
    {
        if ( !isdefined( var_10 ) )
            continue;

        var_10 thread scripts\mp\hud_message::showsplash( "br_atlantis_reinforcement_closing" );
    }
}

cumulative_damage_expire_time()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level.completesmokinggunquest._id_11F52 = [];
    level.completesmokinggunquest._id_13125 = getdvarint( "scr_br_use_respawn_delay_per_circle", 1 );

    if ( level.completesmokinggunquest._id_13125 )
    {
        var_0 = old_spectator_func();

        for ( var_1 = 0; var_1 < var_0; var_1++ )
            level.completesmokinggunquest._id_11F52[var_1] = getdvarint( "scr_br_rebirth_respawn_delay_circle" + ( var_1 + 1 ), 30 );
    }
    else
        level.completesmokinggunquest._id_11F52[0] = getdvarint( "scr_br_rebirth_respawn_delay", 30 );
}

createstreakinfo_ai_turret()
{
    var_0 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_1 = var_0 & ~16384;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_1 );
}

cur_goal_struct()
{
    var_0 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_1 = var_0 | 16384;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_1 );
}

ctgs_comparestats()
{
    var_0 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_1 = var_0 | 32768;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_1 );
}

csm_alg()
{
    var_0 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_1 = var_0 & ~32768;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_1 );
}

ctgs_buildstatstrackerstruct( var_0 )
{
    var_1 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_2 = var_1 & ~16383;
    var_3 = var_2 | var_0;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_3 );
}

ctfnukeended( var_0 )
{
    var_1 = self getclientomnvar( "ui_atlantisRespawnTimer" );
    var_2 = var_1 & ~2147418112;
    var_3 = var_1 & 1073741824;

    if ( var_3 != 0 )
        var_3 = 0;
    else
        var_3 = 1073741824;

    var_4 = var_2 | var_0 << 16 | var_3;
    self setclientomnvar( "ui_atlantisRespawnTimer", var_4 );
}

brclampstepdamage( var_0 )
{
    var_1 = scripts\mp\utility\teams::getteamdata( var_0.team, "players" );

    foreach ( var_3 in var_1 )
    {
        var_4 = var_3 scripts\mp\gametypes\br_public.gsc::rungwperif_flak();
        var_5 = isalive( var_3 ) && !istrue( var_3.inlaststand );

        if ( var_3 != var_0 && var_5 && !var_4 )
            return 1;
    }

    return 0;
}

ctf_bot_defender_limit_for_team()
{
    var_0 = self;

    if ( !isdefined( var_0.gulaguses ) || var_0.gulaguses == 0 )
    {
        var_0 current_button_progress( level.teamdata[var_0.team]["alivePlayers"] );
        cs_setup_arrays();
        var_0 scripts\mp\playerlogic::addtoalivecount( "rebirth1" );
        scripts\mp\gametypes\br.gsc::_id_12FD8( var_0, "rebirth1" );
        scripts\mp\gametypes\br.gsc::create_seatids_override( var_0 );
        scripts\mp\gametypes\br_gulag.gsc::entergulag( var_0 );
        self.waitingtospawn = 0;
    }
}

createquestcircle()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "doingRespawn" );

    if ( istrue( level.completesmokinggunquest._id_13115 ) )
    {
        while ( brclampstepdamage( self ) )
            waitframe();

        createstreakinfo_ai_turret();
        self notify( "squad_wiped" );
        waitframe();
        ctf_bot_defender_limit_for_team();
    }
    else
    {
        for ( var_0 = scripts\mp\utility\teams::getteamdata( self.team, "aliveCount" ); var_0 > 0; var_0 = scripts\mp\utility\teams::getteamdata( self.team, "aliveCount" ) )
            waitframe();

        createstreakinfo_ai_turret();
        self notify( "squad_wiped" );
    }
}

cruisepredator_watchownerdisownaction( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_0 ) )
        return;

    if ( !isalive( var_0 ) )
        return;

    if ( var_1 <= 0 )
        return;

    if ( !scripts\mp\flags::gameflag( "prematch_done" ) )
        return;

    if ( isdefined( var_2 ) && isdefined( var_3 ) && var_2 == "br_kioskBuy" && var_3 == "br_team_revive" )
    {
        var_4 = scripts\mp\utility\teams::getteamdata( var_0.team, "aliveCount" );
        var_5 = scripts\mp\utility\teams::getteamdata( var_0.team, "teamCount" );
        var_6 = var_5 - var_4;

        if ( var_6 == 1 )
            return;
    }

    var_7 = getdvarfloat( "scr_br_rebirth_points_to_second_ratio", 0.02 );
    var_8 = getdvarint( "scr_br_rebirth_points_to_first_second_offset", 50 );
    var_9 = int( floor( ( var_1 + var_8 ) * var_7 ) );

    if ( isdefined( var_2 ) )
    {
        if ( var_2 == "br_kioskBuy" )
        {
            var_10 = getdvarfloat( "scr_br_rebirth_points_to_second_kiosk_buy_ratio", 0.3 );
            var_9 = int( ceil( var_9 * var_10 ) );
        }
        else if ( var_2 == "kill" )
            var_9 = int( floor( ( 250 + var_8 ) * var_7 ) );
        else if ( var_2 == "br_cacheOpen" )
            var_9 = int( floor( ( 100 + var_8 ) * var_7 ) );
    }

    if ( var_9 <= 0 )
        return;

    var_11 = level.teamdata[var_0.team];

    if ( !isdefined( var_11 ) )
        return;

    var_12 = var_11["deadPlayers"];

    if ( !isdefined( var_12 ) )
        return;

    var_13 = 0;

    foreach ( var_15 in var_12 )
    {
        if ( isdefined( var_15 ) && isdefined( var_15.player ) && var_15.player != var_0 )
        {
            if ( var_15.player._id_11F52 > 0 )
            {
                var_15.player._id_11F52 = int( max( 0, var_15.player._id_11F52 - var_9 ) );

                if ( !isdefined( var_15.player._id_11F54 ) )
                    var_15.player._id_11F54 = 0;

                var_15.player._id_11F54 = var_15.player._id_11F54 + var_9;
                var_13 = 1;
            }
        }
    }

    if ( var_13 )
    {
        if ( istrue( var_0.addtop3brcharge ) )
            var_0.addtolittlebirdmglist = var_0.addtolittlebirdmglist + var_9;
        else
        {
            var_0.addtop3brcharge = 1;
            var_0.addtolittlebirdmglist = var_9;
            var_0 thread cur_vision();
        }
    }
}

cur_vision()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "squad_wiped" );
    wait 0.5;

    if ( isdefined( self.addtolittlebirdmglist ) && self.addtolittlebirdmglist > 0 )
        ctfnukeended( self.addtolittlebirdmglist );

    self.addtolittlebirdmglist = undefined;
    self.addtop3brcharge = 0;
}

current_carrier()
{
    if ( !istrue( level.completesmokinggunquest._id_11F55 ) )
        return;

    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "squad_wiped" );
    var_0 endon( "force_stop_respawn" );
    var_0 thread createquestcircle();
    var_0 thread createscript_covernodes();

    if ( isdefined( level.completesmokinggunquest.rebirthdelayoverride ) )
        var_0._id_11F52 = level.completesmokinggunquest.rebirthdelayoverride;
    else
    {
        var_1 = int( min( level.br_circle.circleindex, level.completesmokinggunquest._id_11F52.size - 1 ) );
        var_0._id_11F52 = level.completesmokinggunquest._id_11F52[var_1];

        if ( istrue( level.completesmokinggunquest._id_13126 ) )
            var_0._id_11F52 = level.completesmokinggunquest._id_13551;
    }

    if ( !isdefined( var_0._id_11F52 ) )
    {
        var_2 = "Respawn delay was not properly set. scr_br_rebirth_respawn_delay or scr_br_rebirth_respawn_delay_circle should have been set. Defaulting to 30";
        scripts\mp\utility\script::handle_train_veh_collision( var_2 );
        var_0._id_11F52 = 30;
    }

    var_0 csm_alg();
    var_0 cur_goal_struct();
    var_0 ctgs_buildstatstrackerstruct( var_0._id_11F52 );

    for ( var_0._id_11F54 = 0; var_0._id_11F52 > 0; var_0._id_11F52-- )
    {
        if ( isalive( var_0 ) )
            var_0._id_11F52 = 0;
        else
            var_0 ctgs_buildstatstrackerstruct( var_0._id_11F52 );

        var_0 ctfnukeended( var_0._id_11F54 );
        var_0 scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "respawnInSeconds", var_0._id_11F52 );
        var_0._id_11F54 = 0;
        wait 1;
    }

    var_0 createstreakinfo_ai_turret();
    var_0 ctfnukeended( 0 );
    var_0 scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "respawnInSeconds", 0 );

    if ( !isalive( var_0 ) )
    {
        if ( isdefined( var_0.team ) )
            scripts\mp\gametypes\br_quest_util.gsc::hint_obj_name( var_0.team, var_0, 12, 1 );

        var_0 thread createscriptedspawnpoint( 0, level.teamdata[var_0.team]["alivePlayers"] );
    }
}

createscript_covernodes()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    waitframe();
    createplayerplundereventdata();
}

createplayerplundereventdata()
{
    if ( istrue( level.completesmokinggunquest.delete_laser_entities ) )
        return;

    var_0 = self;

    if ( !istrue( level.completesmokinggunquest._id_132EE ) )
    {
        var_0 = spawnstruct();
        var_0.player = self;
        var_0.set_chosen_spawner_from_uid = self.lastkilledby;
    }

    var_1 = [];
    var_2 = level.teamdata[self.team]["deadPlayers"];

    foreach ( var_4 in var_2 )
    {
        if ( isdefined( var_4 ) )
            var_1[var_1.size] = var_4.player.name;
    }

    level.teamdata[self.team]["deadPlayers"] = scripts\engine\utility::array_add( level.teamdata[self.team]["deadPlayers"], var_0 );
}

cs_setup_arrays()
{
    if ( istrue( level.completesmokinggunquest.delete_laser_entities ) )
        return;

    var_0 = level.teamdata[self.team]["deadPlayers"];

    if ( istrue( level.completesmokinggunquest._id_132EE ) )
        var_0 = scripts\engine\utility::array_remove( var_0, self );
    else
    {
        var_1 = [];

        foreach ( var_3 in var_0 )
        {
            if ( isdefined( var_3 ) && var_3.player != self )
                var_1[var_1.size] = var_3;
        }

        var_0 = var_1;
    }

    level.teamdata[self.team]["deadPlayers"] = var_0;
}

createscriptedspawnpoint( var_0, var_1 )
{
    var_2 = self;
    level endon( "game_ended" );
    var_2 endon( "disconnect" );
    var_2 notify( "doingRespawn" );

    if ( istrue( var_2.respawningfromtoken ) )
        return;

    var_2.respawningfromtoken = 1;

    if ( istrue( level.completesmokinggunquest._id_11F46 ) )
        var_2 notify( "started_spawnPlayer" );

    if ( istrue( var_0 ) )
    {
        var_2 ctgs_comparestats();
        var_2 thread scripts\mp\events::killeventtextpopup( "br_atlantis_vengeance", 0, 0 );
        wait 1.5;
    }

    var_2 current_button_progress( var_1 );
    cs_setup_arrays();
    var_2 scripts\mp\playerlogic::addtoalivecount( "rebirth2" );
    scripts\mp\gametypes\br.gsc::_id_12FD8( var_2, "rebirth2" );
    var_2 scripts\mp\gametypes\br_pickups.gsc::addrespawntoken( 1 );
    var_3 = 0;

    if ( istrue( level.completesmokinggunquest._id_11F47 ) )
        var_3 = var_2 scripts\mp\gametypes\br_gulag.gsc::_id_11A0E();

    var_4 = scripts\mp\gametypes\br_public.gsc::musictriggerthink() / 1000;
    var_5 = scripts\mp\gametypes\br_gulag.gsc::x1opsnpcweaponbarrelmodel( 0, var_4 );
    var_6 = scripts\mp\gametypes\br_gulag.gsc::_id_11977( var_5 );
    self.forcespawnorigin = var_6;

    if ( var_3 )
        var_2 scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );

    var_7 = 1.0;
    var_2 scripts\mp\gametypes\br_gulag.gsc::gulagfadetoblack();
    wait( var_7 );
    var_2 createstreakinfo_ai_turret();
    var_2 scripts\mp\hud_message::fire_rpg_to_target();
    var_2 scripts\mp\playerlogic::spawnplayer( undefined, 0 );
    var_2 scripts\cp_mp\execution::_clearexecution();
    var_2 scripts\mp\gametypes\br_pickups.gsc::initplayer();
    var_2 scripts\mp\gametypes\br_spectate.gsc::weapon_xp_iw8_ar_golf36();
    var_2.respawningfromtoken = undefined;
    var_2 csm_alg();
    var_2 thread scripts\mp\gametypes\br_gulag.gsc::_id_12E9D( 20 );
    var_2 ctf_bot_attacker_limit_for_team( var_5, var_6 );
}

current_ally_volume()
{
    wait 0.5;
    return 1;
}

ctf_bot_attacker_limit_for_team( var_0, var_1 )
{
    level notify( "update_circle_hide" );

    if ( isdefined( self.oobimmunity ) )
        scripts\mp\outofbounds::disableoobimmunity( self );

    scripts\mp\gametypes\br.gsc::parachute_get_path( self );
    _id_11D61();

    if ( !isdefined( var_0 ) )
        var_0 = scripts\mp\gametypes\br_gulag.gsc::x1opsnpcweaponbarrelmodel();

    var_2 = var_0.origin;
    var_3 = var_0.angles;
    var_4 = var_2;

    if ( isdefined( var_1 ) )
        var_4 = var_1;

    scripts\mp\gametypes\br_gulag.gsc::pilot_model();
    self setorigin( var_4, 1 );
    self setplayerangles( var_3 );
    var_5 = spawn( "script_model", var_4 );
    var_5 setmodel( "tag_origin" );
    var_5.angles = var_3;
    var_5 hide();
    var_5 showtoplayer( self );
    self playerlinktoabsolute( var_5, "tag_origin" );
    self playerhide();
    thread scripts\mp\gametypes\br_gulag.gsc::weapon_switch_hint( var_5 );
    waitframe();
    _id_11983();

    if ( getdvarint( "scr_skip_respawn_gate", 1 ) == 0 )
        scripts\mp\gametypes\br_public.gsc::_id_11A13();

    scripts\mp\gametypes\br_public.gsc::weapon_xp_iw8_ar_kilo433();

    if ( isdefined( var_1 ) )
        var_5.origin = var_2;

    var_5 playsoundtoplayer( "br_ac130_flyby", self );
    wait 1.5;
    self unlink();
    self clearsoundsubmix( "deaths_door_mp" );

    if ( scripts\mp\gametypes\br_public.gsc::revive_or_disconnect_monitor() )
        self clearsoundsubmix( "iw8_br_gulag_tutorial", 2 );
    else
        self clearsoundsubmix( "fade_to_black_all_except_music_and_scripted5", 2 );

    self clearclienttriggeraudiozone( 1 );
    self playershow();
    _id_119A7( 1 );
    var_6 = 0;

    if ( isdefined( level.validtousesticker ) )
        var_6 = level.validtousesticker;

    if ( !scripts\mp\gametypes\br_public.gsc::risk_flagspawnshiftingcenter() )
        thread scripts\cp_mp\parachute::startfreefall( var_6, 0, undefined, undefined, 1 );

    if ( scripts\mp\utility\game::getgametype() == "br" )
        self setclientomnvar( "ui_show_spectateHud", -1 );

    scripts\mp\gametypes\br_gulag.gsc::_id_11F30();
    scripts\mp\gametypes\br_armor.gsc::participantplunder();
    scripts\mp\gametypes\br_quest_util.gsc::unset_relic_martyrdom();
    scripts\mp\gametypes\br_rewards.gsc::unset_relic_martyrdom();
    scripts\mp\gametypes\br_pickups.gsc::removerespawntoken();
    wait 0.5;

    if ( scripts\mp\utility\game::getgametype() == "br" )
        thread scripts\mp\gametypes\br_gulag.gsc::weapon_should_not_get_ammo();

    waitframe();
    var_5 delete();

    if ( istrue( level._id_125C6 ) )
        scripts\mp\gametypes\br_skydive_protection.gsc::relic_amped_wait_till_revived( 1 );

    if ( scripts\mp\gametypes\br_public.gsc::revive_or_disconnect_monitor() )
        self notify( "respawn_from_gulag" );

    self notify( "can_show_splashes" );
    var_7 = "br_atlantis_redeploy";
    var_8 = undefined;

    if ( !istrue( level.previous_spawn_points ) )
        thread scripts\mp\hud_message::showsplash( var_7, 20, var_8 );
}

_id_11983()
{
    self notify( "rebirthRespawn" );
    self.health = self.maxhealth;
    scripts\mp\healthoverlay::onexitdeathsdoor( 1 );
    scripts\mp\utility\player::enableplayerforspawnlogic( 0 );
    scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "isRespawning", 0 );
}

_id_11D61()
{
    if ( isdefined( level.clear_trap_console_activation ) || getdvarint( "scr_br_fc_loadouts", 1 ) != 0 )
        self.pilot_setups = 1;
}

_id_119A7( var_0 )
{
    if ( var_0 )
    {
        self enableoffhandweapons();
        self enableusability();
    }
    else
    {
        self disableoffhandweapons();
        self disableusability();
    }
}

createserverfontstring()
{
    var_0 = level.clear_trap_console_activation;

    if ( isdefined( level.brclampdamagealtmodegg ) )
    {
        var_1 = 0;

        if ( isdefined( level.br_circle ) && isdefined( level.br_circle.circleindex ) )
        {
            var_1 = min( level.br_circle.circleindex, level.brclampdamagealtmodegg.size );
            var_1 = int( var_1 );
        }

        if ( level.brclampdamagealtmodegg.size > var_1 && isdefined( level.brclampdamagealtmodegg[var_1] ) && level.brclampdamagealtmodegg[var_1].size > 0 )
        {
            var_2 = randomintrange( 0, level.brclampdamagealtmodegg[var_1].size );
            var_0 = level.brclampdamagealtmodegg[var_1][var_2];
        }
    }

    return var_0;
}

createsmokesignalfx()
{
    var_0 = 0;

    if ( isdefined( level.brclampdamagealtmodegg ) )
    {
        if ( isdefined( level.br_circle ) && isdefined( level.br_circle.circleindex ) )
        {
            if ( level.br_circle.circleindex == level.brclampdamagealtmodegg.size - 1 )
                var_0 = 1;
        }
    }

    return var_0;
}

cs_flags_init()
{
    level.clear_trap_console_activation = createserverfontstring();
    var_0 = createsmokesignalfx();
    scripts\mp\gametypes\br.gsc::partenum( 0, 1, var_0 );

    if ( isdefined( level.isdonetsksubmap ) && level.isdonetsksubmap._id_11CCB == 1 )
        scripts\mp\gametypes\br.gsc::computer_force_player_to_exit();

    if ( !isdefined( self.lasttimedamagecalledout ) )
    {
        self.lasttimedamagecalledout = 1;
        var_1 = getdvarint( "scr_br_give_self_revive_on_spawn", 1 );

        if ( var_1 )
            scripts\mp\gametypes\br_pickups.gsc::apachepilotpool( 1 );
    }
    else
    {
        var_1 = getdvarint( "scr_br_give_self_revive_on_respawn", 0 );

        if ( var_1 )
            scripts\mp\gametypes\br_pickups.gsc::apachepilotpool( 1 );
    }

    return 0;
}

old_spectator_func()
{
    return getdvarint( "scr_br_rebirth_stop_respawn_circle_index", 3 );
}

circletimer( var_0 )
{
    if ( istrue( level.completesmokinggunquest._id_11F55 ) )
    {
        var_1 = old_spectator_func();

        if ( var_0 >= var_1 )
            helis_assault2_check_size();
    }
}

helis_assault2_check_size()
{
    level.completesmokinggunquest._id_11F55 = 0;

    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        scripts\mp\gametypes\br_killstreaks.gsc::getfilterformodifier( var_1, "respawn_disabled", undefined, 2 );
        var_1 setclientomnvar( "ui_br_plunder_extract_end_time", 0 );
    }
}

registerpuzzleinteractions( var_0 )
{
    if ( !isdefined( level.brclampdamagealtmodegg ) )
        level.brclampdamagealtmodegg = [];

    var_1 = level.brclampdamagealtmodegg.size;
    var_2 = tablelookupgetnumcols( var_0 ) - 1;
    level.brclampdamagealtmodegg[var_1] = [];

    for ( var_3 = 0; var_3 < var_2; var_3++ )
        level.brclampdamagealtmodegg[var_1][level.brclampdamagealtmodegg[var_1].size] = get_martyrdom_grenade_types( var_3, var_0 );
}

get_martyrdom_grenade_types( var_0, var_1 )
{
    var_2["loadoutArchetype"] = "archetype_assault";
    var_2["loadoutPrimary"] = tablelookup( var_1, 0, "loadoutPrimary", var_0 + 1 );
    var_2["loadoutPrimaryAttachment"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment1", var_0 + 1 );
    var_2["loadoutPrimaryAttachment2"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment2", var_0 + 1 );
    var_2["loadoutPrimaryAttachment3"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment3", var_0 + 1 );
    var_2["loadoutPrimaryAttachment4"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment4", var_0 + 1 );
    var_2["loadoutPrimaryAttachment5"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment5", var_0 + 1 );
    var_2["loadoutPrimaryCamo"] = tablelookup( var_1, 0, "loadoutPrimaryCamo", var_0 + 1 );
    var_2["loadoutPrimaryReticle"] = tablelookup( var_1, 0, "loadoutPrimaryReticle", var_0 + 1 );
    var_2["loadoutSecondary"] = tablelookup( var_1, 0, "loadoutSecondary", var_0 + 1 );
    var_2["loadoutSecondaryAttachment"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment1", var_0 + 1 );
    var_2["loadoutSecondaryAttachment2"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment2", var_0 + 1 );
    var_2["loadoutSecondaryAttachment3"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment3", var_0 + 1 );
    var_2["loadoutSecondaryAttachment4"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment4", var_0 + 1 );
    var_2["loadoutSecondaryAttachment5"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment5", var_0 + 1 );
    var_2["loadoutSecondaryCamo"] = tablelookup( var_1, 0, "loadoutSecondaryCamo", var_0 + 1 );
    var_2["loadoutSecondaryReticle"] = tablelookup( var_1, 0, "loadoutSecondaryReticle", var_0 + 1 );
    var_2["loadoutMeleeSlot"] = "none";
    var_2["loadoutEquipmentPrimary"] = tablelookup( var_1, 0, "loadoutEquipmentPrimary", var_0 + 1 );
    var_2["loadoutEquipmentSecondary"] = tablelookup( var_1, 0, "loadoutEquipmentSecondary", var_0 + 1 );
    var_2["loadoutStreakType"] = "assault";
    var_2["loadoutKillstreak1"] = "none";
    var_2["loadoutKillstreak2"] = "none";
    var_2["loadoutKillstreak3"] = "none";
    var_2["loadoutSuper"] = "super_br_extract";
    var_2["loadoutPerks"] = [ tablelookup( var_1, 0, "loadoutPerk1", var_0 + 1 ), tablelookup( var_1, 0, "loadoutPerk2", var_0 + 1 ), tablelookup( var_1, 0, "loadoutPerk3", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk1", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk2", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk3", var_0 + 1 ) ];
    var_2["loadoutGesture"] = "playerData";
    var_2["tableColumn"] = var_0;
    return var_2;
}

relic_award_one_bullet()
{
    if ( !istrue( level.completesmokinggunquest._id_13126 ) )
        return;

    if ( !isdefined( level.completesmokinggunquest._id_13550 ) )
        level.completesmokinggunquest._id_13550 = [ 60, 30 ];

    thread _id_130AE();
}

_id_130AE()
{
    level endon( "game_ended" );
    var_0 = 0;
    level.completesmokinggunquest._id_13551 = level.completesmokinggunquest._id_13550[var_0];
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level waittill( "infils_ready" );

    while ( level.completesmokinggunquest._id_11F55 )
    {
        while ( level.completesmokinggunquest._id_13551 > 0 )
        {
            wait 1;
            level.completesmokinggunquest._id_13551--;
        }

        wait 1;
        var_0 = int( min( var_0 + 1, level.completesmokinggunquest._id_13550.size - 1 ) );
        level.completesmokinggunquest._id_13551 = level.completesmokinggunquest._id_13550[var_0];
    }
}

crossbowusageloop()
{
    self endon( "death_or_disconnect" );
    self endon( "rebirth_remove_spawn_protection" );
    self._id_11D5E = 1;

    while ( !self isonground() )
        waitframe();

    self._id_11D5E = 0;
    self notify( "rebirth_remove_spawn_protection" );
}

crossbowimpactwatcher()
{
    self endon( "death_or_disconnect" );
    self endon( "rebirth_remove_launcher_protection" );
    self._id_11D5B = 1;

    while ( !self isonground() )
        waitframe();

    self._id_11D5B = 0;
    self notify( "rebirth_remove_launcher_protection" );
}

cruise_predator_direction_override()
{
    self endon( "death_or_disconnect" );
    self endon( "rebirth_remove_spawn_protection" );
    self._id_11D5E = 1;
    self waittill( "weapon_fired" );
    self._id_11D5E = 0;
    self notify( "rebirth_remove_spawn_protection" );
}

cruisepredator_assigntargetmarkers( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( level._id_11D5E )
    {
        if ( isdefined( var_1._id_11D5E ) && var_1._id_11D5E == 1 )
            var_3 = var_3 * level._id_11D5F;

        if ( isdefined( var_2 ) && isdefined( var_2._id_11D5B ) && var_2._id_11D5B == 1 )
        {
            switch ( var_4 )
            {
                case "MOD_EXPLOSIVE":
                case "MOD_GRENADE_SPLASH":
                case "MOD_GRENADE":
                case "MOD_PROJECTILE_SPLASH":
                    var_3 = var_3 * level._id_11D5D;
                    break;
            }
        }
    }

    var_3 = scripts\mp\gametypes\br.gsc::brmodifyplayerdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
    return var_3;
}

createscreeneffectext()
{
    var_0 = ( level.br_level.circleradius[1][0], level.br_level.circleradius[1][1], 0 );
    var_1 = level.br_level.br_circleradii[1];
    var_2 = scripts\mp\gametypes\br_c130.gsc::createtestc130path( var_0, var_1 );
    return var_2;
}

createobjectivelist()
{
    thread crossbow();
}

crossbow()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = distance( self.vehicle_collision_update.startpt, self.vehicle_collision_update.invuln_to_veh_crush );
    var_1 = var_0 / scripts\mp\gametypes\br_c130.gsc::getc130speed() - 5;
    wait( var_1 );

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && isdefined( var_3.br_infil_type ) && var_3.br_infil_type == "c130" && !isdefined( var_3.jumptype ) )
        {
            var_3.jumptype = "outOfBounds";
            var_3 notify( "halo_kick_c130" );
        }
    }
}

ctgs_compareweaponxp()
{
    var_0 = -15;
    var_1 = scripts\mp\gametypes\br_circle.gsc::mp_layover_patch( 1 );
    var_2 = max( 0, var_1 + var_0 );
    var_3 = getdvarfloat( "scr_br_dropbag_delay", var_2 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_11DDB( "dropBagDelay", var_3 );
}
