// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

c130_drop( var_0, var_1 )
{
    if ( c130_crate( var_1 ) )
    {
        c4_crate_player_at_max_ammo( var_1 );

        if ( !button( var_0, var_1 ) )
            c4_charge_detonate_think( var_1 );
    }

    if ( c130airdrop_oncrateuse( var_0 ) )
        c130airdrop_createpathstruct( var_0, var_1, 0 );
}

cachedomnars( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324E( var_0, var_2 );
    var_5 = bwasjuggernaut( var_0, var_1 );
    c4_placing_bc( var_0, var_1, var_3 );
    buystationtrig( var_1 );

    if ( var_4 )
    {
        if ( !var_5 )
        {
            c130successfulairdrops( var_0 );
            c4vehiclecooperator( var_0, var_1 );
        }

        if ( c130airdrop_oncrateuse( var_0 ) )
            c130airdrop_createpath( var_0 );

        if ( !buystationsusepaddingdistribution( var_0 ) )
            var_1 thread c4_obj_and_progress_clear( var_1, var_0 );
    }
}

c130_lights( var_0, var_1, var_2 )
{
    c130deliveriesinprogress( var_0.calculate_zone_node_extents, var_1, 0 );
    c4_placing_bc( var_0, var_1, var_2 );
    buystationtrig( var_1 );
    var_3 = bwasjuggernaut( var_0, var_1 );

    if ( var_3 )
    {
        c130successfulairdrops( var_0 );
        bush_trig( var_0 );
    }
}

c130_door_badplace_id( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );

    for (;;)
    {
        c4_placed_bc( var_0 );
        wait 0.5;
    }
}

c4vehiclecooperator( var_0, var_1 )
{
    var_0.calchelicoptertrailpoint = [];
    var_0.calculateandvalidatefuelstability = var_1;
    var_0.calculate_zone_node_extents = "";

    if ( c130airdrop_getvalidteaminlastplace( var_0, var_1 ) )
        c4vehiclemultkill( var_0, var_1, 1, 9 );
    else
        c4vehiclemultkill( var_0, var_1, 0, 9 );

    var_0.calchelicoptertrailpoint = scripts\engine\utility::array_randomize( var_0.calchelicoptertrailpoint );
}

c4vehiclemultkill( var_0, var_1, var_2, var_3 )
{
    for ( var_4 = var_2; var_4 <= var_3; var_4++ )
    {
        var_5 = buy_point_think( var_0, var_1, var_4 );

        if ( isdefined( var_5 ) && var_5 > 1 )
        {
            var_6 = buy_menu_closed( var_5 );

            if ( var_6 != "" )
            {
                var_0.calchelicoptertrailpoint = scripts\engine\utility::array_add( var_0.calchelicoptertrailpoint, var_6 );
                c130airdrop_heightoverride( var_0, var_5 );
            }
        }
    }
}

c130airdrop_heightoverride( var_0, var_1 )
{
    var_2 = buttonmashcount( var_1 );

    if ( var_0.calculate_zone_node_extents == "" )
        var_0.calculate_zone_node_extents = var_2;
    else
    {

    }
}

c130airdrop_getvalidteaminlastplace( var_0, var_1 )
{
    var_2 = buy_point_think( var_0, var_1, 0 );
    return isdefined( var_2 ) && var_2 == 1;
}

buy_point_think( var_0, var_1, var_2 )
{
    var_3 = buttonnotify( var_0 );

    if ( isdefined( var_3 ) )
    {
        var_4 = var_1 getplayerdata( level.loadoutsgroup, "customizationSetup", "vehicleCustomization", var_3, "tracks", var_2 );
        return var_4;
    }
    else
        return undefined;
}

buy_menu_closed( var_0 )
{
    var_1 = tablelookup( "mp_cp/vehicletracks.csv", 0, var_0, 7 );
    return var_1;
}

buttonmashcount( var_0 )
{
    var_1 = tablelookup( "mp_cp/vehicletracks.csv", 0, var_0, 8 );
    return var_1;
}

c130airdrop_createpath( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_0, 1 );

    foreach ( var_3 in var_1 )
        c130airdrop_createpathstruct( var_0, var_3, 0 );
}

c130successfulairdrops( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_0, 1 );

    foreach ( var_3 in var_1 )
        c130deliveriesinprogress( var_0.calculate_zone_node_extents, var_3, 0 );
}

c130airdrop_createpathstruct( var_0, var_1, var_2 )
{
    var_3 = bwasjuggernaut( var_0, var_1 );

    if ( isdefined( var_0.calculate_zone_node_extents ) && isdefined( var_0.calchelicoptertrailpoint ) && isdefined( var_1 ) )
    {
        if ( isdefined( var_0.calculateandvalidatefuelstability ) && ( var_3 || var_2 || var_1 getwartrackpassengerenabled() ) )
        {
            var_4 = button_sequence( var_0 );

            if ( !buy_points( var_0, var_1, var_4 ) )
            {
                var_1.calculate_zone_node_extents = var_0.calculate_zone_node_extents;
                var_1.calculate_path_struct = var_4;
                var_1 setplayermusicstate( var_0.calculate_zone_node_extents, var_0.calchelicoptertrailpoint );
            }
        }

        if ( !var_3 && !var_2 )
            var_1 thread buy_points_objectives_handler( var_1, var_0 );
    }
}

buy_points( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1.calculate_zone_node_extents ) )
        return 0;

    if ( !isdefined( var_1.calculate_path_struct ) )
        return 0;

    return var_1.calculate_zone_node_extents == var_0.calculate_zone_node_extents && var_1.calculate_path_struct == var_2;
}

c130deliveriesinprogress( var_0, var_1, var_2 )
{
    if ( c130_crate( var_1 ) )
    {
        if ( isdefined( var_0 ) && isdefined( var_1 ) )
        {
            var_1.calculate_zone_node_extents = undefined;
            var_1.calculate_path_struct = undefined;
            var_1 stopplayermusicstate( var_0 );

            if ( !var_2 )
                var_1 notify( "stop_battle_tracks_option_watch" );
        }
    }
}

c130_crate( var_0 )
{
    return isdefined( var_0.calculate_zone_node_extents ) && isdefined( var_0.calculate_path_struct );
}

bwasjuggernaut( var_0, var_1 )
{
    return isdefined( var_0.calculateandvalidatefuelstability ) && var_0.calculateandvalidatefuelstability == var_1;
}

bush_trig( var_0 )
{
    var_0.calculateandvalidatefuelstability = undefined;
    var_0.calchelicoptertrailpoint = undefined;
    var_0.calculate_zone_node_extents = undefined;
}

buystationsusepaddingdistribution( var_0 )
{
    if ( !isdefined( var_0.calchelicoptertrailpoint ) )
        return 1;

    if ( var_0.calchelicoptertrailpoint.size == 0 )
        return 1;

    return 0;
}

c4_obj_and_progress_clear( var_0, var_1 )
{
    var_0 notify( "stop_battle_tracks_toggle_think" );
    var_0 endon( "stop_battle_tracks_toggle_think" );
    var_0 endon( "death_or_disconnect" );
    var_0 endon( "last_stand_start" );
    c4_pick_up_listener( var_0 );
    var_2 = buy_point_loop( var_0 );
    cac_getweaponattachmentid( var_0, var_1, var_2 );

    if ( var_0 scripts\engine\utility::is_player_gamepad_enabled() )
        var_0 notifyonplayercommand( "update_battle_tracks_toggle_state", "+stance" );
    else
        var_0 notifyonplayercommand( "update_battle_tracks_toggle_state", "nightvision" );

    for (;;)
    {
        var_0 waittill( "update_battle_tracks_toggle_state" );
        var_3 = buttonmodel( var_0 );
        cac_getweaponattachmentid( var_0, var_1, var_3 );
    }
}

cac_getweaponattachmentid( var_0, var_1, var_2 )
{
    switch ( var_2 )
    {
        case "on":
            c4_crate_use( var_0, var_1 );
            break;
        case "off":
            c4_crate_update_hint_logic_alt( var_0, var_1 );
            break;
    }
}

c4_crate_use( var_0, var_1 )
{
    c130airdrop_isnearotherdrop( var_0, "on" );
    c130airdrop_createpath( var_1 );
}

c4_crate_update_hint_logic_alt( var_0, var_1 )
{
    c130airdrop_isnearotherdrop( var_0, "off" );
    c130successfulairdrops( var_1 );
}

buttonmodel( var_0 )
{
    switch ( var_0.pers["battleTracksToggleState"] )
    {
        case "on":
            return "off";
        case "off":
            return "on";
    }
}

c4_pick_up_listener( var_0 )
{
    if ( !isdefined( var_0.pers["battleTracksToggleState"] ) )
        c130airdrop_isnearotherdrop( var_0, "on" );
}

c130airdrop_isnearotherdrop( var_0, var_1 )
{
    var_0.pers["battleTracksToggleState"] = var_1;
    var_2 = var_0 getclientomnvar( "ui_veh_battle_tracks_toggle_state" );

    switch ( var_1 )
    {
        case "on":
            var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 1 );
            break;
        case "off":
            var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 2 );
            break;
    }
}

buystationtrig( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = var_0 getclientomnvar( "ui_veh_battle_tracks_toggle_state" );
        var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 0 );
    }
}

buy_point_loop( var_0 )
{
    return var_0.pers["battleTracksToggleState"];
}

c4_obj_and_progress( var_0, var_1 )
{
    return isdefined( var_0.pers["battleTracksToggleState"] ) && var_0.pers["battleTracksToggleState"] == var_1;
}

c4_placing_bc( var_0, var_1, var_2 )
{
    var_3 = isdefined( var_2 ) && scripts\cp_mp\vehicles\vehicle_occupancy::_id_1324E( var_0, var_2 );

    if ( var_3 )
        var_1 c4_crate_spawn( var_1 );
}

c4_crate_spawn( var_0 )
{
    var_0 notify( "stop_battle_tracks_toggle_think" );
}

buy_point_init()
{
    var_0 = level.gametype;

    if ( var_0 == "br" )
    {
        var_1 = getdvar( "scr_br_gametype", "" );

        if ( var_1 != "" )
            return var_1;
    }

    return var_0;
}

c130airdrop_oncrateuse( var_0 )
{
    if ( buy_point_init() == "x2" )
        return 0;

    if ( buystationsusepaddingdistribution( var_0 ) )
        return 0;

    if ( isdefined( var_0.calculateandvalidatefuelstability ) && c4_obj_and_progress( var_0.calculateandvalidatefuelstability, "off" ) )
        return 0;

    return 1;
}

buttonnotify( var_0 )
{
    switch ( var_0.targetname )
    {
        case "apc_russian":
            return "apc";
        case "atv":
            return "atv";
        case "cargo_truck_mg":
        case "cargo_truck":
            return "cargo_truck";
        case "jeep":
            return "jeep";
        case "little_bird_mg":
        case "little_bird":
            return "little_bird";
        case "tac_rover":
            return "tac_rover";
        case "light_tank":
            if ( isdefined( var_0.spawndata.usealtmodel ) )
                return "tank_east";
            else
                return "tank_west";
        case "motorcycle":
            return "motorcycle";
        default:
            return undefined;
    }
}

c4_placed_bc( var_0 )
{
    var_1 = var_0 getmovingplatformparent();

    if ( c130airdrop_managedrop( var_1, var_0 ) )
    {
        var_0 thread c130airdrop_startdelivery( var_1, var_0 );

        if ( !c130airdrop_spawn( var_1, var_0 ) )
        {
            c4_charge_detonate_think( var_0 );
            c130airdrop_deleteatlifetime( var_1, var_0 );
        }
    }
}

c130airdrop_deleteatlifetime( var_0, var_1 )
{
    c130airdrop_createpathstruct( var_0, var_1, 0 );
}

c4_charge_detonate_think( var_0 )
{
    if ( c130_crate( var_0 ) )
    {
        c4_crate_player_at_max_ammo( var_0 );
        c130deliverydirection( var_0 );
    }
}

c4_crate_player_at_max_ammo( var_0 )
{
    var_0 notify( "battle_tracks_standingOnVehicleTimeout" );
}

c130airdrop_startdelivery( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 endon( "disconnect" );
    var_1 notify( "battle_tracks_standingOnVehicleTimeout" );
    var_1 endon( "battle_tracks_standingOnVehicleTimeout" );
    wait 1;
    c130deliverydirection( var_1 );
}

buy_points_objectives_handler( var_0, var_1 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "stop_battle_tracks_option_watch" );
    var_2 = var_0 getwartrackpassengerenabled();

    for (;;)
    {
        wait 0.5;
        var_3 = var_0 getwartrackpassengerenabled();

        if ( var_3 != var_2 )
        {
            if ( var_3 )
            {
                if ( c130airdrop_oncrateuse( var_1 ) )
                    c130airdrop_createpathstruct( var_1, var_0, 1 );
            }
            else
                c130deliveriesinprogress( var_1.calculate_zone_node_extents, var_0, 1 );

            var_2 = var_3;
        }
    }
}

c130deliverydirection( var_0 )
{
    c130deliveriesinprogress( var_0.calculate_zone_node_extents, var_0, 0 );
}

c130airdrop_managedrop( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( !var_0 scripts\cp_mp\vehicles\vehicle::isvehicle() )
        return 0;

    if ( !cache1_defender_after_spawn( var_0 ) )
        return 0;

    if ( !scripts\cp_mp\vehicles\vehicle::_id_13229( var_0, var_1 ) )
        return 0;

    if ( !c130airdrop_oncrateuse( var_0 ) )
        return 0;

    if ( !c130airdrop_dropcrates( var_0, var_1 ) )
        return 0;

    return 1;
}

c130airdrop_spawn( var_0, var_1 )
{
    if ( !isdefined( var_1.calculate_path_struct ) )
        return 0;

    var_2 = button_sequence( var_0 );
    return var_2 == var_1.calculate_path_struct;
}

button( var_0, var_1 )
{
    if ( buystationsusepaddingdistribution( var_0 ) )
        return 0;

    return c130airdrop_spawn( var_0, var_1 );
}

button_sequence( var_0 )
{
    var_1 = var_0 getentitynumber() + "";
    var_2 = var_0.calculateandvalidatefuelstability getentitynumber() + "";
    return var_1 + var_2;
}

c130airdrop_dropcrates( var_0, var_1 )
{
    switch ( var_0.targetname )
    {
        case "cargo_truck_mg":
        case "cargo_truck":
            return scripts\mp\vehicles\vehicle_compass_mp::rungwperif_plumes( var_1, var_0, "tag_origin", -85, 0, 77, 185, 125, 40 );
        default:
            return 0;
    }
}

cache1_defender_after_spawn( var_0 )
{
    if ( isdefined( var_0.targetname ) )
    {
        switch ( var_0.targetname )
        {
            case "cargo_truck_mg":
            case "cargo_truck":
                return 1;
            default:
                return 0;
        }
    }
    else
        return 0;
}
