// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

wave_ai_debug()
{
    var_0 = self getmovingplatformparent();

    if ( isdefined( var_0 ) )
    {
        if ( respawn_after_death( var_0 ) )
            return 1;
    }

    return 0;
}

respawn_after_death( var_0 )
{
    if ( isdefined( level._id_135FD ) )
    {
        foreach ( var_2 in level._id_135FD._id_12D76 )
        {
            if ( var_2 == var_0 )
                return 1;
            else if ( isdefined( var_2.showtutsplash ) && var_2.showtutsplash == var_0 )
                return 1;
        }
    }

    return 0;
}

resetstuckthermite( var_0 )
{
    if ( isdefined( level._id_12AA4 ) )
    {
        foreach ( var_2 in level._id_12AA4 )
        {
            if ( isdefined( var_2 ) )
            {
                if ( var_2 == var_0 )
                    return 1;
                else if ( isdefined( var_2.docustommusicloopafternuke ) && var_2.docustommusicloopafternuke == var_0 )
                    return 1;
            }
        }
    }

    return 0;
}

reset_attack_next_available_time( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( isdefined( level._id_135FD ) )
    {
        foreach ( var_2 in level._id_135FD._id_12D76 )
        {
            if ( var_2 == var_0 )
                return 1;
        }
    }

    return 0;
}

icon_trigger_enter( var_0 )
{
    if ( isdefined( level._id_135FD ) )
    {
        if ( isdefined( var_0 ) && isdefined( var_0.tablet ) && istrue( var_0.tablet.tv_station_fastrope_one_infil_start_targetname_array_index ) )
            level._id_135FD notify( "train_dom_contract_complete", var_0 );
    }
}

bot_gametype_get_allied_defenders_for_team( var_0, var_1 )
{
    var_2 = 0;

    if ( var_0 > 5 )
        var_2 = 5;

    var_3 = 10;

    if ( isdefined( var_1 ) )
        var_3 = var_1;

    for ( var_4 = var_2; var_4 < var_0; var_4 = var_4 + var_3 )
    {
        if ( bot_gametype_get_allied_attackers_for_team( var_4 ) )
            return 1;
    }

    return 0;
}

bot_gametype_get_allied_attackers_for_team( var_0 )
{
    for ( var_1 = 0; var_1 < level._id_135FD.animents.size; var_1++ )
    {
        var_2 = level.scr_anim["br_cargo_train_anim"][level._id_135FD.animents[var_1].bot_br_circle_think][0];

        if ( !isdefined( var_2 ) )
            return;

        var_3 = getanimlength( var_2 );
        var_4 = level._id_135FD.animents[var_1] getanimtime( var_2 );
        var_5 = var_4 * var_3;

        if ( var_5 + var_0 > var_3 )
        {
            var_6 = var_5 + var_0 - var_3;
            var_7 = var_3 / var_6;
            var_8 = getanglesforanimtime( ( -9661, -9119, -299.007 ), ( 0, 0, 0 ), var_2, var_7 );
        }
        else
        {
            var_9 = var_5 + var_0;
            var_10 = var_9 / var_3;
            var_8 = getanglesforanimtime( ( -9661, -9119, -299.007 ), ( 0, 0, 0 ), var_2, var_10 );
        }

        if ( !isdefined( var_8 ) || !isvector( var_8 ) )
            return 0;

        if ( _id_11AF2( var_8 ) )
            return 1;
    }

    return 0;
}

bot_gametype_defender_limit_for_team()
{
    if ( isdefined( level._id_135FD ) && isdefined( level._id_135FD._id_12D76 ) )
    {
        foreach ( var_1 in level._id_135FD._id_12D76 )
        {
            if ( _id_11AF2( var_1.origin ) )
                return 1;
        }
    }

    return 0;
}

_id_11AF2( var_0, var_1 )
{
    if ( istrue( level.br_circle_disabled ) )
        return 0;

    var_2 = add_pack_playeranim();
    var_3 = add_pack_startfunc();

    if ( istrue( var_1 ) && istrue( level.extract_dialogue_played ) )
    {
        var_2 = add_spawn_disable_struct();
        var_3 = add_stealth_logic_to_group();
    }

    if ( !reset_use_think( var_0, var_2, var_3 ) )
        return 1;

    return 0;
}

reset_use_think( var_0, var_1, var_2 )
{
    if ( squared( var_0[0] - var_1[0] ) + squared( var_0[1] - var_1[1] ) <= squared( var_2 ) )
        return 1;

    return 0;
}

add_spawn_disable_struct()
{
    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
        return ( level.br_circle.safecircleent.origin[0], level.br_circle.safecircleent.origin[1], 0 );
    else
        return ( 0, 0, 0 );
}

add_stealth_logic_to_group()
{
    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
        return level.br_circle.safecircleent.origin[2];
    else
        return 0;
}

add_pack_playeranim()
{
    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.dangercircleent ) )
        return ( level.br_circle.dangercircleent.origin[0], level.br_circle.dangercircleent.origin[1], 0 );
    else
        return ( 0, 0, 0 );
}

add_pack_startfunc()
{
    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.dangercircleent ) )
        return level.br_circle.dangercircleent.origin[2];
    else
        return 0;
}

rungwperif_plumes( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = get_module_struct_from_level( var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );
    return rungwperif_planes( var_0, var_9 );
}

rungwperif_planes( var_0, var_1 )
{
    var_2 = var_1._id_1372E;
    var_3 = var_0.origin - var_2;
    var_4 = vectordot( var_3, var_1._id_11D9D );

    if ( var_4 > var_1.halflength )
        return 0;

    if ( var_4 < var_1.halflength * -1 )
        return 0;

    var_5 = vectordot( var_3, var_1._id_11D9E );

    if ( var_5 > var_1.halfwidth )
        return 0;

    if ( var_5 < var_1.halfwidth * -1 )
        return 0;

    var_6 = vectordot( var_3, var_1._id_11D9F );

    if ( var_6 > var_1.play_get_in_sequence_for_convoy_vehicle )
        return 0;

    if ( var_6 < var_1.play_get_in_sequence_for_convoy_vehicle * -1 )
        return 0;

    return 1;
}

get_module_struct_from_level( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = spawnstruct();
    var_8._id_11D9D = anglestoforward( var_0.angles );
    var_8._id_11D9E = anglestoright( var_0.angles );
    var_8._id_11D9F = anglestoup( var_0.angles );
    var_9 = var_0 gettagorigin( var_1 );
    var_8._id_1372E = var_9 + var_8._id_11D9D * var_2 + var_8._id_11D9E * var_3 + var_8._id_11D9F * var_4;
    var_10 = [];
    var_8.halflength = var_5 / 2;
    var_8.halfwidth = var_6 / 2;
    var_8.play_get_in_sequence_for_convoy_vehicle = var_7 / 2;
    return var_8;
}

watchmapselectexitonemp( var_0, var_1 )
{
    return rungwperif_plumes( var_1, var_0, "tag_origin", 0, 0, 88, 760, 112, 124 );
}

rungwperif_largeexplosions()
{
    var_0 = 0;

    if ( level.gametype == "br" )
    {
        if ( isdefined( level._id_12AA4 ) )
        {
            foreach ( var_2 in level._id_12AA4 )
            {
                if ( !isdefined( var_2 ) )
                    continue;

                if ( watchmapselectexitonemp( var_2, self ) )
                {
                    var_0 = 1;
                    break;
                }
            }
        }
    }

    return var_0;
}
