// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.br_selectdropbagclass = scripts\engine\utility::getstructarray( "ascend_solo_begin", "script_noteworthy" );
    level.handlenokillstreaks = scripts\engine\utility::getstructarray( "descend_solo_begin", "script_noteworthy" );

    if ( !isdefined( level.get_starting_ai_per_site ) )
        level.get_starting_ai_per_site = 0;

    if ( !isdefined( level._id_12CE9 ) )
        level._id_12CE9 = 0;

    foreach ( var_1 in level.br_selectdropbagclass )
        scripts\cp_mp\auto_ascender::markupascenderstruct( var_1, 1 );

    foreach ( var_4 in level.handlenokillstreaks )
        scripts\cp_mp\auto_ascender::markupascenderstruct( var_4, 0 );

    foreach ( var_1 in level.br_selectdropbagclass )
    {
        foreach ( var_4 in level.handlenokillstreaks )
        {
            if ( !isdefined( var_4._id_12673 ) && distance2dsquared( var_1.origin, var_4.origin ) < 10 )
            {
                var_1._id_12673 = var_4;
                var_4._id_12673 = var_1;
                level._id_12CE9--;
                break;
            }
        }
    }

    initanimtree();
    scripts\engine\scriptable::_id_1219E( "ascender_solo", ::br_prematchspawnlocations );
}

proxy_trigger( var_0, var_1 )
{
    var_2 = getentitylessscriptablearrayinradius( "on_floor32", "script_noteworthy" );

    foreach ( var_4 in var_2 )
    {
        if ( var_4 getscriptablehaspart( "ascender_solo" ) && var_4 getscriptableparthasstate( "ascender_solo", "on_floor32" ) )
            var_4 setscriptablepartstate( "ascender_solo", "on_floor32" );
    }
}

#using_animtree("script_model");

initanimtree()
{
    level.scr_animtree["player"] = #animtree;
    level.scr_anim["player"]["ascender_ext_up_in"] = %vm_eq_ascender_ext_up_get_on_plr;
    level.scr_animname["player"]["ascender_ext_up_in"] = "vm_eq_ascender_ext_up_get_on_plr";
    level.scr_eventanim["player"]["ascender_ext_up_in"] = "ascender_ext_up_in";
    level.scr_anim["player"]["ascender_ext_up_loop"] = %vm_eq_ascender_ext_up_loop_plr;
    level.scr_animname["player"]["ascender_ext_up_loop"] = "vm_eq_ascender_ext_up_loop_plr";
    level.scr_eventanim["player"]["ascender_ext_up_loop"] = "ascender_ext_up_loop";
    level.scr_anim["player"]["ascender_ext_up_out"] = %vm_eq_ascender_ext_up_get_off_plr;
    level.scr_animname["player"]["ascender_ext_up_out"] = "vm_eq_ascender_ext_up_get_off_plr";
    level.scr_eventanim["player"]["ascender_ext_up_out"] = "ascender_ext_up_out";
    level.scr_anim["player"]["ascender_ext_down_in"] = %vm_eq_ascender_ext_down_get_on_plr;
    level.scr_animname["player"]["ascender_ext_down_in"] = "vm_eq_ascender_ext_down_get_on_plr";
    level.scr_eventanim["player"]["ascender_ext_down_in"] = "ascender_ext_down_in";
    level.scr_anim["player"]["ascender_ext_down_loop"] = %vm_eq_ascender_ext_down_loop_plr;
    level.scr_animname["player"]["ascender_ext_down_loop"] = "vm_eq_ascender_ext_down_loop_plr";
    level.scr_eventanim["player"]["ascender_ext_down_loop"] = "ascender_ext_down_loop";
    level.scr_anim["player"]["ascender_ext_down_out"] = %vm_eq_ascender_ext_down_get_off_plr;
    level.scr_animname["player"]["ascender_ext_down_out"] = "vm_eq_ascender_ext_down_get_off_plr";
    level.scr_eventanim["player"]["ascender_ext_down_out"] = "ascender_ext_down_out";
    level.scr_anim["player"]["ascender_ext_down_cancel"] = %vm_eq_ascender_ext_down_cancel_plr;
    level.scr_animname["player"]["ascender_ext_down_cancel"] = "vm_eq_ascender_ext_down_cancel_plr";
    level.scr_eventanim["player"]["ascender_ext_down_cancel"] = "ascender_ext_down_cancel";
    level.scr_anim["player"]["ascender_ext_up_cancel"] = %vm_eq_ascender_ext_up_cancel_plr;
    level.scr_animname["player"]["ascender_ext_up_cancel"] = "vm_eq_ascender_ext_up_cancel_plr";
    level.scr_eventanim["player"]["ascender_ext_up_cancel"] = "ascender_ext_up_cancel";
    level.scr_animtree["device"] = #animtree;
    level.scr_anim["device"]["ascender_ext_up_in"] = %vm_eq_ascender_ext_up_get_on_ascender;
    level.scr_animname["device"]["ascender_ext_up_in"] = "vm_eq_ascender_ext_up_get_on_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_in"] = "ascender_ext_up_in";
    level.scr_anim["device"]["ascender_ext_up_loop"] = %vm_eq_ascender_ext_up_loop_ascender;
    level.scr_animname["device"]["ascender_ext_up_loop"] = "vm_eq_ascender_ext_up_loop_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_loop"] = "ascender_ext_up_loop";
    level.scr_anim["device"]["ascender_ext_up_out"] = %vm_eq_ascender_ext_up_get_off_ascender;
    level.scr_animname["device"]["ascender_ext_up_out"] = "vm_eq_ascender_ext_up_get_off_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_out"] = "ascender_ext_up_out";
    level.scr_anim["device"]["ascender_ext_down_in"] = %vm_eq_ascender_ext_down_get_on_ascender;
    level.scr_animname["device"]["ascender_ext_down_in"] = "vm_eq_ascender_ext_down_get_on_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_in"] = "ascender_ext_down_in";
    level.scr_anim["device"]["ascender_ext_down_loop"] = %vm_eq_ascender_ext_down_loop_ascender;
    level.scr_animname["device"]["ascender_ext_down_loop"] = "vm_eq_ascender_ext_down_loop_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_loop"] = "ascender_ext_down_loop";
    level.scr_anim["device"]["ascender_ext_down_out"] = %vm_eq_ascender_ext_down_get_off_ascender;
    level.scr_animname["device"]["ascender_ext_down_out"] = "vm_eq_ascender_ext_down_get_off_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_out"] = "ascender_ext_down_out";
    level.scr_animtree["device"] = #animtree;
    level.scr_anim["device"]["ascender_ext_up_in_wm"] = %wm_eq_ascender_ext_up_get_on_ascender;
    level.scr_animname["device"]["ascender_ext_up_in_wm"] = "wm_eq_ascender_ext_up_get_on_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_in_wm"] = "ascender_ext_up_in";
    level.scr_anim["device"]["ascender_ext_up_loop_wm"] = %wm_eq_ascender_ext_up_loop_ascender;
    level.scr_animname["device"]["ascender_ext_up_loop_wm"] = "wm_eq_ascender_ext_up_loop_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_loop_wm"] = "ascender_ext_up_loop";
    level.scr_anim["device"]["ascender_ext_up_out_wm"] = %wm_eq_ascender_ext_up_get_off_ascender;
    level.scr_animname["device"]["ascender_ext_up_out_wm"] = "wm_eq_ascender_ext_up_get_off_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_out_wm"] = "ascender_ext_up_out";
    level.scr_anim["device"]["ascender_ext_down_in_wm"] = %wm_eq_ascender_ext_down_get_on_ascender;
    level.scr_animname["device"]["ascender_ext_down_in_wm"] = "wm_eq_ascender_ext_down_get_on_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_in_wm"] = "ascender_ext_down_in";
    level.scr_anim["device"]["ascender_ext_down_loop_wm"] = %wm_eq_ascender_ext_down_loop_ascender;
    level.scr_animname["device"]["ascender_ext_down_loop_wm"] = "wm_eq_ascender_ext_down_loop_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_loop_wm"] = "ascender_ext_down_loop";
    level.scr_anim["device"]["ascender_ext_down_out_wm"] = %wm_eq_ascender_ext_down_get_off_ascender;
    level.scr_animname["device"]["ascender_ext_down_out_wm"] = "wm_eq_ascender_ext_down_get_off_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_out_wm"] = "ascender_ext_down_out";
    level.scr_anim["device"]["ascender_ext_down_cancel_wm"] = %wm_eq_ascender_ext_down_cancel_ascender;
    level.scr_animname["device"]["ascender_ext_down_cancel_wm"] = "wm_eq_ascender_ext_down_cancel_ascender";
    level.scr_eventanim["device"]["ascender_ext_down_cancel_wm"] = "ascender_ext_down_cancel";
    level.scr_anim["device"]["ascender_ext_up_cancel_wm"] = %wm_eq_ascender_ext_up_cancel_ascender;
    level.scr_animname["device"]["ascender_ext_up_cancel_wm"] = "wm_eq_ascender_ext_up_cancel_ascender";
    level.scr_eventanim["device"]["ascender_ext_up_cancel_wm"] = "ascender_ext_up_cancel";
}

_id_122CC()
{
    iprintlnbold( "Entered the print function" );
    var_0 = getentitylessscriptablearrayinradius( "on_floor32", "script_noteworthy" );

    foreach ( var_2 in var_0 )
    {
        if ( var_2 getscriptablehaspart( "ascender_solo" ) && var_2 getscriptableparthasstate( "ascender_solo", "on_floor32" ) )
            var_2 setscriptablepartstate( "ascender_solo", "on_floor32" );
    }
}

br_prematchspawnlocations( var_0, var_1, var_2, var_3, var_4 )
{
    level._id_121B9 = var_0;
    level notify( "have_scriptable" );

    if ( var_2 != "off" )
    {
        if ( istrue( var_3.usingascender ) )
            return;

        thread ascenderuse( var_0, var_3 );
    }
}

endascenderanim( var_0, var_1, var_2, var_3, var_4 )
{
    var_0 endon( "death_or_disconnect" );
    var_0 endon( "ascender_solo_cancel" );
    var_0 endon( "last_stand_start" );

    if ( var_1 )
        var_5 = "ascender_ext_up";
    else
        var_5 = "ascender_ext_down";

    if ( var_4 )
        var_5 = var_5 + "_cancel";
    else
        var_5 = var_5 + "_out";

    thread scripts\mp\anim::anim_player_solo( var_0, var_0.player_rig, var_5 );
    scripts\common\anim::anim_single_solo( var_3, var_5 + "_wm" );
}

_id_12869( var_0 )
{
    self endon( "death_or_disconnect" );
    self endon( "ascender_solo_cancel" );
    self endon( "last_stand_start" );
    wait 1.75;
    self rotateto( var_0, 1.0, 0.1, 0.1 );
}

startascenderanim( var_0, var_1, var_2, var_3, var_4 )
{
    var_0 endon( "death_or_disconnect" );
    var_0 endon( "ascender_solo_cancel" );
    var_0 endon( "last_stand_start" );
    var_0 thread scripts\mp\utility\infilexfil::infil_player_rig_updated( "player", var_0.origin, var_0.angles );
    var_2.animname = "device";
    var_2 scripts\common\anim::setanimtree();
    var_3.animname = "device";
    var_3 scripts\common\anim::setanimtree();
    var_5 = ( 1, 0, 0 );

    if ( var_1 )
    {
        var_6 = "TAG_ACCESSORY_RIGHT";
        var_7 = "ascender_ext_up_in";
        var_5 = rotatevector( ( -40.9464, 0, 0 ), self.angles );
    }
    else
    {
        var_6 = "TAG_ACCESSORY_LEFT";
        var_7 = "ascender_ext_down_in";
        var_5 = rotatevector( ( -42.2388, 0, 0 ), self.angles );
    }

    var_0.player_rig moveto( self.origin + var_5, 0.4, 0.1, 0.1 );
    var_8 = vectornormalize( var_5 * -1 );
    var_9 = scripts\cp_mp\auto_ascender::vectortoanglessafe( var_8, ( 0, 0, 1 ) );
    var_0.player_rig rotateto( var_9, 0.4, 0.1, 0.1 );

    if ( var_4 > 0 )
        thread _id_12869( self.angles + ( 0, var_4 * -1, 0 ) );

    var_10 = gettime();
    var_0 scripts\mp\utility\infilexfil::givegunless();
    var_11 = gettime();
    var_12 = 0.4 - ( var_11 - var_10 ) / 1000.0;
    var_13 = max( 0, var_12 );
    wait( var_13 );
    var_3 show();
    var_3 hidefromplayer( var_0 );
    var_2 show();
    var_2 showonlytoplayer( var_0 );
    var_0.player_rig linkto( self, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_2 linkto( var_0.player_rig, var_6, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_3 linkto( self, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_0.player_rig showonlytoplayer( var_0 );
    scripts\common\anim::anim_first_frame_solo( var_0.player_rig, var_7 );
    thread scripts\mp\anim::anim_player_solo( var_0, var_0.player_rig, var_7 );
    thread scripts\common\anim::anim_single_solo( var_3, var_7 + "_wm" );
    var_14 = getanimlength( level.scr_anim["player"][var_7] );
    wait( var_14 );
}

loopwaitanim( var_0, var_1, var_2, var_3 )
{
    self endon( "death_or_disconnect" );
    self endon( "ascender_solo_loop_done" );
    self endon( "ascender_solo_cancel" );
    self endon( "last_stand_start" );

    if ( var_3 )
        var_4 = "ascender_ext_up_loop";
    else
        var_4 = "ascender_ext_down_loop";

    var_5 = getanimlength( level.scr_anim["player"][var_4] );

    for (;;)
    {
        if ( !isdefined( self ) )
            break;

        var_0 thread scripts\mp\anim::anim_player_solo( self, self.player_rig, var_4 );
        var_0 scripts\common\anim::anim_single_solo( var_2, var_4 + "_wm" );

        if ( !isdefined( var_5 ) || var_5 == 0 )
            break;

        wait( var_5 );
    }
}

ascenderuse( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 endon( "death_or_disconnect" );
    var_1 endon( "ascender_solo_cancel" );

    if ( !scripts\cp_mp\auto_ascender::display_who_broke_stealth_message( var_0, var_1 ) )
        return;

    var_2 = level.ascendstructs[var_0.target];
    var_1.shouldskiplaststand = 1;
    var_2.setdropbagdelay = gettime();
    var_2.ascender[var_1.guid] = spawn( "script_model", var_2.origin );
    var_2.ascender[var_1.guid] setmodel( "tag_origin" );
    level.get_starting_ai_per_site++;
    var_2.scriptable = var_0;

    if ( var_1 getstance() != "stand" )
        var_1 setstance( "stand" );

    var_1 scripts\common\utility::allow_execution_victim( 0 );
    var_1 scripts\common\utility::allow_melee( 0 );
    var_1 scripts\common\utility::allow_ads( 0 );
    var_1 scripts\common\utility::allow_fire( 0 );

    if ( istrue( var_1.isjuggernaut ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "juggernaut", "canUseWeaponPickups" ) )
        {
            var_3 = var_1 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "juggernaut", "canUseWeaponPickups" ) ]]();

            if ( istrue( var_3 ) )
                var_1 disableweaponswitch();
        }
    }
    else
    {
        var_1 disableoffhandweapons();
        var_1 scripts\common\utility::allow_killstreaks( 0 );
        var_1 disableweaponswitch();
    }

    var_2.ascender[var_1.guid] scripts\cp_mp\ent_manager::registerspawncount( 2 );
    var_2.inuse = 1;
    var_1.usingascender = 1;
    var_1 scripts\common\utility::allow_usability( 0 );
    var_4 = anglestoforward( var_2.angles );
    var_5 = anglestoforward( var_1.angles );
    var_6 = vectordot( var_5, var_4 );
    var_7 = 0;

    if ( var_6 < 0.5 )
    {
        var_8 = vectorcross( var_5, var_4 );

        if ( var_8[2] < 0 )
            var_7 = 120;
        else
            var_7 = 240;
    }

    var_9 = ( 0, var_7, 0 );
    var_10 = var_2.ascendstructend;
    var_11 = var_2.ascendstructout;
    var_2.ascender[var_1.guid] dontinterpolate();
    var_2.ascender[var_1.guid].origin = var_2.origin;
    var_2.ascender[var_1.guid].angles = var_2.angles + var_9;
    var_12 = spawn( "script_model", var_2.origin );
    var_12 setmodel( "misc_wm_ascender" );
    var_12 hide();
    var_13 = spawn( "script_model", var_2.origin );
    var_13 setmodel( "misc_wm_ascender" );
    var_13 hide();
    var_1.br_remove_player_commands = var_2;
    var_1.br_pickups_init = var_12;
    var_1.br_plunder_site_use_parts = var_13;
    var_1 thread scripts\cp_mp\auto_ascender::ascenddeathlistener( var_2 );
    var_2.ascender[var_1.guid] startascenderanim( var_1, var_2.dir, var_12, var_13, var_7 );
    var_2.ascender[var_1.guid] playloopsound( "br_auto_ascender_device_lp_npc" );
    var_1 thread loopwaitanim( var_2.ascender[var_1.guid], var_12, var_13, var_2.dir );
    var_14 = distance( var_10.origin, var_2.origin );

    if ( !var_2.dir )
    {
        if ( scripts\common\utility::iscp() )
            var_15 = getdvarfloat( "scr_descender_speed_cp", scripts\cp_mp\auto_ascender::move_molotov_mortar() );
        else
            var_15 = getdvarfloat( "scr_descender_speed", scripts\cp_mp\auto_ascender::move_hvt_from_under_heli() );
    }
    else
        var_15 = getdvarfloat( "scr_ascender_speed", scripts\cp_mp\auto_ascender::move_entity() );

    var_16 = var_14 / var_15;
    var_17 = scripts\cp_mp\auto_ascender::move_ent() * var_16;
    var_18 = scripts\cp_mp\auto_ascender::move_gate() * var_16;
    var_2.ascender[var_1.guid] moveto( var_10.origin, var_16, var_17, var_18 );
    var_19 = 0;

    if ( var_1.currentweapon.basename != "iw8_gunless_infil" )
        var_1 scripts\mp\utility\infilexfil::givegunless();

    if ( getdvarint( "scr_ascender_allowDisconnect", 1 ) > 0 )
        var_19 = var_1 _id_134FC( var_2, var_16, var_12, var_13 );
    else
        wait( var_16 );

    if ( isdefined( var_2.ascender[var_1.guid] ) )
        var_2.ascender[var_1.guid] stoploopsound( "br_auto_ascender_device_lp_npc" );

    var_1 notify( "ascender_solo_loop_done" );
    var_2.ascender[var_1.guid] endascenderanim( var_1, var_2.dir, var_12, var_13, var_19 );

    if ( var_19 )
        wait( getdvarfloat( "scr_ascender_disconnectMomentumTime", 0.2 ) );

    var_2 scripts\cp_mp\auto_ascender::cleanupascenduse( var_1 );
    var_1 notify( "ascend_solo_complete" );
}

_id_134FC( var_0, var_1, var_2, var_3 )
{
    var_4 = self;
    var_5 = gettime();
    var_6 = getdvarfloat( "scr_ascender_disconnectBuffer", 0.4 );
    var_7 = 0;

    for (;;)
    {
        var_8 = ( gettime() - var_5 ) * 0.001;
        var_9 = var_1 - var_8;

        if ( var_8 >= var_1 )
            return 0;

        if ( var_8 > var_6 && var_9 > var_6 )
        {
            if ( var_7 )
                var_7 = var_4 usebuttonpressed();
            else if ( var_4 usebuttonpressed() )
                return 1;
        }
        else
            var_7 = var_4 usebuttonpressed();

        waitframe();
    }

    return 0;
}

safehouse_revive_and_move_players( var_0 )
{
    foreach ( var_2 in level.br_selectdropbagclass )
    {
        if ( distance2dsquared( var_2.origin, var_0 ) < scripts\cp_mp\auto_ascender::move_payload_to_back_of_super() )
        {
            if ( isdefined( var_2._id_12673 ) )
            {
                if ( abs( var_0[2] - var_2.origin[2] ) < scripts\cp_mp\auto_ascender::move_objective_icon() || abs( var_0[2] - var_2._id_12673.origin[2] ) < scripts\cp_mp\auto_ascender::move_objective_icon() )
                    return 1;
            }
        }
    }

    return 0;
}
