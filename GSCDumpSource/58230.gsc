// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._id_11B46 = spawnstruct();
    level._id_11B46.ai_raising_alarm = [];
    level._id_11B46.ai_molotov_used = [];
    scripts\engine\scriptable::scriptable_addusedcallback( ::scriptable_used );
    scripts\engine\scriptable::_id_1219B( ::scriptable_used );
    level thread _id_11B40();
}

_id_11B40()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "player_spawned", var_0 );
        var_0 thread _id_13030( undefined, 0, 0 );
    }
}

scriptable_used( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.type ) )
    {
        switch ( var_0.type )
        {
            case "brloot_rumble_powerup_killmonger":
                var_3 _id_11B41( "killmonger", var_0 );
                break;
            case "brloot_rumble_powerup_speed_boost":
                var_3 _id_11B41( "speed_boost", var_0 );
                break;
            case "brloot_rumble_powerup_double_points":
                var_3 _id_11B41( "double_points", var_0 );
                break;
            case "brloot_rumble_powerup_field_resupply":
                var_3 _id_11B41( "field_resupply", var_0 );
                break;
            case "brloot_plunder_cash_uncommon_1":
                if ( !isdefined( var_3._id_11B35 ) || !var_3._id_11B35 )
                    return;

                var_5 = 5;
                var_3 scripts\mp\gametypes\br_plunder.gsc::_id_11960( int( var_5 ) );
                break;
        }
    }
}

_id_11B41( var_0, var_1 )
{
    thread _id_12A92( var_0 );
    scripts\cp\equipment\cp_incendiarylauncher::accessorylogicbyindex();
    var_1 freescriptable();
    thread _id_11B3D();
}

_id_11DC3( var_0 )
{
    level._id_11B46.ai_raising_alarm[var_0._id_12A5D] = var_0;
    level._id_11B46.ai_molotov_used[var_0._id_12A5D] = [];
}

mlp2_front_truck( var_0 )
{
    if ( !branalytics_endgame( var_0 ) )
        return;

    return level._id_11B46.ai_raising_alarm[var_0];
}

_id_12A92( var_0 )
{
    if ( !branalytics_endgame( var_0 ) )
        return 0;

    var_1 = 0;
    var_2 = getdvarint( "scr_brPowerups_allow_multiple_active_powerups", 1 );

    if ( isdefined( self.ai_pushes_terminal ) && self.ai_pushes_terminal.size > 0 )
    {
        foreach ( var_5, var_4 in self.ai_pushes_terminal )
        {
            if ( var_5 == var_0 )
            {
                var_1 = 1;

                if ( isdefined( var_4._id_120C2._id_11D1D ) )
                    var_4 [[ var_4._id_120C2._id_11D1D ]]();

                continue;
            }

            if ( !var_2 )
            {
                if ( isdefined( var_4._id_120C2.gethightestpriotiryactiveburnstate ) )
                    var_4 [[ var_4._id_120C2.gethightestpriotiryactiveburnstate ]]();
            }
        }
    }

    if ( !var_1 )
        all_players_are_in_trap_room_entrance( var_0 );
}

all_players_are_in_trap_room_entrance( var_0 )
{
    var_1 = get_closest_living_player_not_in_laststand( var_0 );
    level._id_11B46.ai_molotov_used[var_0] = scripts\engine\utility::array_add( level._id_11B46.ai_molotov_used[var_0], self );
    var_2 = mode_can_play_ending( var_0 );

    if ( isdefined( var_1._id_120C2.keycardlocs ) )
        thread _id_13030( int( var_1._id_120C2.keycardlocs ), var_2, 1 );

    if ( isdefined( var_1._id_120C2.airstrike_addactivestrike ) )
        var_1 thread [[ var_1._id_120C2.airstrike_addactivestrike ]]();

    if ( isdefined( var_1._id_120C2.keycardlocs ) )
        var_1 thread _id_134DA();
    else
    {
        waitframe();
        var_1 thread getinventoryslotvo();
    }
}

_id_134DA()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "stop_powerup" );
    self.player endon( "disconnect" );
    thread initscriptablemanagement();

    if ( isdefined( self._id_120C2._id_134D9 ) )
        self thread [[ self._id_120C2._id_134D9 ]]();

    while ( gettime() < self.intel_pieces )
        waitframe();

    thread getinventoryslotvo();
}

initscriptablemanagement()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "stop_powerup" );
    self.player endon( "disconnect" );
    self.player scripts\engine\utility::_id_133F0( "death", "joined_team", "joined_spectators" );
    thread getinventoryslotvo();
}

getinventoryslotvo()
{
    self.player endon( "disconnect" );
    var_0 = self._id_120C2._id_12A5D;
    _id_13024( var_0 );
    var_1 = mode_can_play_ending( var_0 );

    if ( isdefined( self._id_120C2.keycardlocs ) )
        self.player thread _id_13030( undefined, var_1, 0 );

    if ( isdefined( self._id_120C2.gethelispawns ) )
        self thread [[ self._id_120C2.gethelispawns ]]();

    self notify( "stop_powerup" );
}

_id_13024( var_0 )
{
    if ( !branalytics_endgame( var_0 ) )
        return 0;

    has_no_focus_fire_attackers( self.player );

    if ( scripts\engine\utility::array_contains( level._id_11B46.ai_molotov_used[var_0], self.player ) )
        level._id_11B46.ai_molotov_used[var_0] = scripts\engine\utility::array_remove( level._id_11B46.ai_molotov_used[var_0], self.player );
}

get_closest_living_player_not_in_laststand( var_0 )
{
    var_1 = spawnstruct();
    var_1._id_120C2 = mlp2_front_truck( var_0 );
    var_1.player = self;
    var_1.team = self.team;
    var_1._id_12BD9 = scripts\mp\utility\teams::getteamdata( self.team, "players" );
    var_1.origin = self.origin;
    var_1.angles = self.angles;
    var_1.prematchinitblueprintloadouts = [];
    var_1._id_1298F = gettime();

    if ( isdefined( var_1._id_120C2.keycardlocs ) )
        var_1.intel_pieces = gettime() + var_1._id_120C2.keycardlocs * 1000;

    var_1 brdisablefinalkillcam( var_1.player );
    return var_1;
}

brdisablefinalkillcam( var_0 )
{
    if ( !isdefined( var_0.ai_pushes_terminal ) )
        var_0.ai_pushes_terminal = [];

    var_0.ai_pushes_terminal[self._id_120C2._id_12A5D] = self;
}

has_no_focus_fire_attackers( var_0 )
{
    if ( !isdefined( var_0.ai_pushes_terminal ) || !isdefined( var_0.ai_pushes_terminal[self._id_120C2._id_12A5D] ) )
        return;

    var_0.ai_pushes_terminal[self._id_120C2._id_12A5D] = undefined;
}

watchparachutersoverhead( var_0 )
{
    if ( scripts\engine\utility::array_contains( level._id_11B46.ai_molotov_used[var_0], self ) )
        return 1;

    return 0;
}

watch_rpg_use( var_0 )
{
    if ( !watchparachutersoverhead( var_0 ) )
        return;

    if ( !isdefined( self.ai_pushes_terminal ) )
        return;

    return self.ai_pushes_terminal[var_0];
}

branalytics_endgame( var_0 )
{
    var_1 = scripts\engine\utility::array_contains_key( level._id_11B46.ai_raising_alarm, var_0 );

    if ( isdefined( level._id_11B46.ai_raising_alarm ) && var_1 )
        return 1;
    else
        return 0;
}

waittill_player_is_in_range( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::ter_op( self.team == "axis", "allies", "axis" );
    var_4 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_4 = spawnstruct();
        var_4.intvar = var_2;
    }

    var_5 = self.team;
    var_5 = scripts\engine\utility::array_remove( var_5, self );

    foreach ( var_7 in var_5 )
        scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( var_7, var_0, var_4 );
}

waittill_player_has_dropkit_marker( var_0, var_1, var_2 )
{
    var_3 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_3 = spawnstruct();
        var_3.intvar = var_2;
    }

    scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( var_0, var_1, var_3 );
}

_id_13030( var_0, var_1, var_2 )
{
    var_3 = 0;

    if ( isdefined( var_0 ) )
    {
        if ( isfloat( var_0 ) )
            var_0 = int( var_0 );

        var_3 = var_3 + var_0 * 100;
    }

    if ( isdefined( var_1 ) )
        var_3 = var_3 + var_1 * 10;

    if ( isdefined( var_2 ) )
        var_3 = var_3 + var_2;

    self setclientomnvar( "ui_br_bodycount_reward_data", var_3 );
}

init_relic_shieldsonly( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 100;

    var_2 = randomintrange( 1, 101 );

    if ( var_1 < var_2 )
        return;

    var_3 = vip_freeze_link();
    var_4 = "brloot_rumble_powerup_" + var_3;

    if ( !isent( self ) || self isscriptable() )
    {
        var_5 = 35;
        var_6 = 75;
        var_6 = var_6 + randomfloatrange( -10, 10 );
        var_7 = var_5 + 55 + randomfloatrange( -5, 5 );
        var_8 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_0, self.origin, self.angles, undefined, var_6, var_7 );
    }
    else
        var_8 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_0, self.origin, self.angles, self );

    scripts\mp\gametypes\br_pickups.gsc::spawnpickup( var_4, var_8, 1, 1 );
}

overridepointsneeded()
{
    var_0 = vip_freeze_link();
    var_1 = "brloot_rumble_powerup_" + var_0;
    thread _id_12A92( var_0 );
}

vip_freeze_link()
{
    var_0 = [];

    foreach ( var_3, var_2 in level._id_11B46.ai_raising_alarm )
        var_0[var_0.size] = var_3;

    var_0 = scripts\engine\utility::array_randomize( var_0 );
    return var_0[0];
}

_id_11B3D()
{
    if ( level.completesmokinggunquest.name == "rumble" )
        scripts\mp\supers::givesuperpoints( scripts\mp\supers::getsuperpointsneeded() );

    if ( scripts\mp\utility\killstreak::isjuggernaut() )
        return;

    self.health = self.maxhealth;
    scripts\mp\healthoverlay::onexitdeathsdoor( 1 );
    self.br_armorhealth = self.br_maxarmorhealth;
    self setclientomnvar( "ui_br_armor_damage", 1 );
    scripts\mp\equipment\armor_plate::choppersupport_watchtargetrange( self.br_armorhealth );
    thread _id_11F75();
}

_id_11F75()
{
    self endon( "death_or_disconnect" );
    thread scripts\mp\equipment::givescavengerammo();
    thread scripts\mp\equipment::givescavengerammo();
    scripts\mp\weapons::scavengergiveammo( self );
    waitframe();
    scripts\mp\weapons::scavengergiveammo( self );
}

mode_can_play_ending( var_0 )
{
    switch ( var_0 )
    {
        case "double_points":
            return 1;
        case "killmonger":
            return 3;
        case "speed_boost":
            return 4;
    }
}
